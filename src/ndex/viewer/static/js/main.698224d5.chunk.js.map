{"version":3,"sources":["context/AppState.tsx","components/NetworkPanel/Loading.tsx","utils/cxUtil.ts","components/NetworkPanel/LGRPanel.tsx","components/CytoscapeRenderer/create-cytoscape.ts","utils/cx2cyjs.ts","utils/error/NDExError.ts","hooks/useCyjs.ts","components/CytoscapeRenderer/index.tsx","utils/credentialUtil.ts","hooks/useSearch.ts","reducer/selectionStateReducer.ts","reducer/cyReducer.ts","components/NetworkPanel/EmptyView.tsx","utils/cx2attr.ts","hooks/useAttributes.ts","utils/contextUtil.ts","components/DataPanel/EntryTable/Popup.tsx","components/DataPanel/EntryTable/VirtualizedTable2.tsx","components/DataPanel/EntryTable/index.tsx","components/PropertyPanel/PropList.tsx","components/PropertyPanel/index.tsx","components/Popup/index.tsx","utils/cyjsUtil.ts","reducer/uiStateReducer.ts","components/NavigationPanel/ExpandButton.tsx","components/NavigationPanel/index.tsx","components/FooterPanel/EdgeLimitExceededPanel.tsx","components/NetworkPanel/index.tsx","components/DataPanel/NetworkPropertyPanel/CollapsiblePanel.tsx","components/DataPanel/NetworkPropertyPanel/NetworkPropertySegment.tsx","components/DataPanel/NetworkPropertyPanel/NetworkProperties.tsx","hooks/useNetworkSummary.ts","components/DataPanel/NetworkPropertyPanel/QueryPanel/TargetNodes.ts","components/DataPanel/NetworkPropertyPanel/QueryPanel/QueryState.ts","components/DataPanel/NetworkPropertyPanel/QueryPanel/TargetSelector.tsx","components/DataPanel/NetworkPropertyPanel/QueryPanel/index.tsx","components/DataPanel/NetworkPropertyPanel/QueryPanel/ColumnSelector.tsx","components/DataPanel/NetworkPropertyPanel/QueryPanel/DBSelector.tsx","components/DataPanel/NetworkPropertyPanel/QueryPanel/StartQueryButton.tsx","components/DataPanel/NetworkPropertyPanel/QueryPanel/query-util.ts","hooks/useNetworkPermissions.ts","components/DeleteDOIButton/index.tsx","components/DataPanel/NetworkPropertyPanel/NetworkDetails.tsx","components/DataPanel/NetworkPropertyPanel/index.tsx","components/DataPanel/NetworkPropertyPanel/MinimizeButton.tsx","components/DataPanel/EntryTable/InformationPanel.tsx","hooks/useNetworkMetaData.ts","components/FooterPanel/OpenInCytoscape.tsx","components/DataPanel/index.tsx","components/DataPanel/EntryTable/WarningPanel.tsx","hooks/useCx.ts","components/DataPanel/ClosedPanel.tsx","utils/error/ResponseCode.ts","components/Title/index.tsx","utils/error/errorHandler.ts","components/MainSplitPane/MessageDialog.tsx","utils/locationUtil.ts","components/ErrorIcon/index.tsx","components/MainSplitPane/InitializationPanel.tsx","components/MainSplitPane/index.tsx","utils/browserTest.ts","components/ToolBar/ClassicModeButton.tsx","assets/images/ndex-logo.svg","components/ToolBar/NdexHomeButton.tsx","components/ToolBar/AdvancedMenu.tsx","components/ToolBar/index.tsx","assets/images/base_network.png","assets/images/neighborhood_network.png","assets/images/adjacent_network.png","assets/images/direct_network.png","assets/images/interconnect_network.png","components/FooterPanel/SearchHelpDialog.tsx","components/FooterPanel/SaveQueryButton.tsx","utils/cx2tsv.ts","components/ExportTsvMenuItem/index.tsx","components/FooterPanel/SaveQueryTSVMenuItem.tsx","components/FooterPanel/AdvancedQueryMenu.tsx","components/FooterPanel/SearchBox.tsx","components/FooterPanel/Editable.ts","components/FooterPanel/EditMetadataButton.tsx","components/ShareLinkMenuItem/index.tsx","components/CreateDOIMenuItem/index.tsx","hooks/useCurrentUser.ts","components/FooterPanel/ShareMenu.tsx","components/FooterPanel/SaveNetworkCXButton.tsx","components/FooterPanel/DeleteDialog.tsx","components/FooterPanel/DeleteButton.tsx","components/FooterPanel/index.tsx","components/AppShell/CoreComponents.tsx","components/AppShell/index.tsx","components/AccountShell/index.tsx","components/AccountSignUpPane/index.tsx","components/AccountForgotPasswordPane/index.tsx","components/TopPanel/index.tsx","App.tsx","serviceWorker.ts","theme.ts","components/ErrorBoundary/index.tsx","index.tsx"],"names":["AppContext","React","createContext","useStyles","makeStyles","theme","createStyles","root","display","width","height","placeItems","zIndex","background","item","flexDirection","justifyContent","alignItems","message","padding","color","Loading","showLoading","classes","className","Typography","variant","CircularProgress","disableShrink","size","getEntry","tag","cx","undefined","value","getNodeCount","_getObjectCount","getEdgeCount","cxObj","metaData","metaObj","_isLayoutAvailable","layout","length","Object","keys","CYJS_LAYOUTS","getCyjsLayout","layoutTh","isLayout","numObj","LGR_LAYOUT","DEF_BG_COLOR","getNetworkBackgroundColor","Array","isArray","vp","cxVersion","_extractBackgroundColorCx2","idx","entry","bgPaint","target","randomCircularLayout","nodeViews","nv","t","Math","PI","random","u","r","x","cos","y","sin","position","createLayers","edgeViews","edges","edgeIdx","id2weight","e","v","weight","push","sort","a","b","id2ev","Map","ev","set","id","i","toString","get","LGRPanel","eventHandlers","selectedNodes","selectedEdges","backgroundColor","layoutName","pickable","setLgrReference","useContext","useState","render3d","data","setData","useEffect","performance","now","result","cxVizConverter","gv","GraphViewFactory","createGraphView","graphView","onNodeClick","selectedNodeEvent","console","log","forEach","nodeId","lastSelectedNode","selected","setSelectedNodeOrEdge","onEdgeClick","selectedEdgeEvent","edgeId","lastSelectedEdge","onSelect","setSelectedObjects","onBackgroundClick","event","clearAll","commandProxy","Cytoscape","use","CyCanvas","utils","CyNetworkUtils","cx2js","CxToJs","annotationRenderer","CxToCyCanvas","NDExError","details","name","setPrototypeOf","prototype","Error","useCyjs","uuid","cyjs","setCyjs","setUuid","niceCX","rawCXtoNiceCX","attributeNameMap","elementsObj","cyElementsFromNiceCX","style","cyStyleFromNiceCX","network","elements","nodes","visualStyle","annotationNiceCX","cx2cyjs","baseStyle","lockMain","cy","lock","boxSelectionEnabled","autounselectify","unlock","initializeCy","on","tapHandler","boxSelectHandler","setTimeout","$","nodeIds","map","node","edgeIds","edge","slice","setSelectedNodesAndEdges","evtTarget","isNode","renderedPosition","updateNetwork","add","originalVS","newVS","selector","css","fromJson","update","ex","warn","drawAnnotationsFromNiceCX","drawBackground","CytoscapeRenderer","setCyReference","setBusy","cyEl","useRef","cyInstance","setCyInstance","uiState","cyReference","cyjsNetwork","animate","stop","run","fit","current","newCyInstance","container","baseParams","locked","createCytoscape","main","showSearchResult","ref","getAuthorization","ndexCredential","isGoogle","oauth","tokenId","basic","basicAuth","window","btoa","userId","password","getNdexClient","baseUrl","ndexClient","ndex","isLogin","setAuthToken","setBasicAuth","getAccessKey","searchString","params","replaceAll","split","key","pair","keyValue","edgeLimitParams","edgeLimit","errorWhenLimitIsOver","queryModeParams","direct","searchDepth","firstStepNeighborhood","directOnly","firstStepAdjacent","interconnect","twoStepNeighborhood","twoStepAdjacent","selectNodes","cxResult","len","isEdgeLimitExceeded","status","success","error","saveQuery","query","serverUrl","credential","mode","url","queryParam","authorization","settings","method","headers","Authorization","body","JSON","stringify","fetch","queryNetwork","maxEdge","assign","response","json","edgeLimitExceeded","parsedBody","kvMap","transformCx","ok","statusText","resultObject","getAttrs","nodeAttr","id2attr","pointer","n","val","useSearch","enabled","setEnabled","last","setLast","nextQuery","useQuery","cacheTime","retry","EMPTY_SELECTION","sub","lastSelected","fromMain","coordinates","showPropPanel","SelectionActions","selectionStateReducer","state","action","type","selectionState","CyActions","INITIAL_CY_REFERENCE","cyReducer","boxSizing","textAlign","title","arrow1","bottom","left","fontSize","infoIcon","palette","info","EmptyView","showIcons","getAttributeMap","isV2","version","isCxV2","getNodeAttrsV2","edgeAttr","getEdgeAttrsV2","getNodeAttrs","getEdgeAttrs","SPECIAL_TAGS","label","represents","attrDefinition","defValues","definition","defMap","getDefaultValues","attrKeys","Set","getAttributeKeys","attrs","addSourceTargetInteractionV2","addSourceTargetInteraction","source","interaction","s","useAttributes","subnetworkOnly","attr","setAttr","getContextFromCx","version2","obj","parseContext","context","oldContext","parse","reduce","c","k","toUpperCase","processList","list","listString","processItem","processListAsText","parseItem","itemString","String","prefix","processInternalLink","minWidth","border","cursor","content","margin","overflowY","titleBar","marginBottom","bullet","transform","pos","Popup","open","setOpen","Card","top","CardContent","onClick","evt","preventDefault","properties","getLinks","scrollbarWidth","scrollDiv","document","createElement","setAttribute","appendChild","offsetWidth","clientWidth","removeChild","paper","overflow","tablePanel","flexGrow","tableBody","gridRow","gridColumn","flex","pagination","spacing","borderTop","divider","pageLabel","pageSelector","marginRight","pageSelectorPanel","button","topBar","paddingRight","paddingTop","paddingLeft","tabs","tab","tabPanel","collapsiblePanel","minHeight","leftSideGridContainer","default","leftSideGrid","headerGrid","borderBottom","bodyGrid","evenRow","oddRow","cell","headerCell","fontWeight","sortableHeader","sortButton","marginLeft","borderRadius","cellOverflow","wordWrap","overflowWrap","VirtualizedTable2","columns","parentSize","openPopup","setOpenPopup","setPosition","selectedValue","setSelectedValue","gridRef","pageRef","rootRef","pagePanelHeight","setPagePanelHeight","rootPanelHeight","setRootPanelHeight","defaultColumn","useMemo","_handleResize","offsetHeight","addEventListener","rootHeight","useTable","initialState","pageIndex","pageSize","useSortBy","usePagination","useFlexLayout","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","_handleGoToPage","index","scrollToCell","columnIndex","rowIndex","_renderBodyCell","parent","_renderLeftSideCell","_renderHeaderCell","_renderLeftHeaderCell","column","alignContent","targetColumn","toggleSortBy","isSortedDesc","canSort","Header","isSorted","row","cells","cellClass","originalValue","props","children","isLongValue","substring","getCellProps","_onCellClick","getArrayString","renderedStr","ReactDOMServer","renderToString","pageX","pageY","columnWidth","columnCount","rowHeight","rowCount","clientHeight","onScroll","scrollLeft","scrollHeight","scrollTop","leftColor","scrollWidth","cellRenderer","overscanColumnCount","overscanRowCount","disabled","onChange","Number","HIDDEN_ATTR_PREFIX","EdgeAttributes","NodeAttributes","Attributes","regex","replacePeriods","text","replace","isEmptyString","startsWithNumber","includes","charAt","EntryTable","selectedObjects","attributes","letterWidths","config","getWidth","phrase","letter","getColumnWidth","rows","accessor","header","max","min","columnsList","unshift","has","filter","colName","startsWith","dataList","textDataList","textRow","ndexUrl","empty","nonEmpty","nonNumbers","numbers","sortedDataList","concat","entries","finalColumns","hasName","hasRepresents","splice","indexOf","localeCompare","paddingBottom","smallText","lineHeight","bigText","PropList","attrMap","delete","List","ListItem","disableGutters","variantMapping","caption","component","propList","overflowX","PropertyPanel","onClose","IconButton","maxWidth","maxHeight","backgroundRepeat","backgroundAttachment","backgroundSize","SOURCE","TARGET","INTERACTION","getWindowDimensions","windowWidth","innerWidth","windowHeight","innerHeight","subHeight","useParams","selectionStateDispatch","windowDimensions","setWindowDimensions","handleResize","removeEventListener","useWindowDimensions","mainNetworkNotDisplayed","setShowPropPanelFalse","sumMain","sumSub","isMultipleSelection","nonEmptyMap","noNameEdge","include","arrayItem","right","rightPanelWidth","fitContent","UIStateActions","INITIAL_UI_STATE","dataPanelOpen","activeTab","uiStateReducer","ExpandButton","uiStateDispatch","hide","setHide","tooltip","Tooltip","placement","arrow","ungrabify","unselectify","grabify","selectify","lockMainWindow","subnet","NavigationPanel","lgrReference","ButtonGroup","orientation","newLevel","zoom","zoomIn","zoomOut","warningIcon","EdgeLimitExceededPanel","snackMessage","setSnackMessage","queryMode","maxEdgeQuery","Button","ndexHttps","then","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","rootA","lowerPanel","expandButton","NetworkPanel","subCx","renderer","objectCount","cxDataSize","isWebGL2","setSubCx","noView","defSize","minSize","setSize","setSubHeight","cyDispatch","summary","setSummary","searchResult","maxNumObjects","usePrevious","getObjectCount","countFunction","count","subnetworkNodeCount","subnetworkEdgeCount","mainEventHandlers","lastSelectedType","lastSelectedId","lastSelectedCoordinates","subEventHandlers","lgrEventHandlers","setMain","setSub","setMainNetworkNotDisplayed","getMainRenderer","viewerThreshold","maxDataSize","bgColor","getLgrLayout","getSubRenderer","isLoading","pane2Style","pane1Style","maxSize","onDragFinished","newSize","disableWidth","collapsiblePanelTitle","expandIcon","float","CollapsiblePanel","openByDefault","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","segmentTitle","marginTop","NetworkPropertySegment","wrapper","innerWrapper","table","cellSpacing","borderSpacing","borderCollapse","tdTitle","whiteSpace","verticalAlign","tdContent","wordBreak","icon","formatTitle","string","formatPropertyValue","processedValue","parsedValue","formatDescription","formatDisplay","propertiesList","property","NetworkProperties","informationDisplay","descriptionDisplay","propertiesDisplay","panelState","setPanelState","description","informationTableContents","owner","creationTime","creationDate","Date","toLocaleDateString","toLocaleTimeString","modificationTime","modificationDate","externalId","visibility","indexLevel","toLowerCase","valign","informationList","rights","rightsHolder","reference","propertiesTableContent","trim","predicate","predicateString","descriptionList","rightsTable","darkBackground","netInfoOpen","descriptionOpen","propsOpen","summaryMap","getNetworkSummary","apiVersion","cache","loaded","accesskey","isValidSummary","errorMessage","subMessage","useNetworkSummary","location","useLocation","accessKey","search","TargetNodes","DB","formControl","MAIN","All","Selected","SUB","AllResult","SelectedResult","TargetSelector","setTarget","FormControl","InputLabel","htmlFor","Select","native","ButtonState","DB_URL","IQUERY","MSIGDB","ColumnSelector","setSelected","shrink","inputProps","DBSelector","tooltipText","StartQueryButton","getButton","startIcon","flexContainer","flexWrap","QueryPanel","queryState","setQueryState","allNodeAttributes","columnNames","setColumnNames","ENABLED","buttonState","setButtonState","tooltipMessages","NO_NODES_SELECTED","TOO_MANY_NODES","TOO_MANY_NODES_SELECTED","sortedNames","from","getColumnNames","_handleColumnChange","_handleTargetChange","updateButtonState","selectedColumnName","Grid","justify","xs","db","queryUrl","selectedColumn","attrValues","values","queryString","join","buildUrl","permissionsMap","getNetworkPermissions","networkPermission","getNetworkPermissionsByUUIDs","permissions","useNetworkPermissions","DeleteDOIButton","dialogOpen","setDialogOpen","handleDeleteRequest","onSuccess","cancelDOIRequest","catch","err","Fragment","Dialog","disableBackdropClick","disableEscapeKeyDown","DialogTitle","DialogContent","dividers","DialogActions","doi","grid","chip","warning","copySpan","queryPanel","NetworkDetails","warningThreshold","doiCopiedHoverText","setDoiCopiedHoverText","Chip","onCopy","clickable","onMouseEnter","nodeCount","edgeCount","queryOpen","NetworkPropertyPanel","summaryResponseData","md","closeIcon","MinimizeButton","handleClick","InformationPanel","threshold","metaDataMap","getNetworkMetaData","getMetaData","TabType","OpenInCytoscape","useQueryResult","onFailure","metaDataResponse","useNetworkMetaData","ndexNetworkProperties","port","fetchCX","Promise","resolve","reject","openButton","WarningPanel","selectedCount","baseFontSize","typography","borderLeft","tabWrapper","tabList","DEF_QUERY_STATE","SELECTION_TH","DataPanel","baseRef","titleRef","tabsRef","objCount","setObjCount","changed","setChanged","baseHeight","baseWidth","Network","tabsDisabled","setTabsDisabled","allNodeIds","setAllNodeIds","allEdgeIds","setAllEdgeIds","allNodeCount","allEdgeCount","allNodes","allEdges","idTag","allNodeIDs","Node","widths","widthSum","sandbox","getElementById","fromCharCode","getTable","nodeTabTitle","edgeTabTitle","selectedIndex","forceRenderTabPanel","lastIndex","EMPTY_CX","getCx","getCX2Network","getRawNetwork","ResponseCode","ClosedPanel","Title","Helmet","MESSAGE_MAP","BadRequest","Unauthorized","InternalServerError","NotFound","MessageDialog","setProceed","setNoView","handleCancel","useHistory","DialogContentText","getCurrentServer","protocol","host","getColor","code","Forbidden","ErrorIcon","errorIcon","initPanel","primary","progressIcon","bottomMessage","link","InitPanel","optionalMessage","showProgress","ndexLoginWrapper","dialogTitle","setDialogTitle","dialogMessage","setDialogMessage","total","click","RENDERER","mainSplitRoot","leftPanel","getDefaultPanelWidth","floor","DFE_FETCH_PARAMS","POSITIVE_INFINITY","getWindowWidth","useWindowWidth","setWindowWidth","MainSplitPane","containerRef","maxObj","th","summaryResponse","isError","isLoadingError","fetchParams","getFetchParams","curUuid","setCurUuid","cxResponse","useCx","originalCx","rightWidth","setRightWidth","containerHeight","setContainerHeight","setIsWebGL2","setCount","setCxDataSize","proceed","assignNewHeight","curRef","isSupported","ctx","getContext","WebGL2RenderingContext","isWebGL2supported","useLayoutEffect","cxSize","setDataPanelOpen","handleChange","newWidth","newRightWidth","splitPaneStyle","getBase","InitializationPanel","unknownError","originalMessage","convertError","ClassicModeButton","classicUrl","endIcon","ndexLogo","NdexHomeButton","alt","src","logo","AdvancedMenu","anchorEl","setAnchorEl","Boolean","currentTarget","disableFocusRipple","disableTouchRipple","Menu","MenuItem","ToolBar","ndexButton","setNdexCredential","setNdexLoginWrapper","lastChild","ndexServerUrl","direction","myAccountURL","onLoginStateUpdated","loginState","loginDetails","href","iconButton","flexRowContainerOuter","columnGap","flexRowContainerInner","flexColumnContainer","rowGap","flexRowItemOuter","flexBasis","flexRowItemInner","flexColumnItem","image","PaperComponent","cancel","Paper","SearchHelpDialog","handleClose","base","neighborhood","adjacent","rel","SaveQueryButton","summaryObjectCount","cyNetworkUtils","removeTabsAndPipesFromString","strToNormalize","getNodeNameFromNodeObj","nodeObj","nodeName","getEdgeInfo","counter","edgeInfo","edgeAttributes","edgeAttrs","pname","edgeCitations","citationList","citationId","citations","getNodeInfo","nodeInfo","getDefaultNodeLabel","nodeAttributes","nodeAttrs","getAttributeValue","attribute","returnStr","cx2tsv","edgeKeys","Interaction","sourceAliasOrder","nodeKeys","key1","attributeObj","attributeObjNameSource","attributeObjName","targetAliasOrder","attributeObjNameTarget","citationOrder","edgeKey","keySanitized","headersKeysSorted","fileString","nodeAttributesAlreadyProcessed","edgeAttributesAlreadyProcessed","edgeObj","sourceNodeObj","targetNodeObj","nodeAttrNormalized","nodeAttrNormalized1","edgeAttrNormalized","tabSeparatedRow","getTSVOfCurrentNiceCX","ExportTsvButton","fileName","contentType","file","Blob","URL","createObjectURL","download","exportTsv","ListItemIcon","SaveQueryTSVMenuItem","ExportTsvMenuItem","AdvancedQueryMenu","transformOrigin","shape","grey","inputRoot","inputInput","transition","transitions","create","selectEmpty","searchType","queryModes","SearchBox","disableQuery","setDisableQuery","rawQuery","setRawQuery","setQuery","setQueryMode","setSearchType","downloadProps","setShowSearchResult","setClearSelection","InputBase","autoFocus","placeholder","input","q","onKeyPress","EDITABLE","EditMetadataButton","isEditable","setIsEditable","networkSummary","isDoiAvailable","readOnly","isReadOnly","accessLevel","login","ShareLinkMenuItem","CreateDOIMenuItem","getCurrentUser","currentUser","getSignedInUser","DISABLED_MENU_TOOLTIP","ShareMenu","isOwner","setIsOwner","useCurrentUser","hasPermission","getDisabledMessage","SaveNetworkCXButton","exportCx","credentialProp","DeleteDialog","usersAccountUrl","openFeedback","setOpenFeedback","_handleClose","deleteNetwork","DeleteButton","toolBar","grow","FooterPanel","footer","CoreComponents","appShell","AppShell","googleClientId","ndexServerURL","accountShell","AccountShell","titleText","homeButton","textTransform","AccountSignUpPane","showHomeLink","setShowHomeLink","handleNDExSignOn","onSuccessLogin","onWaitForEmailValidation","userInfo","AccountForgotPasswordPane","onSuccessReset","email","fullWidth","secondary","TopPage","defNdexCredential","defSummary","App","history","useReducer","defState","basename","process","path","Provider","TopPanel","hostname","match","createTheme","blue","red","A200","ErrorBoundary","hasError","errorInfo","this","setState","reload","Component","ROOT_TAG","urlBody","updatedUrl","queryCache","QueryCache","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","resource","viewerTh","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","client","loadResource","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.698224d5.chunk.js","sourcesContent":["import React from 'react'\nimport AppState from '../model/AppState'\n\nconst AppContext = React.createContext<Partial<AppState>>({})\n\nexport default AppContext\n","import React, { FC } from 'react'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport { Typography } from '@material-ui/core'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'grid',\n      width: '100%',\n      height: '100%',\n      placeItems: 'center',\n      zIndex: 400,\n      background: '#FAFAFA',\n    },\n    item: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    message: {\n      padding: '2em',\n      color: '#999999',\n    },\n  }),\n)\n\ntype LoadingProps = {\n  message: string\n  showLoading?: boolean\n}\n\nconst Loading: FC<LoadingProps> = ({ message, showLoading = true }: LoadingProps) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <div className={classes.item}>\n        <Typography className={classes.message} variant=\"h5\">\n          {message}\n        </Typography>\n        {showLoading ? <CircularProgress disableShrink size={'10em'} color=\"secondary\" /> : null}\n      </div>\n    </div>\n  )\n}\n\nexport default Loading\n","const getEntry = (tag: string, cx: any[]) => {\n  if (tag === undefined || tag === null) {\n    return {}\n  }\n\n  if (cx === undefined || cx === null) {\n    return {}\n  }\n\n  for (let entry of cx) {\n    const value = entry[tag]\n    if (value !== undefined) {\n      return value\n    }\n  }\n  return {}\n}\n\nconst getNodeCount = (cx): number => {\n  return _getObjectCount('nodes', cx)\n}\nconst getEdgeCount = (cx): number => {\n  return _getObjectCount('edges', cx)\n}\n\nconst _getObjectCount = (tag: string, cx: object[]) => {\n  //Find metadata\n  for (const cxObj of cx) {\n    if (cxObj['metaData'] !== undefined) {\n      const metaData = cxObj['metaData']\n      for (const metaObj of metaData) {\n        if (metaObj['name'] === tag) {\n          if (metaObj['elementCount'] !== undefined) {\n            return metaObj['elementCount']\n          }\n        }\n      }\n    }\n  }\n}\n\nconst _isLayoutAvailable = (cx: object[]): boolean => {\n  const layoutTag = 'cartesianLayout'\n  const layout = getEntry(layoutTag, cx)\n  if (layout === undefined || layout.length === 0 || Object.keys(layout).length === 0) {\n    return false\n  }\n\n  return true\n}\n\n/**\n *\n * Apply layout if there is no layout information\n *\n */\nconst CYJS_LAYOUTS = {\n  COSE: 'cose',\n  CIRCLE: 'circle',\n  GRID: 'grid',\n  PRESET: 'preset',\n}\n\nconst getCyjsLayout = (cx: object[], layoutTh: number = 1000): string => {\n  const isLayout: boolean = _isLayoutAvailable(cx)\n\n  if (isLayout) {\n    return CYJS_LAYOUTS.PRESET\n  }\n\n  const numObj = getNodeCount(cx) + getEdgeCount(cx)\n\n  if (numObj < layoutTh) {\n    return CYJS_LAYOUTS.COSE\n  } else {\n    return CYJS_LAYOUTS.CIRCLE\n  }\n}\n\nconst LGR_LAYOUT = {\n  PRESET: 'preset',\n  RANDOM: 'random',\n}\nconst getLgrLayout = (cx: object[]): string => {\n  const nodes = getEntry('nodes', cx)\n  if (nodes === undefined || nodes.length === 0) {\n    return LGR_LAYOUT.PRESET\n  }\n\n  const node = nodes[0]\n  if (node === undefined) {\n    return LGR_LAYOUT.RANDOM\n  }\n\n  if (node.x === undefined || node.y === undefined || (node.x === 0 && node.y === 0)) {\n    return LGR_LAYOUT.RANDOM\n  }\n\n  return 'preset'\n}\n\nconst DEF_BG_COLOR = '#FFFFFF'\nconst getNetworkBackgroundColor = (cx: object[]): string => {\n  if (cx === undefined || cx === null || !Array.isArray(cx)) {\n    return DEF_BG_COLOR\n  }\n\n  const vp = getEntry('cyVisualProperties', cx)\n  const cxVersion = getEntry('CXVersion', cx)\n  if (vp === undefined || vp.length === 0 || Object.keys(vp).length === 0) {\n    if (cxVersion === '2.0') {\n      return _extractBackgroundColorCx2(cx)\n    }\n    return DEF_BG_COLOR\n  }\n\n  let bgColor = DEF_BG_COLOR\n  let idx = vp.length\n  while (idx--) {\n    const entry = vp[idx]\n    const target = entry['properties_of']\n    if (target !== 'network') {\n      continue\n    }\n\n    const visualPoperties = entry['properties']\n    const bgPaint = visualPoperties['NETWORK_BACKGROUND_PAINT']\n    if (bgPaint !== undefined) {\n      return bgPaint\n    }\n  }\n\n  return bgColor\n}\n\nconst _extractBackgroundColorCx2 = (cx) => {\n  const vp = getEntry('visualProperties', cx)\n  if (vp === undefined || vp.length === 0 || Object.keys(vp).length === 0) {\n    return DEF_BG_COLOR\n  }\n\n  let bgColor = DEF_BG_COLOR\n  let idx = vp.length\n  while (idx--) {\n    const entry = vp[idx]\n    const target = entry['default']\n    if (target !== undefined) {\n      const networkDefaults = target['network']\n      const bgPaint = networkDefaults['NETWORK_BACKGROUND_COLOR']\n      if (bgPaint !== undefined) {\n        return bgPaint\n      }\n    }\n  }\n\n  return bgColor\n}\n\nexport { getEntry, getNodeCount, getEdgeCount, getCyjsLayout, getLgrLayout, CYJS_LAYOUTS, getNetworkBackgroundColor }\n","import React, { useState, useEffect, useContext } from 'react'\nimport {\n  NodeView,\n  EdgeView,\n  GraphView,\n  GraphViewFactory,\n  LargeGraphRenderer,\n} from 'large-graph-renderer'\n\nimport * as cxVizConverter from '@js4cytoscape/cx-viz-converter'\nimport Loading from './Loading'\nimport { getEntry } from '../../utils/cxUtil'\nimport AppContext from '../../context/AppState'\n\ntype LGRPanelProps = {\n  eventHandlers: EventHandlers\n  selectedNodes: string[]\n  selectedEdges: string[]\n  // highlight: object\n  cx: object[]\n  backgroundColor: string\n  layoutName?: string\n  pickable?: boolean\n}\n\nexport type EventHandlers = {\n  setSelectedNodeOrEdge: Function,\n  setSelectedObjects: (nodes: NodeView[], edges: EdgeView[]) => (void),\n  clearAll: Function\n}\n\nconst LGRPanel = ({\n  eventHandlers,\n  selectedNodes,\n  selectedEdges,\n  cx,\n  backgroundColor = '#FFFFFF',\n  layoutName = 'preset',\n  pickable,\n}: LGRPanelProps) => {\n  const { setLgrReference } = useContext(AppContext)\n  const [render3d, setRender3d] = useState(false)\n  const [data, setData] = useState<GraphView | null>(null)\n\n  // TODO: support multiple selection\n  const _handleNodeClick = (\n    selectedNodeEvent: NodeView,\n    x: number,\n    y: number,\n  ): void => {\n    console.log('* Node click event:', selectedNodeEvent)\n    if (selectedNodes.length !== 0) {\n      selectedNodes.forEach((nodeId) => {\n        const lastSelectedNode = data.nodeViews.get(nodeId)\n        lastSelectedNode.selected = false\n        console.log('Clear selection:', lastSelectedNode)\n      })\n    }\n    const nodeId: string = selectedNodeEvent.id\n\n    eventHandlers.setSelectedNodeOrEdge(nodeId, 'node', { x: x, y: y })\n  }\n\n  const _handleEdgeClick = (\n    selectedEdgeEvent: EdgeView,\n    x: number,\n    y: number,\n  ): void => {\n    console.log('* Edge click event:', selectedEdgeEvent)\n    if (selectedEdges.length !== 0) {\n      selectedEdges.forEach((edgeId) => {\n        const lastSelectedEdge = data.edgeViews.get(edgeId)\n        if (lastSelectedEdge !== undefined) {\n          lastSelectedEdge.selected = false\n          console.log('Clear edge selection:', lastSelectedEdge)\n        }\n      })\n    }\n    const edgeId: string = selectedEdgeEvent.id\n    eventHandlers.setSelectedNodeOrEdge(edgeId, 'edge', { x: x, y: y })\n  }\n\n  const _handleBackgroundClick = (event: object): void => {\n    eventHandlers.clearAll()\n    console.log('Reset selection:', selectedNodes, selectedEdges)\n  }\n\n  const _handleSelected = (selectedNodes: NodeView[], selectedEdges: EdgeView[]): void => {\n\n    eventHandlers.setSelectedObjects(selectedNodes, selectedEdges)\n    console.log('Selection Set--------------',selectedNodes, selectedEdges)\n  }\n\n  useEffect(() => {\n    if (cx !== undefined && data === null) {\n      const t0 = performance.now()\n      const result = cxVizConverter.convert(cx, 'lnv')\n\n      // TODO: add better layout\n      let { nodeViews, edgeViews } = result\n      if (layoutName !== 'preset') {\n        nodeViews = randomCircularLayout(nodeViews)\n      }\n      // nodeViews = gridLayout(nodeViews)\n\n      if (edgeViews !== undefined) {\n        const edges = getEntry('edges', cx)\n        edgeViews = createLayers(edgeViews, edges)\n      }\n      const gv = GraphViewFactory.createGraphView(nodeViews, result.edgeViews)\n      setData(gv)\n    }\n  }, [cx])\n\n  if (data === null || data === undefined) {\n    const loadingMessage = 'Loading large network data.  Please wait......'\n    return <Loading message={loadingMessage} />\n  }\n\n  return (\n    <LargeGraphRenderer\n      graphView={data}\n      onNodeClick={_handleNodeClick}\n      onEdgeClick={_handleEdgeClick}\n      onSelect={_handleSelected}\n      onBackgroundClick={_handleBackgroundClick}\n      render3d={render3d}\n      backgroundColor={backgroundColor}\n      pickable={pickable}\n      commandProxy={setLgrReference}\n    />\n  )\n}\n\nconst applyHighlight = (highlight, data) => {\n  const { nodeIds, edgeIds, queryNodes } = highlight\n\n  const qSet = new Set(queryNodes)\n  const nSet = new Set(nodeIds)\n  const nodeViews = data.nodeViews\n  let len = nodeViews.size\n  for (let entry of nodeViews) {\n    const nv: NodeView = entry[1]\n    const id = entry[0]\n\n    if (nSet.has(Number.parseInt(id))) {\n      nv.color = [255, 255, 0]\n      nv.size = nv.size * 1.5\n      if (qSet.has(Number.parseInt(id))) {\n        nv.color = [255, 0, 0, 255]\n        nv.size = nv.size * 2.2\n      }\n    } else {\n      nv.color = [155, 155, 155, 8]\n    }\n  }\n\n  const eSet = new Set(edgeIds)\n  const edgeViews = data.edgeViews\n  len = edgeViews.size\n  for (let entry of edgeViews) {\n    const ev: EdgeView = entry[1]\n    const id = entry[0]\n\n    if (eSet.has(Number.parseInt(id))) {\n      ev.color = [255, 255, 0]\n    } else {\n      ev.color = [155, 155, 155, 8]\n    }\n  }\n}\n\nconst clearHighlight = (data) => {\n  const nodeViews = data.nodeViews\n  for (let entry of nodeViews) {\n    const nv: NodeView = entry[1]\n    nv.color = [255, 255, 255, 255]\n  }\n\n  const edgeViews = data.edgeViews\n  for (let entry of edgeViews) {\n    const ev: EdgeView = entry[1]\n    ev.color = [155, 155, 155, 200]\n  }\n}\n\nconst randomCircularLayout = (nodeViews: NodeView[]): NodeView[] => {\n  let idx = nodeViews.length\n  const scalingFactor = 4000 // TODO: compute from viewport\n\n  while (idx--) {\n    const nv: NodeView = nodeViews[idx]\n\n    const t = 2 * Math.PI * Math.random()\n    const u = Math.random() + Math.random()\n    let r = 0\n    if (u > 1) {\n      r = 2 - u\n    } else {\n      r = u\n    }\n    const x = r * Math.cos(t) * scalingFactor\n    const y = r * Math.sin(t) * scalingFactor\n    nv.position = [x, y]\n  }\n  return nodeViews\n}\n\nconst gridLayout = (nodeViews: NodeView[]): NodeView[] => {\n  let idx = nodeViews.length\n  const scalingFactor = 940 // TODO: compute from viewport\n\n  while (idx--) {\n    const nv: NodeView = nodeViews[idx]\n\n    const t = 2 * Math.PI * Math.random()\n    const u = Math.random() + Math.random()\n    let r = 0\n    if (u > 1) {\n      r = 2 - u\n    } else {\n      r = u\n    }\n    const x = r * Math.cos(t) * scalingFactor\n    const y = r * Math.sin(t) * scalingFactor\n    nv.position = [x, y]\n  }\n  return nodeViews\n}\n\nconst createLayers = (edgeViews: EdgeView[], edges: object[]): EdgeView[] => {\n  let edgeIdx = edges.length\n\n  const id2weight = []\n  while (edgeIdx--) {\n    const e = edges[edgeIdx]\n    const v = e['v']\n    if (v !== undefined && v.weight !== undefined) {\n      id2weight.push([e['id'], v.weight])\n    }\n  }\n\n  id2weight.sort((a, b) => b[1] - a[1])\n\n  let idx = edgeViews.length\n  const id2ev: Map<string, EdgeView> = new Map()\n  while (idx--) {\n    const ev = edgeViews[idx]\n    id2ev.set(ev.id, ev)\n  }\n  let size = id2weight.length\n  const topEdges = 100000\n  for (let i = 0; i < size; i++) {\n    const id = id2weight[i][0].toString()\n    const ev = id2ev.get(id)\n\n    if (i < topEdges) {\n      ev['layer'] = 1\n    } else {\n      ev['layer'] = 2\n    }\n  }\n\n  return edgeViews\n}\n\nexport default LGRPanel\n","import Cytoscape from 'cytoscape'\nimport CyCanvas from 'cytoscape-canvas'\nCytoscape.use(CyCanvas)\n\nconst createCytoscape = (container: Element, elements: any[] = []): object => {\n  const baseParams = {\n    container: container,\n    elements: elements,\n    layout: {\n      name: 'preset',\n      fit: true,\n    },\n    locked: true,\n  }\n\n  return new Cytoscape(baseParams)\n}\n\nexport { createCytoscape }\n","import { CxToJs, CyNetworkUtils } from '@js4cytoscape/cx2js'\nimport { CxToCyCanvas } from '@js4cytoscape/cyannotation-cx2js'\n\nconst utils = new CyNetworkUtils()\nconst cx2js = new CxToJs(utils)\n\nconst annotationRenderer = new CxToCyCanvas(cx2js);\n\nconst getAnnotationRenderer = () => {\n  return annotationRenderer\n}\n\nconst cx2cyjs = (uuid: string, cx: any) => {\n  const niceCX = utils.rawCXtoNiceCX(cx)\n  const attributeNameMap = {}\n  const elementsObj = cx2js.cyElementsFromNiceCX(niceCX, attributeNameMap)\n\n  // This contains original style.\n  const style = cx2js.cyStyleFromNiceCX(niceCX, attributeNameMap)\n  const elements = [...elementsObj.nodes, ...elementsObj.edges]\n\n  const annotationNiceCX = {\n      \"networkAttributes\" : niceCX[\"networkAttributes\"] \n        ? niceCX[\"networkAttributes\"]: { \"elements\" : [] }\n    }\n\n  return {\n    network: {\n      data: {\n        uuid,\n      },\n      elements,\n    },\n    visualStyle: style,\n    annotationNiceCX: annotationNiceCX\n  }\n}\n\nexport { cx2cyjs, getAnnotationRenderer }\n","class NDExError extends Error {\n  details: object\n\n  constructor(message: string, details: any) {\n    super(message)\n\n    this.details = details\n    this.name = new.target.name;\n\n    Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n\nexport default NDExError\n","import { cx2cyjs } from '../utils/cx2cyjs'\nimport { useState } from 'react'\nimport NDExError from '../utils/error/NDExError'\n\nexport default function useCyjs(uuid: string, cx: object[]) {\n  const [cyjs, setCyjs] = useState(null)\n  const [id, setUuid] = useState<string|null>(null)\n\n\n  if(cx === undefined || cx === null) {\n    return {}\n  }\n\n  if (id === null && cx.length >= 6) {\n    setUuid(uuid)\n\n    try {\n      setCyjs(cx2cyjs(uuid, cx))\n      return cyjs\n    } catch(e: unknown) {\n      throw new NDExError('Data conversion from CX to Cytoscape.js failed', e)\n    }\n  }\n\n  if (id === uuid) {\n    return cyjs\n  }\n\n  return {}\n}\n","import React, { useRef, useEffect, useState, useContext } from 'react'\nimport { createCytoscape } from './create-cytoscape'\nimport useCyjs from '../../hooks/useCyjs'\nimport { getAnnotationRenderer } from '../../utils/cx2cyjs'\nimport AppContext from '../../context/AppState'\n\ntype CytoscapeRendererProps = {\n  uuid: string\n  cx: object[]\n  eventHandlers: object\n  layoutName?: string\n  setCyReference: Function\n  setBusy?: Function\n  backgroundColor?: string\n}\n\nconst baseStyle = {\n  width: '100%',\n  height: '100%',\n  backgroundColor: 'rgba(0,0,0,0)',\n}\n\nconst CytoscapeRenderer = ({\n  uuid,\n  cx,\n  eventHandlers,\n  layoutName,\n  setCyReference,\n  setBusy,\n  backgroundColor,\n}: CytoscapeRendererProps) => {\n  const cyEl = useRef(null)\n  const [cyInstance, setCyInstance] = useState(null)\n  const { uiState, cyReference } = useContext(AppContext)\n\n  const cyjsNetwork = useCyjs(uuid, cx)\n  const annotationRenderer = getAnnotationRenderer()\n\n  useEffect(() => {\n    if (cyjsNetwork !== undefined && Object.keys(cyjsNetwork).length === 0) {\n      return\n    }\n\n    updateNetwork(cyjsNetwork, cyInstance, annotationRenderer, backgroundColor)\n\n    if (cyjsNetwork !== {} && cyInstance !== null) {\n      if (layoutName !== undefined && cyInstance !== null) {\n        const layout = cyInstance.layout({\n          name: layoutName,\n          animate: false,\n          stop: function () {\n            setBusy(false)\n          },\n        })\n\n        setBusy(true)\n        layout.run()\n      }\n    }\n  }, [cyjsNetwork])\n\n  useEffect(() => {\n    if (cyjsNetwork !== undefined && Object.keys(cyjsNetwork).length === 0) {\n      return\n    }\n\n    updateNetwork(cyjsNetwork, cyInstance, annotationRenderer, backgroundColor)\n\n    if (layoutName !== undefined && cyInstance !== null) {\n      const layout = cyInstance.layout({\n        name: layoutName,\n        animate: false\n      })\n      layout.run()\n      setTimeout(() => {\n        cyInstance.fit()\n      }, 400)\n    }\n  }, [cyInstance])\n\n  useEffect(() => {\n    // Create new instance of Cytoscape when element is available\n    if (cyInstance === null && cyEl !== null && cyEl.current !== null) {\n      const newCyInstance = createCytoscape(cyEl.current)\n\n      // Expose Cyjs instance to other component\n      if (setCyReference !== undefined) {\n        setCyReference(newCyInstance)\n        setCyInstance(newCyInstance)\n      }\n      initializeCy(newCyInstance, eventHandlers)\n    }\n  }, [])\n\n  if (cyInstance !== null && cyReference.main === cyInstance) {\n    lockMain(cyInstance, uiState.showSearchResult)\n  }\n  return <div style={baseStyle} ref={cyEl} />\n}\n\nconst lockMain = (cy, lock: boolean): void => {\n  if (lock) {\n    cy.boxSelectionEnabled(false)\n    cy.autounselectify(true)\n    cy.nodes().lock()\n  } else {\n    cy.boxSelectionEnabled(true)\n    cy.autounselectify(false)\n    cy.nodes().unlock()\n  }\n}\n\nconst initializeCy = (cy, eventHandlers) => {\n  cy.on('tap, click', (event) => tapHandler(cy, eventHandlers, event))\n  cy.on('boxend', (event) => boxSelectHandler(cy, eventHandlers, event))\n}\n\nconst boxSelectHandler = (cy, eventHandlers, event) => {\n  setTimeout(() => {\n    const selectedNodes = cy.$('node:selected')\n    const selectedEdges = cy.$('edge:selected')\n    const nodeIds = selectedNodes.map((node) => node.data().id)\n    const edgeIds = selectedEdges.map((edge) => edge.data().id.slice(1))\n    eventHandlers.setSelectedNodesAndEdges(nodeIds, edgeIds, null, null, null)\n  }, 5)\n}\nconst tapHandler = (cy, eventHandlers, event) => {\n  const evtTarget = event.target\n  if (evtTarget === cy) {\n    setTimeout(() => {\n      eventHandlers.clearAll()\n    }, 10)\n  } else {\n    const data = evtTarget.data()\n\n    if (evtTarget.isNode()) {\n      setTimeout(() => {\n        const selectedNodes = cy.$('node:selected')\n        const selectedEdges = cy.$('edge:selected')\n        const nodeIds = selectedNodes.map((node) => node.data().id)\n        const edgeIds = selectedEdges.map((edge) => edge.data().id.slice(1))\n        eventHandlers.setSelectedNodesAndEdges(\n          nodeIds,\n          edgeIds,\n          'node',\n          [data.id],\n          event.renderedPosition,\n        )\n      }, 5)\n    } else {\n      setTimeout(() => {\n        const selectedNodes = cy.$('node:selected')\n        const selectedEdges = cy.$('edge:selected')\n        const nodeIds = selectedNodes.map((node) => node.data().id)\n        const edgeIds = selectedEdges.map((edge) => edge.data().id.slice(1))\n        eventHandlers.setSelectedNodesAndEdges(\n          nodeIds,\n          edgeIds,\n          'edge',\n          [data.id.slice(1)],\n          event.renderedPosition,\n        )\n      }, 5)\n    }\n  }\n}\n\nconst addExtraStyle = (visualStyle) => {\n  const faded = {\n    selector: '.faded',\n    css: {\n      'background-opacity': 0.1,\n      'text-opacity': 0.1,\n      'border-opacity': 0.1,\n    },\n  }\n\n  const highlight = {\n    selector: '.highlight',\n    css: {\n      'background-opacity': 1,\n      'text-opacity': 1,\n      'border-opacity': 1,\n    },\n  }\n\n  visualStyle.push(faded)\n  visualStyle.push(highlight)\n\n  return visualStyle\n}\n\nconst updateNetwork = (cyjs, cy, annotationRenderer, backgroundColor) => {\n  const { network } = cyjs\n  if (network !== undefined && network !== null && cy !== null) {\n    const elements = cyjs.network.elements\n    cy.add(elements)\n\n    const originalVS = cyjs.visualStyle\n    const newVS = addExtraStyle(originalVS)\n    try {\n      const newState = cy.style().fromJson(newVS)\n      newState.update()\n    } catch (ex) {\n      console.warn('The visual style object contains invalid value:', ex)\n    }\n    annotationRenderer.drawAnnotationsFromNiceCX(cy, cyjs.annotationNiceCX)\n    annotationRenderer.drawBackground(cy, backgroundColor)\n  }\n}\n\nexport default CytoscapeRenderer\n","import NdexCredential from '../model/NdexCredential'\nimport * as ndex from '@js4cytoscape/ndex-client'\n\nconst getGoogleHeader = (userInfo) => {\n  const token = userInfo.tokenObj.token_type + ' ' + userInfo.tokenObj.id_token\n  return {\n    authorization: token,\n  }\n}\n\nconst getAuthorization = (ndexCredential: NdexCredential) => {\n  if (ndexCredential.isGoogle) {\n    const idToken =  ndexCredential.oauth['loginDetails'].tokenId;\n    return  'Bearer ' + idToken;\n  } else if (ndexCredential.basic) {\n    const basicAuth = ndexCredential.basic\n    return 'Basic ' + window.btoa(basicAuth.userId + ':' + basicAuth.password);\n  }\n  return undefined;\n}\n\nconst getNdexClient = (baseUrl: string, ndexCredential: NdexCredential) => {\n  const ndexClient = new ndex.NDEx(baseUrl)\n  \n  if (!ndexCredential.isLogin) {\n    // Client without credential.\n    console.warn('Not logged-in. Public networks only.')\n    return ndexClient\n  }\n  \n  if (ndexCredential.isGoogle) {\n    ndexClient.setAuthToken(ndexCredential.oauth['loginDetails'].tokenId);\n    //console.log('Auth Token ID: ' + ndexCredential.oauth['loginDetails'].tokenId);\n    //console.log('NDEx client with OAuth ::', ndexClient)\n  } else if (ndexCredential.basic) {\n    const basicAuth = ndexCredential.basic\n    ndexClient.setBasicAuth(basicAuth.userId, basicAuth.password)\n    //console.log('NDEx client with Basic Auth ::', ndexClient)\n  }\n\n  return ndexClient\n}\n\nconst getAccessKey = (searchString: string):string => {\n  const trimed = searchString.replaceAll('?', '')\n  const params = trimed.split('&')\n  let key: string | null = null\n  params.forEach(pair => {\n    const keyValue = pair.split('=')\n    if(keyValue[0] === 'accesskey') {\n      key = keyValue[1]\n    }\n  })\n  return key\n}\n\n\nexport { getGoogleHeader, getAuthorization,  getNdexClient, getAccessKey }\n","import { useQuery } from 'react-query'\nimport HttpResponse from '../api/HttpResponse'\nimport NdexCredential from '../model/NdexCredential'\nimport { getAuthorization } from '../utils/credentialUtil'\nimport { useState, useEffect } from 'react'\n\nconst DEF_MAX_EDGE = 10000\n\nconst edgeLimitParams = {\n  edgeLimit: DEF_MAX_EDGE,\n  errorWhenLimitIsOver: true,\n}\n\nconst queryModeParams = {\n  direct: {\n    searchDepth: 1,\n  },\n  firstStepNeighborhood: {\n    directOnly: false,\n    searchDepth: 1,\n  },\n  firstStepAdjacent: {\n    directOnly: true,\n    searchDepth: 1,\n  },\n  interconnect: {\n    searchDepth: 2,\n  },\n  twoStepNeighborhood: {\n    directOnly: false,\n    searchDepth: 2,\n  },\n  twoStepAdjacent: {\n    directOnly: true,\n    searchDepth: 2,\n  },\n}\n\nconst selectNodes = (cxResult: object[]): string[] => {\n  let len = cxResult.length\n  let nodes = undefined\n  while (len--) {\n    nodes = cxResult[len]['nodes']\n    if (nodes !== undefined) {\n      break\n    }\n  }\n\n  if (nodes === undefined) {\n    return []\n  }\n\n  const nodeIds = nodes.map((node) => {\n    return node['@id']\n  })\n\n  return nodeIds\n}\n\nconst isEdgeLimitExceeded = (cx) => {\n  for (let tag in cx) {\n    const value = cx[tag]\n    const status = value['status']\n    if (status && status.length > 0) {\n      if (status[0].success) {\n        return false\n      } else {\n        return status[0].error === 'EdgeLimitExceeded'\n      }\n    }\n  }\n}\n\nexport const saveQuery = async (\n  uuid: string,\n  query: string,\n  serverUrl: string,\n  credential: NdexCredential,\n  mode: string,\n) => {\n  if (uuid === undefined || uuid === null || uuid.length === 0) {\n    return {}\n  }\n\n  if (query === undefined || query === null || query.length === 0) {\n    return {}\n  }\n\n  let url = `${serverUrl}/v2/search/network/${uuid}/query?save=true`\n  if (mode === 'interconnect' || mode === 'direct') {\n    url = `${serverUrl}/v2/search/network/${uuid}/interconnectquery?save=true`\n  }\n\n  const queryParam = queryModeParams[mode]\n  queryParam['searchString'] = query\n\n  const authorization = getAuthorization(credential)\n\n  const settings = {\n    method: 'POST',\n    // mode: 'cors',\n    headers: authorization\n      ? {\n          'Content-Type': 'application/json',\n          Authorization: authorization,\n        }\n      : {\n          'Content-Type': 'application/json',\n        },\n    body: JSON.stringify(queryParam),\n  }\n\n  return fetch(url, settings)\n}\n\nconst queryNetwork = async (\n  uuid: string,\n  query: string,\n  serverUrl: string,\n  credential: NdexCredential,\n  mode: string,\n  maxEdge: number,\n) => {\n  if (uuid === undefined || uuid === null || uuid.length === 0) {\n    return {}\n  }\n\n  if (query === undefined || query === null || query.length === 0) {\n    return {}\n  }\n\n  let url = `${serverUrl}/v2/search/network/${uuid}/query`\n  if (mode === 'interconnect' || mode === 'direct') {\n    url = `${serverUrl}/v2/search/network/${uuid}/interconnectquery`\n  }\n\n  edgeLimitParams['edgeLimit'] = maxEdge\n  const queryParam = Object.assign(\n    Object.assign({}, queryModeParams[mode], edgeLimitParams),\n  )\n  queryParam['searchString'] = query\n\n  const authorization = getAuthorization(credential)\n\n  const settings = {\n    method: 'POST',\n    // mode: 'cors',\n    headers: authorization\n      ? {\n          'Content-Type': 'application/json',\n          Authorization: authorization,\n        }\n      : {\n          'Content-Type': 'application/json',\n        },\n    body: JSON.stringify(queryParam),\n  }\n\n  let response: HttpResponse<object>\n  try {\n    response = await fetch(url, settings)\n    const cx = await response.json()\n    const edgeLimitExceeded = isEdgeLimitExceeded(cx)\n    response.parsedBody = {\n      nodeIds: selectNodes(cx),\n      kvMap: transformCx(cx),\n      cx,\n      edgeLimitExceeded,\n    }\n  } catch (ex) {\n    console.error('Query API Call error:', ex)\n  }\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  return response.parsedBody\n}\n\nconst transformCx = (cx: object[]) => {\n  const resultObject = {}\n\n  let len = cx.length\n  while (len--) {\n    const entry = cx[len]\n    const key = Object.keys(entry)[0]\n    const value = entry[key]\n\n    resultObject[key] = value\n  }\n  return getAttrs(resultObject)\n}\n\nconst getAttrs = (kvMap: object) => {\n  const nodeAttr = kvMap['nodeAttributes']\n  const nodes = kvMap['nodes']\n\n  const id2attr = {}\n\n  if (nodeAttr === undefined) {\n    return id2attr\n  }\n\n  let len = nodeAttr.length\n  while (len--) {\n    const entry = nodeAttr[len]\n    const pointer = entry['po']\n\n    let current = id2attr[pointer]\n    if (current === undefined) {\n      current = new Map()\n    }\n    current.set(entry['n'], entry['v'])\n    id2attr[pointer] = current\n  }\n\n  len = nodes.length\n  while (len--) {\n    const n = nodes[len]\n    const id = n['@id']\n    const val = n['n']\n    let current = id2attr[id]\n    if (current === undefined) {\n      current = new Map()\n    }\n    current.set('name', val)\n    id2attr[id] = current\n  }\n\n  return id2attr\n}\n\nconst useSearch = (\n  uuid: string,\n  query: string,\n  serverUrl: string,\n  credential: NdexCredential,\n  mode: string,\n  maxEdge: number,\n) => {\n  // Make this hook stateful to avoid multiple calls\n  const [enabled, setEnabled] = useState(false)\n  const [last, setLast] = useState(null)\n\n  useEffect(() => {\n    const nextQuery = {\n      uuid,\n      query,\n      mode,\n    }\n\n    if (nextQuery === last) {\n      setEnabled(false)\n    } else {\n      if (nextQuery === null || query === '') {\n        setEnabled(false)\n      } else {\n        setEnabled(true)\n      }\n      setLast(nextQuery)\n    }\n\n    return () => {}\n  }, [uuid, query, mode])\n\n  return useQuery(\n    ['queryNetwork', uuid, query, serverUrl, credential, mode, maxEdge],\n    () => queryNetwork(uuid, query, serverUrl, credential, mode, maxEdge),\n    {\n      enabled: enabled,\n      cacheTime: 1000,\n      retry: false,\n    },\n  )\n}\n\nexport default useSearch\n","/**\n * Each list contains selected object IDs (string)\n */\nexport type Selected = {\n  nodes: string[]\n  edges: string[]\n}\n\nexport type Coordinates = {\n  x: number\n  y: number\n}\n\nexport type LastSelected = {\n  isNode: boolean\n  fromMain: boolean\n  id: number\n  coordinates: Coordinates\n  showPropPanel: boolean\n}\n\nexport type SelectionState = {\n  main: Selected\n  sub: Selected\n  lastSelected: LastSelected\n}\n\nexport const EMPTY_SELECTION: SelectionState = {\n  main: {\n    nodes: [],\n    edges: [],\n  },\n  sub: {\n    nodes: [],\n    edges: [],\n  },\n  lastSelected: {\n    isNode: null,\n    fromMain: null,\n    id: null,\n    coordinates: {\n      x: 0,\n      y: 0,\n    },\n    showPropPanel: false,\n  },\n}\n\nexport type SelectionAction = {\n  type: string\n  selectionState: SelectionState\n}\n\nexport const SelectionActions = {\n  CLEAR_ALL_MAIN: 'clearAllMain',\n  CLEAR_ALL_SUB: 'clearAllSub',\n  SET_MAIN_NODES_AND_EDGES: 'setMain',\n  SET_SUB_NODES_AND_EDGES: 'setSub',\n  CLOSE_PROP_PANEL: 'closePropPanel',\n}\n\nconst selectionStateReducer = (\n  state: SelectionState,\n  action: SelectionAction,\n): SelectionState => {\n  switch (action.type) {\n    case SelectionActions.SET_MAIN_NODES_AND_EDGES:\n      return {\n        ...state,\n        main: action.selectionState.main,\n        lastSelected: action.selectionState.lastSelected,\n      }\n    case SelectionActions.SET_SUB_NODES_AND_EDGES:\n      return {\n        ...state,\n        sub: action.selectionState.sub,\n        lastSelected: action.selectionState.lastSelected,\n      }\n    case SelectionActions.CLEAR_ALL_MAIN:\n      return {\n        ...state,\n        main: { nodes: [], edges: [] },\n        lastSelected: { ...state.lastSelected, showPropPanel: false },\n      }\n    case SelectionActions.CLEAR_ALL_SUB:\n      return {\n        ...state,\n        sub: { nodes: [], edges: [] },\n        lastSelected: { ...state.lastSelected, showPropPanel: false },\n      }\n    case SelectionActions.CLOSE_PROP_PANEL:\n      return {\n        ...state,\n        lastSelected: { ...state.lastSelected, showPropPanel: false },\n      }\n    default:\n      throw new Error('Invalid action')\n  }\n}\n\nexport default selectionStateReducer\n","import CyReference from '../model/CyReference'\n\nexport type CyAction = {\n  type: string\n  cyReference: any\n}\n\nexport const CyActions = {\n  SET_MAIN: 'setMain',\n  SET_SUB: 'setSub',\n}\n\nexport const INITIAL_CY_REFERENCE: CyReference = {\n  main: null,\n  sub: null\n}\n\nconst cyReducer = (state: CyReference, action: CyAction): CyReference => {\n  switch (action.type) {\n    case CyActions.SET_MAIN:\n      return { ...state, main: action.cyReference }\n    case CyActions.SET_SUB:\n      return { ...state, sub: action.cyReference }\n    default:\n      throw new Error('Invalid action')\n  }\n}\n\nexport default cyReducer\n","import React, { FC } from 'react'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport { Typography } from '@material-ui/core'\nimport InfoIcon from '@material-ui/icons/Info'\n\nimport DownArrowIcon from '@material-ui/icons/ArrowDownward'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      boxSizing: 'border-box',\n      display: 'grid',\n      width: '100%',\n      height: '100%',\n      placeItems: 'center',\n      background: '#FFFFFF',\n      zIndex: 0\n    },\n    item: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: '1em',\n      width: '55%',\n    },\n    message: {\n      padding: '0.5em',\n      color: '#999999',\n      textAlign: 'center',\n    },\n    title: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    arrow1: {\n      position: 'fixed',\n      color: '#999999',\n      bottom: '2vh',\n      left: '1vw',\n      fontSize: '7em',\n    },\n    infoIcon: {\n      color: theme.palette.info.main,\n      fontSize: '7em',\n    },\n  }),\n)\n\ntype EmptyViewProps = {\n  title: string\n  message?: string\n  showIcons?: boolean\n}\n\nconst EmptyView: FC<EmptyViewProps> = ({ title = '-', message = '-', showIcons = false }: EmptyViewProps) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <div className={classes.item}>\n        <InfoIcon fontSize=\"inherit\" className={classes.infoIcon} />\n        <div className={classes.title}>\n          <Typography className={classes.message} variant=\"h5\">\n            {title}\n          </Typography>\n        </div>\n        <Typography className={classes.message} variant=\"subtitle1\">\n          {message}\n        </Typography>\n      </div>\n      {showIcons ? (\n        <div className={classes.arrow1}>\n          <Typography variant=\"h6\">Query this network from here.</Typography>\n          <DownArrowIcon fontSize=\"inherit\" />\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default EmptyView\n","const CX2_TAG = 'CXVersion'\n\nconst isCxV2 = (cx: object[]) => {\n  let len = cx.length\n  while (len--) {\n    const entry = cx[len]\n    const version = entry[CX2_TAG]\n    if (version !== undefined && version === '2.0') {\n      return true\n    }\n  }\n\n  return false\n}\n\nexport const getAttributeMap = (cx: object[]) => {\n  const isV2 = isCxV2(cx)\n  const resultObject = {}\n  let len = cx.length\n  while (len--) {\n    const entry = cx[len]\n    const key = Object.keys(entry)[0]\n    const value = entry[key]\n\n    if (resultObject[key] === undefined) {\n      if (key in resultObject) {\n        resultObject[key].push(...value)\n      } else {\n        resultObject[key] = value\n      }\n    }\n  }\n  if (isV2) {\n    const nodeAttr = getNodeAttrsV2(resultObject)\n    return {\n      nodeAttr: nodeAttr,\n      edgeAttr: getEdgeAttrsV2(nodeAttr, resultObject),\n    }\n  } else {\n    const nodeAttr = getNodeAttrs(resultObject)\n    return {\n      nodeAttr,\n      edgeAttr: getEdgeAttrs(nodeAttr, resultObject),\n    }\n  }\n}\n\nconst getDefaultValues = (\n  definition: object,\n  tag: string,\n): Map<string, any> => {\n  const defValues = new Map<string, any>()\n\n  const defMap = definition[tag]\n  const keys = Object.keys(defMap)\n  keys.forEach((key) => {\n    const entry = defMap[key]\n    const val = entry['v']\n    if (val !== undefined) {\n      defValues.set(key, val)\n    }\n  })\n  return defValues\n}\n\nconst getAttributeKeys = (definition: object, tag: string): Set<string> => {\n  const defMap = definition[tag]\n  const keys: string[] = Object.keys(defMap)\n  return new Set(keys)\n}\n\nconst getNodeAttrsV2 = (kvMap: object) => {\n  const SPECIAL_TAGS = {\n    name: {\n      tag: 'n',\n      label: 'name',\n    },\n    represents: {\n      tag: 'r',\n      label: 'represents',\n    },\n  }\n\n  const attributeDeclarationsTag = 'attributeDeclarations'\n  const attrDefinition = kvMap[attributeDeclarationsTag]\n\n  const defValues = getDefaultValues(attrDefinition[0], 'nodes')\n  const attrKeys = getAttributeKeys(attrDefinition[0], 'nodes')\n  const nodes = kvMap['nodes']\n  const id2attr = {}\n\n  let len = nodes.length\n  while (len--) {\n    const entry = nodes[len]\n    const attrs = entry['v']\n    const current = new Map()\n    attrKeys.forEach((key) => {\n      if (\n        key === SPECIAL_TAGS.name.label ||\n        key === SPECIAL_TAGS.represents.label\n      ) {\n        const tag = SPECIAL_TAGS[key]['tag']\n        const label = SPECIAL_TAGS[key]['label']\n        const val = attrs[tag]\n        current.set(label, val)\n      } else {\n        let value = attrs ? attrs[key] : undefined\n        if (value === undefined) {\n          // Try default value\n          value = defValues.get(key)\n        }\n        if (value !== undefined) {\n          current.set(key, value)\n        }\n      }\n    })\n    id2attr[entry.id] = current\n  }\n  return id2attr\n}\n\nconst getEdgeAttrsV2 = (nodeAttr, kvMap: object) => {\n  const edges = kvMap['edges']\n  const id2attr = {}\n\n  if (edges === undefined || edges.length === 0) {\n    addSourceTargetInteractionV2(nodeAttr, edges, id2attr)\n    return id2attr\n  }\n\n  let len = edges.length\n  while (len--) {\n    const e = edges[len]\n    const id = e['id']\n    const current = new Map()\n\n    const attrs = e['v']\n    if (attrs !== undefined && attrs !== null) {\n      const keys = Object.keys(attrs)\n      keys.forEach((key) => {\n        if (key !== 'i') {\n          current.set(key, attrs[key])\n        }\n      })\n    }\n    id2attr[id] = current\n  }\n\n  addSourceTargetInteractionV2(nodeAttr, edges, id2attr)\n  return id2attr\n}\n\nconst getEdgeAttrs = (nodeAttr, kvMap: object) => {\n  const edgeAttr = kvMap['edgeAttributes']\n  const edges = kvMap['edges']\n  const id2attr = {}\n\n  if (edgeAttr === undefined) {\n    addSourceTargetInteraction(nodeAttr, edges, id2attr)\n    return id2attr\n  }\n\n  let len = edgeAttr.length\n  while (len--) {\n    const entry = edgeAttr[len]\n    const pointer = entry['po']\n\n    let current = id2attr[pointer]\n    if (current === undefined) {\n      current = new Map()\n    }\n    current.set(entry['n'], entry['v'])\n    id2attr[pointer] = current\n  }\n\n  addSourceTargetInteraction(nodeAttr, edges, id2attr)\n  return id2attr\n}\n\nconst addSourceTargetInteraction = (nodeAttr, edges, id2attr) => {\n  if (edges === undefined) {\n    return\n  }\n  let len = edges.length\n  while (len--) {\n    const e = edges[len]\n    const id = e['@id']\n    let current = id2attr[id]\n    if (current === undefined) {\n      current = new Map()\n      id2attr[id] = current\n    }\n    const source = e['s']\n    const target = e['t']\n    const interaction = e['i']\n    const s = nodeAttr[source]\n    const t = nodeAttr[target]\n\n    // if (s !== undefined) {\n    //   id2attr[id].set('source', s.get('name'))\n    // }\n    // if (t !== undefined) {\n    //   id2attr[id].set('target', t.get('name'))\n    // }\n    if (interaction !== undefined) {\n      id2attr[id].set('interaction', interaction)\n    }\n  }\n}\n\nconst addSourceTargetInteractionV2 = (nodeAttr, edges, id2attr) => {\n  if (edges === undefined) {\n    return\n  }\n  let len = edges.length\n  while (len--) {\n    const e = edges[len]\n    const id = e['id']\n    let current = id2attr[id]\n    if (current === undefined) {\n      current = new Map()\n      id2attr[id] = current\n    }\n    const source = e['s']\n    const s = nodeAttr[source]\n    const target = e['t']\n    const t = nodeAttr[target]\n    const interaction = e['v']\n\n    if (s !== undefined) {\n      id2attr[id].set('source', s.get('name'))\n    }\n    if (t !== undefined) {\n      id2attr[id].set('target', t.get('name'))\n    }\n    if (interaction !== undefined) {\n      const i = interaction['i']\n      id2attr[id].set('interaction', i)\n    }\n  }\n}\n\nconst getNodeAttrs = (kvMap: object) => {\n  const nodeAttr = kvMap['nodeAttributes']\n  const nodes = kvMap['nodes']\n\n  const id2attr = {}\n\n  if (nodes === undefined) {\n    return id2attr\n  }\n\n  let len = nodes.length\n  while (len--) {\n    const n = nodes[len]\n    const id = n['@id']\n    id2attr[id] = new Map()\n    id2attr[id].set('name', n['n'])\n    id2attr[id].set('Represents', n['r'])\n  }\n\n  if (nodeAttr === undefined) {\n    return id2attr\n  }\n\n  len = nodeAttr.length\n  while (len--) {\n    const entry = nodeAttr[len]\n    const pointer = entry['po']\n    let current = id2attr[pointer]\n    current.set(entry['n'], entry['v'])\n    id2attr[pointer] = current\n  }\n\n  return id2attr\n}\n","import { useState } from 'react'\nimport { getAttributeMap } from '../utils/cx2attr'\n\nexport default function useAttributes(uuid: string, cx: object[], subnetworkOnly: boolean) {\n  const [attr, setAttr] = useState(null)\n  const [id, setUuid] = useState(null)\n\n  if (uuid === undefined || uuid === null || cx === undefined || cx === null || cx.length === 0) {\n    return {}\n  }\n\n  if (subnetworkOnly) {\n    return getAttributeMap(cx)\n  }\n\n  if (id === null) {\n    setUuid(uuid)\n    const attr = getAttributeMap(cx)\n    setAttr(attr)\n    return attr\n  }\n\n  if (id === uuid) {\n    return attr\n  }\n\n  return {}\n}\n","import parse from 'html-react-parser'\n\nconst getContextFromCx = (cx: any[]) => {\n  if (cx === null || cx === undefined) {\n    return {}\n  }\n  //Check version\n  let version2 = false\n  for (let obj of cx) {\n    if (obj['CXVersion'] === '2.0') {\n      version2 = true\n      break\n    }\n  }\n  for (let obj of cx) {\n    if (obj['networkAttributes']) {\n      for (let item of obj['networkAttributes']) {\n        if (version2) {\n          if (item['@context']) {\n            return parseContext(item['@context'])\n          }\n        } else {\n          if (item['n'] === '@context') {\n            return parseContext(item['v'])\n          }\n        }\n      }\n    }\n  }\n  return null\n}\n\nconst parseContext = (context: string) => {\n  try {\n    const oldContext = JSON.parse(context)\n    return Object.keys(oldContext).reduce(\n      (c, k) => ((c[k.toUpperCase()] = oldContext[k]), c),\n      {},\n    )\n  } catch (error) {\n    console.warn('Could not parse @context network attribute as JSON: ', error)\n    return {}\n  }\n}\n\nconst processList = (list: string[], context) => {\n  let listString = ''\n  for (let item of list) {\n    listString += processItem(item, context, false) + ', '\n  }\n  return parse(listString.slice(0, -2))\n}\n\nconst processListAsText = (list: string[]) => {\n  let listString = ''\n  for (let item of list) {\n    listString += item + ', '\n  }\n  return listString.slice(0, -2)\n}\n\nconst processItem = (item: string, context: object, parseItem: boolean) => {\n  if (item === undefined || item === null) {\n    return item\n  }\n\n  let itemString = item.toString()\n\n  if (context === undefined || context === null) {\n    if (parseItem) {\n      return parse(itemString)\n    }\n    return itemString\n  }\n\n  const [prefix, id] = String(item).split(':')\n  if (prefix && id) {\n    if (prefix.toUpperCase() in context) {\n      itemString =\n        '<a href=' +\n        context[prefix.toUpperCase()] +\n        id +\n        ' target=\"_blank\" rel=\"noopener noreferrer\">' +\n        item +\n        '</a>'\n    }\n  }\n\n  if (parseItem) {\n    return parse(itemString)\n  }\n\n  return itemString\n}\n\nconst processInternalLink = (item: string, url: string) => {\n  return parse(\n    '<a href=https://' +\n      url +\n      '/viewer/networks/' +\n      item +\n      ' target=\"_blank\" rel=\"noopener noreferrer\">' +\n      item +\n      '</a>',\n  )\n}\n\nexport {\n  getContextFromCx,\n  processList,\n  processItem,\n  processInternalLink,\n  processListAsText,\n}\n","import React, { VFC } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Linkify from 'linkify-react'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: '15em',\n    width: '20em',\n    height: '20em',\n    zIndex: 1000,\n    position: 'fixed',\n    border: '1px solid #666666',\n    cursor: 'pointer',\n  },\n  content: {\n    margin: 0,\n    padding: '0.3em',\n    overflowY: 'scroll',\n    width: '100%',\n    height: '100%',\n  },\n  titleBar: {\n    display: 'flex',\n    height: '2em',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    marginBottom: '0.5em',\n\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n})\n\nconst Popup: VFC<{\n  x: number\n  y: number\n  open: boolean\n  setOpen: (boolean) => void\n  key?: string\n  value: string\n}> = ({ x, y, open, setOpen, key, value }) => {\n  const classes = useStyles()\n\n  const _handleClick = (evt): void => {\n    evt.preventDefault()\n    setOpen(false)\n  }\n\n  if (open === false) {\n    return null\n  }\n\n  const getLinks = (value) => {\n    return value.map((v, i) => (\n      <Linkify properties={{ target: '_blank' }}>{v}</Linkify>\n    ))\n  }\n  return (\n    <Card\n      className={classes.root}\n      style={{ left: x, top: y }}\n      variant=\"outlined\"\n    >\n      <CardContent className={classes.content}>\n        <div className={classes.titleBar}>\n          <CloseIcon onClick={_handleClick} />\n          <Typography\n            className={classes.title}\n            color=\"textSecondary\"\n            \n          >\n            Cell Contents\n          </Typography>\n        </div>\n        {Array.isArray(value) ? (\n          getLinks(value)\n        ) : (\n          <Typography variant=\"body2\">{value}</Typography>\n        )}\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default Popup\n","import React, { FC, useRef, useState, useEffect, ReactElement } from 'react'\nimport { useTable, usePagination, useSortBy, useFlexLayout } from 'react-table'\n\nimport { Grid, ScrollSync, AutoSizer } from 'react-virtualized'\n\nimport SortIcon from '@material-ui/icons/Sort'\nimport DownIcon from '@material-ui/icons/ArrowDropDown'\nimport UpIcon from '@material-ui/icons/ArrowDropUp'\n\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\nimport Popup from './Popup'\nimport ReactDOMServer from 'react-dom/server'\n\nconst MAX_STRING_LEN = 350\n\nconst scrollbarWidth = () => {\n  const scrollDiv = document.createElement('div')\n  scrollDiv.setAttribute(\n    'style',\n    'width: 100px; height: 100px; overflow: scroll; position:absolute; top:-9999px;',\n  )\n  document.body.appendChild(scrollDiv)\n  const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth\n  document.body.removeChild(scrollDiv)\n  return scrollbarWidth\n}\n\n// Base styles for the entire panel\nconst useStyles = makeStyles((theme: Theme) => {\n  return createStyles({\n    // Base area covers the entire panel\n    root: {\n      width: '100%',\n      height: '100%',\n      margin: 0,\n      padding: 0,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      background: theme.palette.background.paper,\n      boxSizing: 'border-box',\n      color: '#333333',\n      overflow: 'hidden',\n    },\n\n    // Area for virtualized table\n    tablePanel: {\n      flexGrow: 1,\n      width: '100%',\n      height: '100%',\n      boxSizing: 'border-box',\n      overflowY: 'hidden',\n    },\n\n    tableBody: {\n      flexGrow: 1,\n    },\n\n    gridRow: {\n      position: 'relative',\n      display: 'flex',\n      flexDirection: 'row',\n    },\n    gridColumn: {\n      display: 'flex',\n      flexDirection: 'column',\n      flex: '1 1 auto',\n    },\n    pagination: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      background: theme.palette.background.paper,\n      height: '3em',\n      padding: theme.spacing(1),\n      borderTop: `1px solid ${theme.palette.divider}`,\n      boxSizing: 'border-box',\n      zIndex: 100,\n    },\n    pageLabel: {\n      width: '7em',\n    },\n    pageSelector: {\n      width: '5em',\n      marginRight: theme.spacing(1),\n    },\n    pageSelectorPanel: {\n      width: '10em',\n    },\n    button: {\n      marginRight: theme.spacing(1),\n    },\n    topBar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      paddingRight: theme.spacing(1),\n    },\n    title: {\n      paddingTop: theme.spacing(1),\n      paddingLeft: theme.spacing(3),\n    },\n    tabs: {\n      boxSizing: 'border-box',\n      backgroundColor: theme.palette.background.paper,\n      margin: 0,\n      padding: 0,\n      height: '100%',\n      width: '100%',\n    },\n    tab: {\n      // minHeight: '2.6em',\n      // minWidth: '7em',\n      '&:disabled': {\n        color: '#AAAAAA',\n      },\n    },\n    tabPanel: {\n      width: '100%',\n      height: '100%',\n    },\n    collapsiblePanel: {\n      minHeight: 'auto',\n    },\n\n    leftSideGridContainer: {\n      flex: '0 0 75px',\n      zIndex: 10,\n      backgroundColor: theme.palette.background.default,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'flex-start',\n    },\n    leftSideGrid: {\n      overflow: 'hidden !important',\n      paddingLeft: '0.5em',\n    },\n    headerGrid: {\n      width: '100%',\n      overflow: 'hidden !important',\n      borderBottom: '1px solid #999999',\n      paddingLeft: '0.5em',\n    },\n    bodyGrid: {\n      width: '100%',\n    },\n\n    evenRow: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'flex-start',\n      paddingLeft: '0.5em',\n    },\n    oddRow: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'flex-start',\n      backgroundColor: 'rgba(150, 150, 150, .1)',\n      paddingLeft: '0.5em',\n    },\n\n    cell: {\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'flex-start',\n    },\n    headerCell: {\n      fontWeight: 'bold',\n      color: 'blue',\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      textAlign: 'center',\n    },\n    sortableHeader: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n    },\n    sortButton: {\n      marginLeft: '0.3em',\n      border: '1px solid #BBBBBB',\n      borderRadius: '10%',\n      cursor: 'pointer',\n      background: '#FFFFFF',\n    },\n    cellOverflow: {\n      cursor: 'pointer',\n      wordWrap: 'break-word',\n      width: '100%',\n      overflowWrap: 'break-word',\n    },\n  })\n})\n\nconst VirtualizedTable2: FC<{\n  columns: any[]\n  data: any\n  parentSize: [number, number]\n  selected: boolean\n}> = ({ columns, data, parentSize, selected }) => {\n  const classes = useStyles()\n\n  // Popup control\n  const [openPopup, setOpenPopup] = useState(false)\n  const [position, setPosition] = useState({ x: 0, y: 0 })\n  const [selectedValue, setSelectedValue] = useState(null)\n\n  const gridRef = useRef(null)\n  const pageRef = useRef(null)\n  const rootRef = useRef(null)\n\n  const [pagePanelHeight, setPagePanelHeight] = useState(1)\n  const [rootPanelHeight, setRootPanelHeight] = useState(1)\n\n  const defaultColumn = React.useMemo(\n    () => ({\n      width: 150,\n    }),\n    [],\n  )\n\n  const _handleResize = (evt) => {\n    if (rootRef.current === undefined || rootRef.current === null) {\n      return\n    }\n    const height = rootRef.current.offsetHeight\n    if (height !== 0) {\n      setRootPanelHeight(height)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', _handleResize)\n  }, [])\n\n  useEffect(() => {\n    if (rootRef.current === undefined || rootRef.current === null) {\n      return\n    }\n    const height = rootRef.current.offsetHeight\n    setRootPanelHeight(height)\n  }, [rootRef])\n\n  useEffect(() => {\n    const height = pageRef.current.offsetHeight\n    const rootHeight = rootRef.current.offsetHeight\n\n    if (height !== 0) {\n      setPagePanelHeight(height)\n    }\n\n    if (rootHeight !== 0) {\n      setRootPanelHeight(rootHeight)\n    }\n    // updateHeight()\n  }, [selected])\n\n  const {\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize },\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn,\n      initialState: {\n        pageIndex: 0,\n        pageSize: 100,\n      },\n    },\n    useSortBy,\n    usePagination,\n    // useBlockLayout,\n    useFlexLayout,\n  )\n\n  const _handleGoToPage = (index: number): void => {\n    gotoPage(index)\n    gridRef.current.scrollToCell({\n      columnIndex: 0,\n      rowIndex: 0,\n    })\n  }\n  const _handleNextPage = (): void => {\n    nextPage()\n    gridRef.current.scrollToCell({\n      columnIndex: 0,\n      rowIndex: 0,\n    })\n  }\n\n  const _handlePreviousPage = (): void => {\n    previousPage()\n    gridRef.current.scrollToCell({\n      columnIndex: 0,\n      rowIndex: 0,\n    })\n  }\n\n  const _renderBodyCell = ({ columnIndex, key, parent, rowIndex, style }) => {\n    if (columnIndex < 1) {\n      return\n    }\n\n    return _renderLeftSideCell({ columnIndex, key, parent, rowIndex, style })\n  }\n\n  const _renderHeaderCell = ({ columnIndex, key, rowIndex, style }) => {\n    if (columnIndex < 1) {\n      return\n    }\n\n    return _renderLeftHeaderCell({ columnIndex, key, style })\n  }\n\n  // Render a cell in the column header.\n  const _renderLeftHeaderCell = ({ columnIndex, key, style }) => {\n    const headerGroup = headerGroups[0]\n    const column = headerGroup.headers[columnIndex]\n\n    const _handleSort = (targetColumn) => {\n      if (columnIndex !== 0) {\n        targetColumn.canSort = false\n        return\n      }\n      targetColumn.toggleSortBy(!targetColumn.isSortedDesc)\n    }\n\n    const getSortButton = () => {\n      if (columnIndex !== 0) {\n        column.canSort = false\n        return null\n      }\n\n      if (column.isSorted) {\n        if (column.isSortedDesc) {\n          return <DownIcon className={classes.sortButton} />\n        } else {\n          return <UpIcon className={classes.sortButton} />\n        }\n      } else {\n        return <SortIcon className={classes.sortButton} />\n      }\n    }\n\n    return (\n      <div\n        key={key}\n        style={{\n          ...style,\n          display: 'grid',\n          alignContent: 'center',\n        }}\n        onClick={() => _handleSort(column)}\n      >\n        <div className={classes.sortableHeader}>\n          {column.Header}\n          {getSortButton()}\n        </div>\n      </div>\n    )\n  }\n\n  const valueLengthTH: number = 40\n  const _renderLeftSideCell = ({\n    columnIndex,\n    key,\n    parent,\n    rowIndex,\n    style,\n  }) => {\n    const row = page[rowIndex]\n    prepareRow(row)\n\n    const cells = row.cells.map((cell) => cell)\n    const cell = [cells[columnIndex]]\n\n    const cellClass = rowIndex % 2 === 0 ? classes.evenRow : classes.oddRow\n\n    let originalValue = cell[0].value.props.children\n    let value = originalValue\n\n    let isLongValue = false\n\n    // Check data type\n    if (originalValue !== undefined && originalValue !== null) {\n      if (typeof originalValue !== 'string') {\n        if (Array.isArray(originalValue)) {\n          value = originalValue.slice(0, 5)\n          isLongValue = true\n        }\n      } else if (\n        typeof originalValue === 'string' &&\n        originalValue.length > valueLengthTH\n      ) {\n        const strVal = originalValue.toString()\n        value = strVal.substring(0, valueLengthTH)\n        isLongValue = true\n      }\n    }\n\n    return (\n      <div\n        {...cell[0].getCellProps()}\n        className={cellClass}\n        key={key}\n        style={style}\n        onClick={(event) => _onCellClick(event, originalValue)}\n      >\n        {isLongValue ? getArrayString(value) : value}\n      </div>\n    )\n  }\n\n  const getArrayString = (value): ReactElement => {\n    if (value === undefined) {\n      return\n    }\n\n    if (typeof value === 'string') {\n      return <p className={classes.cellOverflow}>{value} ...</p>\n    }\n\n    if (Array.isArray(value) === false || value.length === 0) {\n      return <p>[]</p>\n    } else {\n      // Check HTML\n      let length = 0\n      value.forEach((val) => {\n        if (\n          typeof val !== 'string' &&\n          typeof val !== 'boolean' &&\n          typeof val !== 'number'\n        ) {\n          // This is an object (Links, etc.)\n          // If list is part of tag, do not display all\n          const tagType = val.type\n          if (tagType !== undefined) {\n            const renderedStr = ReactDOMServer.renderToString(val)\n            length = length + renderedStr.length\n          }\n        } else {\n          length = length + val.toString().length\n        }\n      })\n      if (value.length <= 3 && length < MAX_STRING_LEN) {\n        return <p className={classes.cellOverflow}>[{value}]</p>\n      } else if (length > MAX_STRING_LEN) {\n        return <p className={classes.cellOverflow}>[{value.slice(0, 2)} ...]</p>\n      } else {\n        return <p className={classes.cellOverflow}>[{value} ...]</p>\n\n      }\n    }\n  }\n\n  const isLongValue = (value: any): boolean => {\n    if (value === null && value === undefined) {\n      return false\n    }\n\n    if (typeof value === 'string' && value.length > valueLengthTH) {\n      return true\n    }\n\n    if (Array.isArray(value)) {\n      if (value.length === 0) {\n        return false\n      }\n      return true\n    }\n\n    return false\n  }\n\n  const _onCellClick = (evt, value) => {\n    if (isLongValue(value)) {\n      setOpenPopup(!openPopup)\n      setPosition({ x: evt.pageX, y: evt.pageY })\n      setSelectedValue(value)\n    }\n  }\n\n  const columnWidth = 200\n  const columnCount = columns.length\n  const overscanColumnCount = 0\n  const overscanRowCount = 5\n  const rowHeight = 57\n  const rowCount = page.length\n  const height: number = rootPanelHeight - (pagePanelHeight + rowHeight)\n\n  return (\n    <>\n      <div ref={rootRef} className={classes.root}>\n        <div className={classes.tablePanel}>\n          <ScrollSync>\n            {({\n              clientHeight,\n              clientWidth,\n              onScroll,\n              scrollHeight,\n              scrollLeft,\n              scrollTop,\n              scrollWidth,\n            }) => {\n              const leftColor = '#222222'\n              const topColor = '#222222'\n              const middleColor = '#222222'\n\n              return (\n                <div className={classes.gridRow}>\n                  <div\n                    className={classes.leftSideGridContainer}\n                    style={{\n                      position: 'absolute',\n                      left: 0,\n                      top: 0,\n                      color: leftColor,\n                    }}\n                  >\n                    <Grid\n                      cellRenderer={_renderLeftHeaderCell}\n                      className={classes.headerGrid}\n                      width={columnWidth}\n                      height={rowHeight}\n                      rowHeight={rowHeight}\n                      columnWidth={columnWidth}\n                      rowCount={1}\n                      columnCount={1}\n                    />\n                  </div>\n                  <div\n                    className={classes.leftSideGridContainer}\n                    style={{\n                      position: 'absolute',\n                      left: 0,\n                      top: rowHeight,\n                      color: leftColor,\n                    }}\n                  >\n                    <Grid\n                      overscanColumnCount={overscanColumnCount}\n                      overscanRowCount={overscanRowCount}\n                      cellRenderer={_renderLeftSideCell}\n                      columnWidth={columnWidth}\n                      columnCount={1}\n                      className={classes.leftSideGrid}\n                      height={height - scrollbarWidth()}\n                      rowHeight={rowHeight}\n                      rowCount={rowCount}\n                      scrollTop={scrollTop}\n                      width={columnWidth}\n                    />\n                  </div>\n                  <div className={classes.gridColumn}>\n                    <AutoSizer>\n                      {({ width }) => (\n                        <div>\n                          <div\n                            style={{\n                              color: topColor,\n                              height: rowHeight,\n                              width: width - scrollbarWidth(),\n                            }}\n                          >\n                            <Grid\n                              className={classes.headerGrid}\n                              columnWidth={columnWidth}\n                              columnCount={columnCount}\n                              height={rowHeight}\n                              overscanColumnCount={overscanColumnCount}\n                              cellRenderer={_renderHeaderCell}\n                              rowHeight={rowHeight}\n                              rowCount={1}\n                              scrollLeft={scrollLeft}\n                              width={width - scrollbarWidth()}\n                            />\n                          </div>\n                          <div\n                            style={{\n                              color: middleColor,\n                              height,\n                              width,\n                            }}\n                          >\n                            <Grid\n                              ref={gridRef}\n                              className={classes.bodyGrid}\n                              columnWidth={columnWidth}\n                              columnCount={columnCount}\n                              onScroll={onScroll}\n                              overscanColumnCount={overscanColumnCount}\n                              overscanRowCount={overscanRowCount}\n                              cellRenderer={_renderBodyCell}\n                              rowHeight={rowHeight}\n                              rowCount={rowCount}\n                              height={height}\n                              width={width}\n                            />\n                          </div>\n                        </div>\n                      )}\n                    </AutoSizer>\n                  </div>\n                </div>\n              )\n            }}\n          </ScrollSync>\n        </div>\n\n        <div ref={pageRef} className={classes.pagination}>\n          <div>\n            <button\n              className={classes.button}\n              onClick={() => _handleGoToPage(0)}\n              disabled={!canPreviousPage}\n            >\n              {'<<'}\n            </button>\n            <button\n              className={classes.button}\n              onClick={() => _handlePreviousPage()}\n              disabled={!canPreviousPage}\n            >\n              {'<'}\n            </button>\n            <button\n              className={classes.button}\n              onClick={() => _handleNextPage()}\n              disabled={!canNextPage}\n            >\n              {'>'}\n            </button>\n            <button\n              className={classes.button}\n              onClick={() => _handleGoToPage(pageCount - 1)}\n              disabled={!canNextPage}\n            >\n              {'>>'}\n            </button>\n          </div>\n\n          <div className={classes.pageLabel}>\n            {`Page ${pageIndex + 1} of ${pageOptions.length}`}\n          </div>\n\n          <div className={classes.pageSelectorPanel}>\n            <select\n              className={classes.pageSelector}\n              value={pageSize}\n              onChange={(e) => {\n                setPageSize(Number(e.target.value))\n              }}\n            >\n              {[100, 500, 1000, 5000, 10000].map((pageSize) => (\n                <option key={pageSize} value={pageSize}>\n                  {pageSize}\n                </option>\n              ))}\n            </select>\n            per page\n          </div>\n        </div>\n      </div>\n\n      <Popup\n        x={position.x}\n        y={position.y}\n        open={openPopup}\n        setOpen={setOpenPopup}\n        value={selectedValue}\n      />\n    </>\n  )\n}\n\nexport default VirtualizedTable2\n","import React, { VFC, useMemo, useContext } from 'react'\nimport Linkify from 'linkify-react'\nimport {\n  processList,\n  processItem,\n  processInternalLink,\n  processListAsText,\n} from '../../../utils/contextUtil'\nimport AppContext from '../../../context/AppState'\nimport VirtualizedTable2 from './VirtualizedTable2'\n\n// All attributes with this prefix will not be displayed\nexport const HIDDEN_ATTR_PREFIX: string = '__'\n\n// Special cases: Virtual Columns\nconst EdgeAttributes = {\n  SOURCE: 'source',\n  TARGET: 'target',\n  INTERACTION: 'interaction',\n}\n\nconst NodeAttributes = {\n  REPRESENTS: 'Represents',\n}\n\nconst Attributes = {\n  NAME: 'name',\n  NDEX_INTERNAL_LINK: 'ndex:internalLink',\n}\n\nconst regex = /\\./gi\nconst replacePeriods = (text: string): string => {\n  return text.replace(regex, '(_)')\n}\n\nconst isEmptyString = (text: string): boolean => {\n  return text === undefined || text === ''\n}\nconst startsWithNumber = (entry: string): boolean => {\n  if (\n    entry === undefined ||\n    entry === null ||\n    typeof entry !== 'string' ||\n    entry.length === 0\n  ) {\n    return false\n  }\n  return '0123456789'.includes(entry.charAt(0))\n}\n\nconst EntryTable: VFC<{\n  selectedObjects: any[]\n  attributes: any\n  type?: string\n  context\n  letterWidths\n  label\n  parentSize: [number, number]\n  selected: boolean\n}> = ({\n  selectedObjects,\n  attributes,\n  type,\n  context,\n  letterWidths,\n  label,\n  parentSize,\n  selected,\n}) => {\n  const { config } = useContext(AppContext)\n\n  const getWidth = (phrase: string | undefined): number => {\n    if (phrase === undefined) {\n      phrase = ''\n    }\n    let width: number = 0\n    for (let i = 0; i < phrase.length; i++) {\n      let letter = phrase[i]\n      if (letter === ' ') {\n        letter = '&nbsp'\n      }\n      if (letterWidths[letter] === undefined) {\n        width += letterWidths['default']\n      } else {\n        width += letterWidths[letter]\n      }\n    }\n    return width\n  }\n\n  const getColumnWidth = (rows, accessor, header) => {\n    const PADDING = 18\n    const MAX_WIDTH = 300 + PADDING\n    const width =\n      Math.max(\n        ...rows.map((row) => getWidth(`${row[accessor]}` || '')),\n        getWidth(header),\n      ) + PADDING\n    return Math.min(MAX_WIDTH, width)\n  }\n\n  const filterColumns = (allColumns: string[]): string[] => {\n    return allColumns.filter(\n      (colName) => !colName.startsWith(HIDDEN_ATTR_PREFIX),\n    )\n  }\n\n  const columns: string[] = useMemo((): string[] => {\n    const columnsList: string[] = []\n    for (let id of selectedObjects) {\n      const attrs = attributes[id]\n      if (attrs === undefined || attrs === null) {\n        continue\n      }\n      for (let attr of attrs) {\n        if (\n          attr[0] === Attributes.NAME ||\n          (type === 'edge' && attr[0] === EdgeAttributes.INTERACTION)\n        ) {\n          continue\n        } else {\n          if (Array.isArray(attr[1])) {\n            for (let item of attr[1]) {\n              if (item !== undefined && item !== '') {\n                if (!columnsList.includes(attr[0])) {\n                  columnsList.push(attr[0])\n                }\n                break\n              }\n            }\n          } else {\n            if (attr[1] !== undefined && attr[1] !== '') {\n              if (!columnsList.includes(attr[0])) {\n                columnsList.push(attr[0])\n              }\n            }\n          }\n        }\n        if (columnsList.length + 1 === attrs.length) {\n          break\n        }\n      }\n    }\n    columnsList.unshift(Attributes.NAME)\n    if (type === 'edge') {\n      //Add name for edges that don't have one\n      for (let id of selectedObjects) {\n        const attrs = attributes[id]\n        if (!attrs.has(Attributes.NAME)) {\n          if (\n            attrs.has(EdgeAttributes.SOURCE) &&\n            attrs.has(EdgeAttributes.TARGET)\n          ) {\n            if (attrs.has(EdgeAttributes.INTERACTION)) {\n              attrs.set(\n                Attributes.NAME,\n                attrs.get(EdgeAttributes.SOURCE) +\n                  ' (' +\n                  attrs.get(EdgeAttributes.INTERACTION) +\n                  ') ' +\n                  attrs.get(EdgeAttributes.TARGET),\n              )\n            } else {\n              attrs.set(\n                Attributes.NAME,\n                attrs.get(EdgeAttributes.SOURCE) +\n                  ' (-) ' +\n                  attrs.get(EdgeAttributes.TARGET),\n              )\n            }\n          }\n        }\n      }\n    }\n    return filterColumns(columnsList)\n  }, [selectedObjects])\n\n  const data = useMemo(() => {\n    const dataList = []\n    const textDataList = []\n    let idx = 0\n    for (let id of selectedObjects) {\n      const attrs = attributes[id]\n      if (attrs === undefined) {\n        continue\n      }\n      const row = {}\n      const textRow = {}\n      for (let column of columns) {\n        const value = attrs.get(column)\n        if (Array.isArray(value)) {\n          row[replacePeriods(column)] = processList(value, context)\n          textRow[replacePeriods(column)] = processListAsText(value)\n        } else {\n          if (column === Attributes.NDEX_INTERNAL_LINK) {\n            row[column] = processInternalLink(attrs.get(column), config.ndexUrl)\n          } else {\n            row[replacePeriods(column)] = processItem(\n              attrs.get(column),\n              context,\n              true,\n            )\n          }\n          textRow[replacePeriods(column)] = attrs.get(column)\n        }\n      }\n      dataList.push(row)\n      textDataList.push(textRow)\n      idx++\n    }\n\n    const empty = dataList.filter((entry) => isEmptyString(entry.name))\n    const nonEmpty = dataList.filter((entry) => !isEmptyString(entry.name))\n\n    let nonNumbers = nonEmpty.filter((entry) => !startsWithNumber(entry.name))\n    let numbers = nonEmpty.filter((entry) => startsWithNumber(entry.name))\n\n    nonNumbers.sort((a, b) => (a.name > b.name ? 1 : -1))\n    numbers.sort((a, b) => (a.name > b.name ? 1 : -1))\n\n    const sortedDataList = nonNumbers.concat(numbers).concat(empty)\n    for (let i = 0; i < sortedDataList.length; i++) {\n      const row = sortedDataList[i]\n      for (const [key, value] of Object.entries(row)) {\n        row[key] = <Linkify>{value}</Linkify>\n      }\n    }\n\n    return [sortedDataList, textDataList]\n  }, [selectedObjects])\n\n  const finalColumns = useMemo(() => {\n    //Put columns in correct order\n    let hasName = false\n    let hasRepresents = false\n    if (columns.includes(Attributes.NAME)) {\n      hasName = true\n      columns.splice(columns.indexOf(Attributes.NAME), 1)\n    }\n    if (columns.includes(NodeAttributes.REPRESENTS)) {\n      hasRepresents = true\n      columns.splice(columns.indexOf(NodeAttributes.REPRESENTS), 1)\n    }\n    columns.sort((a, b) => a.localeCompare(b))\n    if (hasRepresents) {\n      columns.unshift(NodeAttributes.REPRESENTS)\n    }\n    if (hasName) {\n      columns.unshift(Attributes.NAME)\n    }\n\n    return columns.map((column) => {\n      if (column === Attributes.NAME) {\n        return {\n          Header: label,\n          accessor: Attributes.NAME,\n          // sticky: 'left',\n          width: getColumnWidth(data[1], Attributes.NAME, label),\n        }\n      } else {\n        return {\n          Header: column,\n          accessor: replacePeriods(column),\n          width: getColumnWidth(data[1], column, column),\n        }\n      }\n    })\n  }, [selectedObjects])\n\n  return (\n    <VirtualizedTable2\n      columns={finalColumns}\n      data={data[0]}\n      parentSize={parentSize}\n      selected={selected}\n    />\n  )\n}\n\nexport default EntryTable\n","import React from 'react'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport Typography from '@material-ui/core/Typography'\nimport Linkify from 'linkify-react'\n\nimport { HIDDEN_ATTR_PREFIX } from '../DataPanel/EntryTable'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      backgroundColor: 'inherit',\n    },\n    text: {\n      display: 'inline-block',\n      paddingTop: 0,\n      paddingBottom: '6px',\n    },\n    smallText: {\n      lineHeight: '16px',\n    },\n    bigText: {\n      lineHeight: '18px',\n    },\n  }),\n)\n\nconst PropList = ({ attrMap }) => {\n  const classes = useStyles()\n\n  attrMap.delete('name')\n\n  let represents\n  if (attrMap.has('Represents')) {\n    represents = attrMap.get('Represents')\n    attrMap.delete('Represents')\n  }\n\n  const keys: string[] = [...attrMap.keys()].sort((a, b) => a.localeCompare(b))\n\n  if (represents !== undefined) {\n    keys.unshift('Represents')\n    attrMap.set('Represents', represents)\n  }\n\n  // Display all attributes except the hidden ones (with prefix __)\n  return (\n    <List className={classes.root}>\n      {keys\n        .filter((key) => !key.startsWith(HIDDEN_ATTR_PREFIX))\n        .map((key) => {\n          return (\n            <ListItem key={key} className={classes.text} disableGutters>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"caption\"\n                variantMapping={{ caption: 'div' }}\n                className={classes.smallText}\n              >\n                {key}\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                component=\"div\"\n                className={classes.bigText}\n              >\n                <Linkify key={key}>{attrMap.get(key)}</Linkify>\n              </Typography>\n            </ListItem>\n          )\n        })}\n    </List>\n  )\n}\n\nexport default PropList\n","import React from 'react'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport { Typography, IconButton } from '@material-ui/core'\nimport PropList from './PropList'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      width: '100%',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    title: {\n      display: 'flex',\n      width: '100%',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n    },\n    name: {\n      fontWeight: 500,\n      fontSize: '1.5em',\n      flexGrow: 3,\n      paddingTop: '12.5px',\n      paddingBottom: '12.5px',\n    },\n    propList: {\n      height: '100%',\n      width: '100%',\n      padding: 0,\n      margin: 0,\n      borderTop: '1px solid #777777',\n      overflowX: 'auto',\n    },\n  }),\n)\n\nconst PropertyPanel = ({ attrMap, onClose }) => {\n  const classes = useStyles()\n\n  const handleClose = () => {\n    onClose()\n  }\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>\n        <Typography className={classes.name} variant=\"body1\">\n          {attrMap.get('name')}\n        </Typography>\n        <IconButton onClick={handleClose}>\n          <CloseIcon />\n        </IconButton>\n      </div>\n      <div className={classes.propList}>\n        <div>\n          <PropList attrMap={attrMap} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default PropertyPanel\n","import React, { useContext, useState, useEffect, FC, useMemo } from 'react'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport { useParams } from 'react-router-dom'\nimport AppContext from '../../context/AppState'\nimport useAttributes from '../../hooks/useAttributes'\nimport PropertyPanel from '../PropertyPanel'\nimport {\n  getContextFromCx,\n  processList,\n  processItem,\n  processInternalLink,\n} from '../../utils/contextUtil'\nimport { SelectionActions } from '../../reducer/selectionStateReducer'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      position: 'absolute',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      maxWidth: '40vh',\n      maxHeight: '50vh',\n      backgroundColor: '#FFFFFF',\n      borderRadius: 8,\n      border: '1px solid #999999',\n      zIndex: 200,\n      padding: '1em',\n      paddingTop: 0,\n      overflowY: 'auto',\n      background:\n        'linear-gradient(#ffffff 33%, rgba(255,255,255, 0)),linear-gradient(rgba(255,255,255, 0), #ffffff 66%) 0 100%,radial-gradient(farthest-side at 50% 0, rgba(89,89,89, 0.5), rgba(0,0,0,0)),radial-gradient(farthest-side at 50% 100%, rgba(89,89,89, 0.5), rgba(0,0,0,0)) 0 100%',\n      backgroundRepeat: 'no-repeat',\n      backgroundAttachment: 'local, local, scroll, scroll',\n      backgroundSize: '100% 60px, 100% 60px, 100% 20px, 100% 20px',\n    },\n  }),\n)\n\nconst EdgeAttributes = {\n  SOURCE: 'source',\n  TARGET: 'target',\n  INTERACTION: 'interaction',\n}\n\nconst Attributes = {\n  NAME: 'name',\n  NDEX_INTERNAL_LINK: 'ndex:internalLink',\n}\n\ntype PopupProps = {\n  cx: object[]\n  subHeight: number\n}\n\nconst FOOTER_HEIGHT = 60\n\nconst Popup: FC<PopupProps> = ({ cx, subHeight }: PopupProps) => {\n  const classes = useStyles()\n  const { uuid } = useParams()\n  const { uiState, selectionState, selectionStateDispatch, config } =\n    useContext(AppContext)\n  const { windowHeight, windowWidth } = useWindowDimensions()\n\n  const attr = useAttributes(uuid, cx, uiState.mainNetworkNotDisplayed)\n  const context = useMemo(() => getContextFromCx(cx), [cx])\n\n  const { lastSelected } = selectionState\n\n  const setShowPropPanelFalse = () =>\n    selectionStateDispatch({ type: SelectionActions.CLOSE_PROP_PANEL })\n\n  const onClose = () => {\n    setShowPropPanelFalse()\n  }\n\n  useEffect(() => {\n    setShowPropPanelFalse()\n  }, [uiState.showSearchResult])\n\n  const isMultipleSelection = (selectionState): boolean => {\n    const { main, sub } = selectionState\n    const sumMain = main.nodes.length + main.edges.length\n    const sumSub = sub.nodes.length + sub.edges.length\n\n    if (sumMain > 1 || sumSub > 1) {\n      return true\n    } else {\n      return false\n    }\n  }\n  if (\n    cx === undefined ||\n    !lastSelected.showPropPanel ||\n    selectionState.lastSelected.id === null ||\n    isMultipleSelection(selectionState)\n  ) {\n    return <div />\n  }\n\n  const id = selectionState.lastSelected.id\n  let attrMap = null\n  if (selectionState.lastSelected.isNode) {\n    attrMap = attr.nodeAttr[id]\n  } else {\n    attrMap = attr.edgeAttr[id]\n  }\n\n  // Process attrMap to only display non-empty fields and properly display links and lists\n  const nonEmptyMap = new Map()\n  let source, target, interaction\n  let noNameEdge = true\n  const include = []\n\n  for (let item of attrMap) {\n    if (!selectionState.lastSelected.isNode) {\n      if (\n        [\n          EdgeAttributes.SOURCE,\n          EdgeAttributes.TARGET,\n          EdgeAttributes.INTERACTION,\n        ].includes(item[0])\n      ) {\n        if (item[0] === EdgeAttributes.SOURCE) {\n          source = item[1]\n        } else if (item[0] === EdgeAttributes.TARGET) {\n          target = item[1]\n        } else {\n          interaction = item[1]\n        }\n        continue\n      } else if (item[0] === Attributes.NAME) {\n        noNameEdge = false\n      }\n    } else {\n      noNameEdge = false\n    }\n\n    if (Array.isArray(item[1])) {\n      for (let arrayItem of item[1]) {\n        if (arrayItem !== undefined && arrayItem !== '') {\n          include.push(item)\n          break\n        }\n      }\n    } else {\n      if (item[1] !== undefined && item[1] !== '') {\n        include.push(item)\n      }\n    }\n  }\n\n  include.sort((a, b) => {\n    return a[0].localeCompare(b[0])\n  })\n\n  for (let item of include) {\n    let value\n    if (Array.isArray(item[1])) {\n      value = processList(item[1], context)\n    } else {\n      if (item[0] === Attributes.NDEX_INTERNAL_LINK) {\n        value = processInternalLink(item[1], config.ndexUrl)\n      } else {\n        value = processItem(item[1], context, true)\n      }\n    }\n    nonEmptyMap.set(item[0], value)\n  }\n\n  if (noNameEdge) {\n    if (source && target) {\n      if (interaction) {\n        nonEmptyMap.set(\n          Attributes.NAME,\n          source + ' (' + interaction + ') ' + target,\n        )\n      } else {\n        nonEmptyMap.set(Attributes.NAME, source + ' (-) ' + target)\n      }\n    }\n  }\n\n  // Add source and target to the list if those are available in the original attr\n  if (source) {\n    nonEmptyMap.set(EdgeAttributes.SOURCE, source)\n  }\n  if (target) {\n    nonEmptyMap.set(EdgeAttributes.TARGET, target)\n  }\n\n  //Calculate position based on pointer position in window\n  const x = lastSelected.coordinates.x\n  const y = lastSelected.coordinates.y\n\n  //Left or right?\n  let right = true\n  if (x > (windowWidth - uiState.rightPanelWidth) / 2) {\n    right = false\n  }\n\n  //Bottom or top?\n  let bottom = true\n  if (selectionState.lastSelected.fromMain) {\n    if (y > (windowHeight - FOOTER_HEIGHT) / 2) {\n      bottom = false\n    }\n  } else {\n    if (windowHeight - subHeight + y > windowHeight / 2) {\n      bottom = false\n    }\n  }\n\n  const style = {\n    maxHeight: windowHeight * 0.4,\n  }\n  if (right) {\n    style['left'] = x\n  } else {\n    style['right'] = windowWidth - uiState.rightPanelWidth - x\n  }\n  if (bottom) {\n    if (selectionState.lastSelected.fromMain) {\n      style['top'] = y\n    } else {\n      style['top'] = y + (windowHeight - subHeight - FOOTER_HEIGHT)\n    }\n  } else {\n    if (selectionState.lastSelected.fromMain) {\n      style['bottom'] = windowHeight - y - FOOTER_HEIGHT\n    } else {\n      style['bottom'] = subHeight - y\n    }\n  }\n\n  return (\n    <div className={classes.root} style={style}>\n      <PropertyPanel attrMap={nonEmptyMap} onClose={onClose} />\n    </div>\n  )\n}\n\nfunction getWindowDimensions() {\n  const { innerWidth: windowWidth, innerHeight: windowHeight } = window\n  return {\n    windowWidth,\n    windowHeight,\n  }\n}\n\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions(),\n  )\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions())\n    }\n\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n\n  return windowDimensions\n}\n\nexport default Popup\n","import CyReference from '../model/CyReference'\n\nconst fitContent = (cyReference: CyReference): void => {\n  const { main, sub } = cyReference\n\n  if (main !== undefined && main !== null) {\n    main.fit()\n  }\n\n  if (sub !== undefined && sub !== null) {\n    sub.fit()\n  }\n}\n\n\nconst lockMainWindow = (cyReference: CyReference, lock: boolean): void => {\n\n  const main = cyReference.main\n  if(main === undefined || main === null) {\n    return\n  }\n\n  if(lock) {\n    main.boxSelectionEnabled( !lock )\n    main.nodes().ungrabify()\n    main.nodes().lock()\n    main.elements().unselectify()\n  } else {\n    main.boxSelectionEnabled( !lock )\n    main.nodes().grabify()\n    main.nodes().unlock()\n    main.elements().selectify()\n  }\n\n}\n\nexport { fitContent, lockMainWindow }\n","import UIState from '../model/UIState'\n\nexport type UIStateAction = {\n  type: string\n  uiState: any\n}\n\nexport const UIStateActions = {\n  SET_DATA_PANEL_OPEN: 'setDataPanelOpen',\n  SET_SHOW_SEARCH_RESULT: 'setShowSearchResult',\n  SET_RIGHT_PANEL_WIDTH: 'setRightPanelWidth',\n  SET_SHOW_PROP_PANEL_TRUE: 'setShowPropPanelTrue',\n  SET_SHOW_PROP_PANEL_FALSE: 'setShowPropPanelFalse',\n  SET_MAIN_NETWORK_NOT_DISPLAYED: 'setMainNetworkNotDisplayed',\n  SET_ACTIVE_TAB: 'setActiveTab',\n}\n\nexport const INITIAL_UI_STATE: UIState = {\n  dataPanelOpen: true,\n  showSearchResult: false,\n  rightPanelWidth: 0,\n  mainNetworkNotDisplayed: false,\n  activeTab: 0,\n}\n\nconst uiStateReducer = (state: UIState, action: UIStateAction): UIState => {\n  switch (action.type) {\n    case UIStateActions.SET_DATA_PANEL_OPEN:\n      return { ...state, dataPanelOpen: action.uiState.dataPanelOpen }\n    case UIStateActions.SET_SHOW_SEARCH_RESULT:\n      return { ...state, showSearchResult: action.uiState.showSearchResult }\n    case UIStateActions.SET_RIGHT_PANEL_WIDTH:\n      return { ...state, rightPanelWidth: action.uiState.rightPanelWidth }\n    case UIStateActions.SET_MAIN_NETWORK_NOT_DISPLAYED:\n      return {\n        ...state,\n        mainNetworkNotDisplayed: action.uiState.mainNetworkNotDisplayed,\n      }\n    case UIStateActions.SET_ACTIVE_TAB:\n      return { ...state, activeTab: action.uiState.activeTab }\n    default:\n      throw new Error('Invalid action')\n  }\n}\n\nexport default uiStateReducer\n","import React, { useContext, useState, useEffect } from 'react'\nimport { IconButton } from '@material-ui/core'\nimport AppContext from '../../context/AppState'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport FullScreenIcon from '@material-ui/icons/Fullscreen'\nimport ExitFullScreenIcon from '@material-ui/icons/FullscreenExit'\nimport { fitContent, lockMainWindow } from '../../utils/cyjsUtil'\nimport { UIStateActions } from '../../reducer/uiStateReducer'\nimport UIState from '../../model/UIState'\n\nconst ExpandButton = () => {\n  const { uiState, uiStateDispatch, cyReference, query } = useContext(\n    AppContext,\n  )\n  const { showSearchResult } = uiState\n\n  const [hide, setHide] = useState<boolean>(true)\n\n  useEffect(() => {\n    if (query === '' && !showSearchResult) {\n      setHide(true)\n    } else {\n      setHide(false)\n    }\n  }, [showSearchResult, query])\n\n  const setShowSearchResult = (state: UIState) =>\n    uiStateDispatch({\n      type: UIStateActions.SET_SHOW_SEARCH_RESULT,\n      uiState: state,\n    })\n\n  const handleClick = () => {\n    setShowSearchResult({ ...uiState, showSearchResult: !showSearchResult })\n    setTimeout(() => {\n      fitContent(cyReference)\n      lockMainWindow(cyReference, !showSearchResult)\n    }, 100)\n  }\n\n  const tooltip = showSearchResult\n    ? 'Maximize the main network view'\n    : 'Back to split view'\n\n  if (hide) {\n    return <div />\n  }\n\n  return (\n    <Tooltip title={tooltip} placement=\"right\" arrow>\n      <div>\n        <IconButton\n          color={'secondary'}\n          style={{ backgroundColor: 'transparent' }}\n          // disableFocusRipple={true}\n          // disableRipple={true}\n          onClick={handleClick}\n        >\n          {showSearchResult ? <FullScreenIcon /> : <ExitFullScreenIcon />}\n        </IconButton>\n      </div>\n    </Tooltip>\n  )\n}\n\nexport default ExpandButton\n","import React, { useContext } from 'react'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport IconButton from '@material-ui/core/IconButton'\n\nimport FitIcon from '@material-ui/icons/ZoomOutMap'\nimport ZoomInIcon from '@material-ui/icons/ZoomIn'\nimport ZoomOutIcon from '@material-ui/icons/ZoomOut'\n\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\nimport AppContext from '../../context/AppState'\n\nimport ExpandButton from './ExpandButton'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      zIndex: 300,\n      borderRadius: 5,\n      border: '1px solid #DDDDDD',\n      backgroundColor: '#FFFFFF',\n      position: 'absolute',\n      right: '1em',\n      bottom: '1em',\n    },\n    subnet: {\n      width: '100%',\n      height: '100%',\n      backgroundColor: '#AAAAAA',\n    },\n  }),\n)\n\nconst NavigationPanel = ({ target = 'main' }) => {\n  const classes = useStyles()\n  const { cyReference, lgrReference } = useContext(AppContext)\n\n  let cy = cyReference.main\n  if (target === 'sub') {\n    cy = cyReference.sub\n  }\n\n  const handleFit = (evt) => {\n    if (cy !== null && cy !== undefined) {\n      cy.fit()\n    } else if (lgrReference !== undefined && lgrReference !== null) {\n      // @ts-ignore\n      lgrReference.fit()\n    }\n  }\n  const handleZoomIn = (evt) => {\n    if (cy !== null && cy !== undefined) {\n      const currentZoom = cy.zoom()\n      const newLevel = currentZoom * 1.2\n      cy.zoom(newLevel)\n    } else if (lgrReference !== undefined && lgrReference !== null) {\n      // @ts-ignore\n      lgrReference.zoomIn()\n    }\n  }\n  const handleZoomOut = (evt) => {\n    if (cy !== null && cy !== undefined) {\n      const currentZoom = cy.zoom()\n      const newLevel = currentZoom * 0.8\n      cy.zoom(newLevel)\n    } else if (lgrReference !== undefined && lgrReference !== null) {\n      // @ts-ignore\n      lgrReference.zoomOut()\n    }\n  }\n\n  return (\n    <ButtonGroup\n      className={classes.root}\n      orientation=\"vertical\"\n      color=\"secondary\"\n      variant=\"outlined\"\n      // disableFocusRipple={true}\n      // disableRipple={true}\n    >\n      {target === 'main' ? <ExpandButton /> : <div />}\n      <IconButton\n        key={'fitButton'}\n        color={'secondary'}\n        style={{ backgroundColor: 'transparent' }}\n        onClick={handleFit}\n      >\n        <FitIcon />\n      </IconButton>\n      {cy === null || cy === undefined ? (\n        <div />\n      ) : (\n        [\n          <IconButton\n            key={'zoomInButton'}\n            color={'secondary'}\n            style={{ backgroundColor: 'transparent' }}\n            onClick={handleZoomIn}\n          >\n            <ZoomInIcon />\n          </IconButton>,\n          <IconButton\n            key={'zoomOutButton'}\n            color={'secondary'}\n            style={{ backgroundColor: 'transparent' }}\n            onClick={handleZoomOut}\n          >\n            <ZoomOutIcon />\n          </IconButton>,\n        ]\n      )}\n    </ButtonGroup>\n  )\n}\n\nexport default NavigationPanel\n","import React, { useContext, useState } from 'react'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport { Typography } from '@material-ui/core'\nimport AppContext from '../../context/AppState'\nimport WarningIcon from '@material-ui/icons/Warning'\nimport { saveQuery } from '../../hooks/useSearch'\nimport { Button } from '@material-ui/core'\nimport { useParams } from 'react-router-dom'\nimport Snackbar from '@material-ui/core/Snackbar'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      boxSizing: 'border-box',\n      display: 'grid',\n      width: '100%',\n      height: '100%',\n      placeItems: 'center',\n      background: '#FFFFFF',\n      zIndex: 0\n    },\n    item: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: '1em',\n      width: '60%',\n    },\n    message: {\n      padding: '0.5em',\n      color: '#999999',\n      textAlign: 'center',\n    },\n    title: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    arrow1: {\n      position: 'fixed',\n      color: '#999999',\n      bottom: '2vh',\n      left: '1vw',\n      fontSize: '7em',\n    },\n    warningIcon: {\n      color: 'red',\n      fontSize: '7em',\n    },\n  }),\n)\n\n\n\nconst EdgeLimitExceededPanel = () => {\n  const classes = useStyles()\n  \n  const { uuid } = useParams()\n\n  const [snackMessage, setSnackMessage] = useState(undefined)\n\n  const { query, queryMode, ndexCredential, config } = useContext(AppContext)\n  \n  const handleSave = () => {\n    saveQuery(uuid, query, config.ndexHttps, ndexCredential, queryMode).then(() => {\n      setSnackMessage('Query is being saved to NDEx')}\n    )\n  }\n  \n  const handleClose = () => {\n    setSnackMessage(undefined)\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.item}>\n        <div className={classes.title}>\n          <Typography className={classes.message} variant=\"h3\">\n           \n          </Typography>\n        </div>\n        <Typography className={classes.message} variant=\"subtitle1\">\n          Your query returned more than {config.maxEdgeQuery} and cannot be displayed in the browser.<br/> \n          { ndexCredential.isLogin ? 'You can save this sub-network to NDEx to continue working with it.' : 'Please log in so that the result can be saved to your NDEx account' }\n        </Typography>\n        { ndexCredential.isLogin && <Button onClick={handleSave} variant='contained'>Save Result to NDEx</Button> }\n        <Snackbar\n          open={snackMessage != undefined}\n          anchorOrigin={ {vertical: 'top', horizontal: 'center' }}\n          autoHideDuration={6000}\n          onClose={handleClose}\n          message={snackMessage}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default EdgeLimitExceededPanel\n","import React, { FC, useContext, useEffect, useState, useRef } from 'react'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\nimport LGRPanel from './LGRPanel'\nimport CytoscapeRenderer from '../CytoscapeRenderer'\nimport AppContext from '../../context/AppState'\nimport { useParams } from 'react-router-dom'\nimport { Typography } from '@material-ui/core'\nimport useSearch from '../../hooks/useSearch'\nimport { AutoSizer } from 'react-virtualized'\nimport Loading from './Loading'\nimport { SelectionActions } from '../../reducer/selectionStateReducer'\nimport CyReference from '../../model/CyReference'\nimport { CyActions } from '../../reducer/cyReducer'\nimport {\n  getCyjsLayout,\n  getEdgeCount,\n  getLgrLayout,\n  getNetworkBackgroundColor,\n  getNodeCount,\n} from '../../utils/cxUtil'\nimport EmptyView from './EmptyView'\nimport Popup from '../Popup'\nimport NavigationPanel from '../NavigationPanel'\nimport EdgeLimitExceededPanel from '../FooterPanel/EdgeLimitExceededPanel'\nimport SplitPane from 'react-split-pane'\nimport UIState from '../../model/UIState'\nimport { UIStateActions } from '../../reducer/uiStateReducer'\nimport { NodeView, EdgeView } from 'large-graph-renderer'\n\nconst splitBorder = '1px solid #BBBBBB'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    rootA: {\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      position: 'relative',\n    },\n    subnet: {\n      width: '100%',\n      zIndex: 10,\n    },\n    lowerPanel: {\n      flexGrow: 1,\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      position: 'relative',\n      height: '100%',\n      zIndex: 100,\n    },\n    title: {\n      position: 'fixed',\n      paddingTop: '1em',\n      left: '1em',\n      color: 'rgba(100,100,100,0.7)',\n      zIndex: 100,\n      width: '8em',\n    },\n    expandButton: {\n      position: 'fixed',\n      bottom: '5em',\n      left: '1em',\n      color: 'rgba(100,100,100,1)',\n      zIndex: 100,\n    },\n  }),\n)\n\nconst LAYOUT_TH = 1000\n\ntype ViewProps = {\n  renderer: string\n  objectCount: number\n  cxDataSize: number\n  isWebGL2: boolean\n  cx: object[]\n  setSubCx: Function\n  noView: boolean\n}\n\nconst NetworkPanel: FC<ViewProps> = ({\n  cx,\n  renderer,\n  objectCount,\n  cxDataSize,\n  isWebGL2,\n  setSubCx,\n  noView,\n}: ViewProps) => {\n  const classes = useStyles()\n  const { uuid } = useParams()\n  const [busy, setBusy] = useState(false)\n  const defSize = window.innerHeight * 0.3\n  const minSize = window.innerHeight * 0.1\n  const [size, setSize] = useState(defSize)\n  const [subHeight, setSubHeight] = useState(0)\n\n  const {\n    query,\n    queryMode,\n    uiStateDispatch,\n    uiState,\n    cyDispatch,\n    cyReference,\n    selectionState,\n    selectionStateDispatch,\n    config,\n    ndexCredential,\n    summary,\n    setSummary,\n  } = useContext(AppContext)\n\n  const searchResult = useSearch(\n    uuid,\n    query,\n    config.ndexHttps,\n    ndexCredential,\n    queryMode,\n    config.maxEdgeQuery,\n  )\n\n  const handleDrag = (newSize) => {\n    setSize(newSize)\n  }\n\n  const { maxNumObjects } = config\n  const { showSearchResult } = uiState\n\n  const usePrevious = (val) => {\n    const ref = useRef()\n    useEffect(() => {\n      ref.current = val\n    })\n    return ref.current\n  }\n\n  const subnet = searchResult.data\n  let subCx\n  if (subnet !== undefined) {\n    subCx = subnet['cx']\n    setSubCx(subCx)\n  }\n\n  const last = usePrevious(subCx)\n\n  const getObjectCount = (countFunction, subCx) => {\n    const count = countFunction(subCx)\n    return count ? count : 0\n  }\n\n  const edgeLimitExceeded =\n    subnet !== undefined ? subnet['edgeLimitExceeded'] : false\n\n  useEffect(() => {\n    if (subCx === undefined) {\n      return\n    }\n\n    if (last !== subCx) {\n      const subnetworkNodeCount = getObjectCount(getNodeCount, subCx)\n      const subnetworkEdgeCount = getObjectCount(getEdgeCount, subCx)\n\n      setSummary({\n        ...summary,\n        subnetworkNodeCount: subnetworkNodeCount,\n        subnetworkEdgeCount: subnetworkEdgeCount,\n      })\n    }\n  }, [searchResult])\n\n  const mainEventHandlers = {\n    setSelectedNodesAndEdges: (\n      nodes,\n      edges,\n      lastSelectedType,\n      lastSelectedId,\n      lastSelectedCoordinates,\n    ) => {\n      if (lastSelectedType) {\n        selectionStateDispatch({\n          type: SelectionActions.SET_MAIN_NODES_AND_EDGES,\n          selectionState: {\n            ...selectionState,\n            main: { nodes: nodes, edges: edges },\n            lastSelected: {\n              isNode: lastSelectedType === 'node',\n              fromMain: true,\n              id: lastSelectedId,\n              showPropPanel: true,\n              coordinates: lastSelectedCoordinates,\n            },\n          },\n        })\n      } else {\n        selectionStateDispatch({\n          type: SelectionActions.SET_MAIN_NODES_AND_EDGES,\n          selectionState: {\n            ...selectionState,\n            main: { nodes: nodes, edges: edges },\n            lastSelected: {\n              isNode: null,\n              fromMain: true,\n              id: null,\n              showPropPanel: false,\n              coordinates: null,\n            },\n          },\n        })\n      }\n      //Set active tab if multiple select\n      if (nodes.length > 1 || edges.length > 1) {\n        if (lastSelectedType === 'node' && nodes.length > 1) {\n          uiStateDispatch({\n            type: UIStateActions.SET_ACTIVE_TAB,\n            uiState: {\n              ...uiState,\n              activeTab: 1,\n            },\n          })\n        } else if (lastSelectedType === 'edge' && edges.length > 1) {\n          uiStateDispatch({\n            type: UIStateActions.SET_ACTIVE_TAB,\n            uiState: {\n              ...uiState,\n              activeTab: 2,\n            },\n          })\n        } else if (nodes.length > 1) {\n          uiStateDispatch({\n            type: UIStateActions.SET_ACTIVE_TAB,\n            uiState: {\n              ...uiState,\n              activeTab: 1,\n            },\n          })\n        } else {\n          uiStateDispatch({\n            type: UIStateActions.SET_ACTIVE_TAB,\n            uiState: {\n              ...uiState,\n              activeTab: 2,\n            },\n          })\n        }\n      }\n      //Handle deselects\n      if (uiState.activeTab === 1 && nodes.length <= 1) {\n        uiStateDispatch({\n          type: UIStateActions.SET_ACTIVE_TAB,\n          uiState: {\n            ...uiState,\n            activeTab: 0,\n          },\n        })\n      } else if (uiState.activeTab === 2 && edges.length <= 1) {\n        uiStateDispatch({\n          type: UIStateActions.SET_ACTIVE_TAB,\n          uiState: {\n            ...uiState,\n            activeTab: 0,\n          },\n        })\n      }\n    },\n    clearAll: () => {\n      selectionStateDispatch({\n        type: SelectionActions.CLEAR_ALL_MAIN,\n      })\n      uiStateDispatch({\n        type: UIStateActions.SET_ACTIVE_TAB,\n        uiState: {\n          ...uiState,\n          activeTab: 0,\n        },\n      })\n    },\n  }\n\n  const subEventHandlers = {\n    setSelectedNodesAndEdges: (\n      nodes,\n      edges,\n      lastSelectedType,\n      lastSelectedId,\n      lastSelectedCoordinates,\n    ) => {\n      if (lastSelectedType) {\n        selectionStateDispatch({\n          type: SelectionActions.SET_SUB_NODES_AND_EDGES,\n          selectionState: {\n            ...selectionState,\n            sub: { nodes: nodes, edges: edges },\n            lastSelected: {\n              isNode: lastSelectedType === 'node',\n              fromMain: false,\n              id: lastSelectedId,\n              showPropPanel: true,\n              coordinates: lastSelectedCoordinates,\n            },\n          },\n        })\n      } else {\n        selectionStateDispatch({\n          type: SelectionActions.SET_SUB_NODES_AND_EDGES,\n          selectionState: {\n            ...selectionState,\n            sub: { nodes: nodes, edges: edges },\n            lastSelected: { showPropPanel: false },\n          },\n        })\n      }\n      //Set active tab if multiple select\n      if (nodes.length > 1 || edges.length > 1) {\n        if (lastSelectedType !== null) {\n          uiStateDispatch({\n            type: UIStateActions.SET_ACTIVE_TAB,\n            uiState: {\n              ...uiState,\n              activeTab: lastSelectedType === 'node' ? 1 : 2,\n            },\n          })\n        } else if (nodes.length > 1) {\n          uiStateDispatch({\n            type: UIStateActions.SET_ACTIVE_TAB,\n            uiState: {\n              ...uiState,\n              activeTab: 1,\n            },\n          })\n        } else {\n          uiStateDispatch({\n            type: UIStateActions.SET_ACTIVE_TAB,\n            uiState: {\n              ...uiState,\n              activeTab: 2,\n            },\n          })\n        }\n      }\n    },\n    clearAll: () => {\n      selectionStateDispatch({\n        type: SelectionActions.CLEAR_ALL_SUB,\n      })\n      uiStateDispatch({\n        type: UIStateActions.SET_ACTIVE_TAB,\n        uiState: {\n          ...uiState,\n          activeTab: 0,\n        },\n      })\n    },\n  }\n\n  const lgrEventHandlers = {\n    setSelectedNodeOrEdge: (id, lastSelectedType, lastSelectedCoordinates) => {\n      if (lastSelectedType === 'node') {\n        selectionStateDispatch({\n          type: SelectionActions.SET_MAIN_NODES_AND_EDGES,\n          selectionState: {\n            ...selectionState,\n            main: {\n              nodes: [id],\n              edges: [],\n            },\n            lastSelected: {\n              isNode: true,\n              fromMain: true,\n              id: id,\n              showPropPanel: true,\n              coordinates: lastSelectedCoordinates,\n            },\n          },\n        })\n      } else {\n        selectionStateDispatch({\n          type: SelectionActions.SET_MAIN_NODES_AND_EDGES,\n          selectionState: {\n            ...selectionState,\n            main: {\n              nodes: [],\n              edges: [id],\n            },\n            lastSelected: {\n              isNode: false,\n              fromMain: true,\n              id: id,\n              showPropPanel: true,\n              coordinates: lastSelectedCoordinates,\n            },\n          },\n        })\n      }\n    },\n    setSelectedObjects: (nodes: NodeView[], edges: EdgeView[]): void => {\n      const nodeIds = nodes.map((nv) => nv.id)\n      const edgeIds = edges.map((ev) => ev.id)\n      selectionStateDispatch({\n        type: SelectionActions.SET_MAIN_NODES_AND_EDGES,\n        selectionState: {\n          ...selectionState,\n          main: {\n            nodes: nodeIds,\n            edges: edgeIds,\n          },\n        },\n      })\n    },\n    clearAll: () => {\n      selectionStateDispatch({ type: SelectionActions.CLEAR_ALL_MAIN })\n      uiStateDispatch({\n        type: UIStateActions.SET_ACTIVE_TAB,\n        uiState: {\n          ...uiState,\n          activeTab: 0,\n        },\n      })\n    },\n  }\n\n  const setMain = (cy: CyReference) =>\n    cyDispatch({ type: CyActions.SET_MAIN, cyReference: cy })\n  const setSub = (cy: CyReference) =>\n    cyDispatch({ type: CyActions.SET_SUB, cyReference: cy })\n  const setMainNetworkNotDisplayed = (state: UIState) =>\n    uiStateDispatch({\n      type: UIStateActions.SET_MAIN_NETWORK_NOT_DISPLAYED,\n      uiState: state,\n    })\n\n  const getMainRenderer = (renderer: string) => {\n    // Make sure renderer can display network\n    if (!isWebGL2 && objectCount > config.viewerThreshold) {\n      if (!uiState.mainNetworkNotDisplayed) {\n        setMainNetworkNotDisplayed({\n          ...uiState,\n          mainNetworkNotDisplayed: true,\n        })\n      }\n      return (\n        <EmptyView\n          showIcons={!uiState.showSearchResult}\n          title=\"Browser not supported\"\n          message={`Your browser cannot display large network data. \n            Please use supported browsers, such as Chrome or Firefox, \n            to view large networks. (Still, you can query the network \n              using the query function below.)`}\n        />\n      )\n    } else if (\n      objectCount > maxNumObjects ||\n      cxDataSize > config.maxDataSize ||\n      noView\n    ) {\n      if (!uiState.mainNetworkNotDisplayed) {\n        setMainNetworkNotDisplayed({\n          ...uiState,\n          mainNetworkNotDisplayed: true,\n        })\n      }\n      let title = 'Large Network Entry Selected'\n      let message = `There are ${objectCount} objects in this network and it is too large to display at once. \n          You can use the query functions below to extract sub-networks.`\n      if (noView) {\n        title = 'No Network View Mode'\n        message =\n          'To explore this network, you can use the query functions below to extract sub-networks.'\n      }\n      return (\n        <EmptyView\n          showIcons={!uiState.showSearchResult}\n          title={title}\n          message={message}\n        />\n      )\n    }\n\n    const bgColor = getNetworkBackgroundColor(cx)\n    if (renderer !== 'lgr') {\n      const layout = getCyjsLayout(cx, LAYOUT_TH)\n      return (\n        <CytoscapeRenderer\n          uuid={uuid}\n          cx={cx}\n          layoutName={layout}\n          setCyReference={setMain}\n          eventHandlers={mainEventHandlers}\n          backgroundColor={bgColor}\n        />\n      )\n    } else {\n      const layout = getLgrLayout(cx)\n      return (\n        <LGRPanel\n          cx={cx}\n          eventHandlers={lgrEventHandlers}\n          selectedNodes={selectionState.main.nodes}\n          selectedEdges={selectionState.main.edges}\n          backgroundColor={bgColor}\n          layoutName={layout}\n          pickable={!showSearchResult}\n        />\n      )\n    }\n  }\n\n  let border = 'none'\n  const getSubRenderer = () => {\n    // Case 1:\n    if (!searchResult.isLoading && subCx === undefined && showSearchResult) {\n      const message = 'No search result yet.'\n      return <Loading message={message} showLoading={false} />\n    }\n\n    if (searchResult.isLoading && subCx === undefined && showSearchResult) {\n      // let showLoading = busy\n      let message = 'Loading subnetwork...'\n      return <Loading message={message} showLoading={true} />\n    }\n\n    if (edgeLimitExceeded) {\n      return <EdgeLimitExceededPanel />\n    }\n\n    const count = summary.subnetworkNodeCount + summary.subnetworkEdgeCount\n\n    if (count === 0 && showSearchResult) {\n      return (\n        <Loading\n          message={'No nodes matching your query were found in this network.'}\n          showLoading={false}\n        />\n      )\n    }\n\n    if (\n      searchResult.status === 'success' &&\n      !searchResult.isLoading &&\n      subCx !== undefined &&\n      showSearchResult\n    ) {\n      const layout = getCyjsLayout(subCx, LAYOUT_TH)\n      // For showing border between top and bottom panels\n      border = splitBorder\n      const bgColor = getNetworkBackgroundColor(subCx)\n      return (\n        <div style={{ width: '100%', height: '100%', borderTop: border }}>\n          <CytoscapeRenderer\n            uuid={uuid}\n            cx={subCx}\n            eventHandlers={subEventHandlers}\n            layoutName={layout}\n            setBusy={setBusy}\n            setCyReference={setSub}\n            backgroundColor={bgColor}\n          />\n        </div>\n      )\n    } else {\n      const message = 'Could not get the query result.  Please try again.'\n      return <Loading message={message} showLoading={true} />\n    }\n  }\n\n  const topStyle = { background: '#FFFFFF', zIndex: 0 }\n  const bottomStyle = { background: '#FFFFFF', zIndex: 10 }\n  return (\n    <div className={classes.rootA}>\n      <Popup\n        cx={uiState.mainNetworkNotDisplayed ? subCx : cx}\n        subHeight={subHeight}\n      />\n      {showSearchResult ? (\n        <SplitPane\n          split=\"horizontal\"\n          pane2Style={bottomStyle}\n          pane1Style={topStyle}\n          size={size}\n          minSize={minSize}\n          maxSize={0}\n          onDragFinished={handleDrag}\n        >\n          <div className={classes.lowerPanel}>\n            <NavigationPanel target={'main'} />\n            {!showSearchResult ? (\n              <div />\n            ) : (\n              <Typography className={classes.title}>Overview</Typography>\n            )}\n            {getMainRenderer(renderer)}\n          </div>\n          <AutoSizer disableWidth>\n            {({ height, width }) => {\n              if (height !== subHeight) {\n                setSubHeight(height)\n              }\n              return (\n                <div className={classes.subnet} style={{ height: height }}>\n                  {showSearchResult ? (\n                    <NavigationPanel target={'sub'} />\n                  ) : (\n                    <div />\n                  )}\n                  {getSubRenderer()}\n                </div>\n              )\n            }}\n          </AutoSizer>\n        </SplitPane>\n      ) : (\n        <div className={classes.lowerPanel}>\n          <NavigationPanel target={'main'} />\n          {!showSearchResult ? (\n            <div />\n          ) : (\n            <Typography className={classes.title}>Overview</Typography>\n          )}\n          {getMainRenderer(renderer)}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default NetworkPanel\n","import React, { FC, ReactNode } from 'react'\nimport { Collapse, makeStyles, Theme, Typography } from '@material-ui/core'\nimport { ExpandLess, ExpandMore } from '@material-ui/icons'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  collapsiblePanelTitle: {\n    padding: theme.spacing(1),\n    borderTop: `1px solid ${theme.palette.divider}`,\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.04) !important',\n      cursor: 'pointer',\n    },\n    height: '2.8em',\n  },\n  collapsiblePanel: {\n    paddingBottom: theme.spacing(2),\n  },\n  expandIcon: {\n    float: 'right',\n  },\n}))\n\ntype CollapsiblePanelProps = {\n  openByDefault?: boolean\n  title: string\n  children: ReactNode\n  backgroundColor?: string\n  className?: string\n  open: boolean\n  setOpen: (boolean) => void\n}\n\nconst CollapsiblePanel: FC<CollapsiblePanelProps> = ({\n  openByDefault = true,\n  title = '?',\n  children,\n  backgroundColor,\n  open,\n  setOpen,\n}) => {\n  const classes = useStyles()\n\n  const _handleClick = () => {\n    setOpen(!open)\n  }\n\n  return (\n    <>\n      <div\n        onClick={_handleClick}\n        className={classes.collapsiblePanelTitle}\n        style={{ backgroundColor }}\n      >\n        <Typography variant=\"subtitle2\" color=\"textSecondary\">\n          {title}\n          {open ? (\n            <ExpandLess className={classes.expandIcon} />\n          ) : (\n            <ExpandMore className={classes.expandIcon} />\n          )}\n        </Typography>\n      </div>\n      <div style={{ minHeight: 'auto' }}>\n        <Collapse\n          in={open}\n          timeout=\"auto\"\n          unmountOnExit\n          className={classes.collapsiblePanel}\n          style={{ backgroundColor, marginBottom: '-16px' }}\n        >\n          {children}\n        </Collapse>\n      </div>\n    </>\n  )\n}\n\nexport default CollapsiblePanel\n","import React from 'react'\nimport { Typography, makeStyles, Theme } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(1),\n  },\n  segmentTitle: {\n    marginTop: theme.spacing(1),\n  },\n}))\n\nconst NetworkPropertySegment = (props) => {\n  const { summary, details } = props\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      {summary ? (\n        <Typography\n          variant=\"caption\"\n          color=\"textSecondary\"\n          display=\"block\"\n          className={classes.segmentTitle}\n        >\n          {summary}\n        </Typography>\n      ) : null}\n      <Typography variant=\"body2\" display=\"block\" component=\"div\">\n        {details}\n      </Typography>\n    </div>\n  )\n}\n\nexport default NetworkPropertySegment\n","import React, { FC } from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport Linkify from 'linkify-react'\nimport parse from 'html-react-parser'\nimport CollapsiblePanel from './CollapsiblePanel'\nimport NetworkPropertySegment from './NetworkPropertySegment'\nimport { NetworkPanelState } from '..'\nimport { Theme } from '@material-ui/core'\nimport { HIDDEN_ATTR_PREFIX } from '../EntryTable'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  wrapper: {\n    height: '100%',\n    maxHeight: '100%',\n    minHeight: '100%',\n    overflowY: 'hidden',\n    paddingBottom: '3.1em',\n    background: 'inherit',\n  },\n\n  innerWrapper: {\n    height: '100%',\n    background: 'white',\n    overflowY: 'auto',\n    // maxHeight: '80%',\n  },\n  table: {\n    cellSpacing: 0,\n    borderSpacing: 0,\n    borderCollapse: 'collapse',\n  },\n  tdTitle: {\n    whiteSpace: 'nowrap',\n    paddingRight: '1em',\n    paddingLeft: 0,\n    verticalAlign: 'top',\n  },\n  tdContent: {\n    wordWrap: 'break-word',\n    wordBreak: 'break-all',\n    verticalAlign: 'top',\n  },\n\n  icon: {\n    verticalAlign: 'middle',\n    height: '0.9em',\n    marginLeft: theme.spacing(1),\n  },\n}))\n\nconst NetworkProperties: FC<{\n  summary: any\n  panelState: NetworkPanelState\n  setPanelState: (state: NetworkPanelState) => void\n}> = ({ summary, panelState, setPanelState }) => {\n  const properties = summary.properties\n  const description = summary.description\n  const classes = useStyles()\n\n  const _handleInfoOpen = (val: boolean) => {\n    setPanelState({ ...panelState, netInfoOpen: val })\n  }\n\n  const _handleDescriptionOpen = (val: boolean) => {\n    setPanelState({ ...panelState, descriptionOpen: val })\n  }\n\n  const _handlePropsOpen = (val: boolean) => {\n    setPanelState({ ...panelState, propsOpen: val })\n  }\n  let informationDisplay\n  let descriptionDisplay\n  let propertiesDisplay\n\n  //Information display\n  const informationTableContents = []\n  if (summary.owner) {\n    informationTableContents.push(\n      <tr key=\"owner\">\n        <td className={classes.tdTitle}>Owner</td>\n        <td className={classes.tdContent}>{summary.owner}</td>\n      </tr>,\n    )\n  }\n  if (summary.creationTime) {\n    const creationDate = new Date(summary.creationTime)\n    informationTableContents.push(\n      <tr key=\"created\">\n        <td className={classes.tdTitle}>Created</td>\n        <td className={classes.tdContent}>\n          {creationDate.toLocaleDateString() +\n            ' ' +\n            creationDate.toLocaleTimeString()}\n        </td>\n      </tr>,\n    )\n  }\n  if (summary.modificationTime) {\n    const modificationDate = new Date(summary.modificationTime)\n    informationTableContents.push(\n      <tr key=\"lastModified\">\n        <td className={classes.tdTitle}>Last modified</td>\n        <td className={classes.tdContent}>\n          {modificationDate.toLocaleDateString() +\n            ' ' +\n            modificationDate.toLocaleTimeString()}\n        </td>\n      </tr>,\n    )\n  }\n  if (summary.externalId) {\n    informationTableContents.push(\n      <tr key=\"uuid\">\n        <td className={classes.tdTitle}>UUID</td>\n        <td className={classes.tdContent}>{summary.externalId}</td>\n      </tr>,\n    )\n  }\n  if (summary.version) {\n    informationTableContents.push(\n      <tr key=\"version\">\n        <td className={classes.tdTitle}>Version</td>\n        <td className={classes.tdContent}>{summary.version}</td>\n      </tr>,\n    )\n  }\n  if (summary.visibility) {\n    if (\n      summary.indexLevel &&\n      (summary.indexLevel === 'ALL' || summary.indexLevel === 'META')\n    ) {\n      informationTableContents.push(\n        <tr key=\"visibility\">\n          <td className={classes.tdTitle}>Visibility</td>\n          <td className={classes.tdContent} valign=\"middle\">\n            P{summary.visibility.toLowerCase().slice(1)} (searchable)\n          </td>\n        </tr>,\n      )\n    } else {\n      informationTableContents.push(\n        <tr key=\"visibility\">\n          <td className={classes.tdTitle}>Visibility</td>\n          <td className={classes.tdContent}>\n            P{summary.visibility.toLowerCase().slice(1)} (not searchable)\n          </td>\n        </tr>,\n      )\n    }\n  }\n  if (informationTableContents.length > 0) {\n    const informationList = [\n      [\n        null,\n        <table className={classes.table}>\n          <tbody>{informationTableContents}</tbody>\n        </table>,\n      ],\n    ]\n    informationDisplay = formatDisplay(informationList)\n  }\n\n  //Properties display\n  const propertiesTableContent = []\n  let rights\n  let rightsHolder\n  let reference\n  for (let property of properties) {\n    const value = property.value.trim()\n    const predicate = property.predicateString.trim()\n    if (value !== '' && !predicate.startsWith(HIDDEN_ATTR_PREFIX)) {\n      if (predicate === '@context') {\n        continue\n      } else if (predicate === 'rights') {\n        if (value.includes('|')) {\n          const [url, text] = value.split('|')\n          rights = '<a target=\"_blank\" href=\"' + url + '\">' + text + '</a>'\n        } else {\n          rights = value\n        }\n      } else if (predicate === 'rightsHolder') {\n        rightsHolder = value\n      } else if (predicate === 'reference') {\n        reference = value\n      } else {\n        propertiesTableContent.push(\n          <tr key={predicate}>\n            <td className={classes.tdTitle}>{formatTitle(predicate)}</td>\n            <td className={classes.tdContent}>{formatPropertyValue(value)}</td>\n          </tr>,\n        )\n      }\n    }\n  }\n  if (propertiesTableContent.length > 0) {\n    propertiesDisplay = formatDisplay([\n      [\n        null,\n        <table className={classes.table}>\n          <tbody>{propertiesTableContent}</tbody>\n        </table>,\n      ],\n    ])\n  }\n\n  //Description display\n  const descriptionList = []\n  if (description !== undefined && description.length > 0) {\n    descriptionList.push([null, formatDescription(description)])\n  }\n  if (rights || rightsHolder) {\n    const rightsTable = (\n      <table className={classes.table}>\n        <tbody>\n          {rights ? (\n            <tr>\n              <td className={classes.tdTitle}>Rights</td>\n              <td className={classes.tdContent}>\n                {formatPropertyValue(rights)}\n              </td>\n            </tr>\n          ) : null}\n          {rightsHolder ? (\n            <tr>\n              <td className={classes.tdTitle}>Rights holder</td>\n              <td className={classes.tdContent}>\n                {formatPropertyValue(rightsHolder)}\n              </td>\n            </tr>\n          ) : null}\n        </tbody>\n      </table>\n    )\n    descriptionList.push(['Rights', rightsTable])\n  }\n  if (reference) {\n    descriptionList.push(['Reference', formatPropertyValue(reference)])\n  }\n  if (descriptionList.length > 0) {\n    descriptionDisplay = formatDisplay(descriptionList)\n  }\n\n  let darkBackground = 0\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.innerWrapper}>\n        {informationDisplay ? (\n          <CollapsiblePanel\n            title=\"Network information\"\n            children={informationDisplay}\n            backgroundColor={darkBackground++ % 2 === 0 ? 'inherit' : 'white'}\n            open={panelState.netInfoOpen}\n            setOpen={_handleInfoOpen}\n          />\n        ) : null}\n        {descriptionDisplay ? (\n          <CollapsiblePanel\n            title=\"Description\"\n            children={descriptionDisplay}\n            backgroundColor={darkBackground++ % 2 === 0 ? 'inherit' : 'white'}\n            open={panelState.descriptionOpen}\n            setOpen={_handleDescriptionOpen}\n          />\n        ) : null}\n        {propertiesDisplay ? (\n          <CollapsiblePanel\n            title=\"Properties\"\n            children={propertiesDisplay}\n            backgroundColor={darkBackground++ % 2 === 0 ? 'inherit' : 'white'}\n            open={panelState.propsOpen}\n            setOpen={_handlePropsOpen}\n          />\n        ) : null}\n      </div>\n    </div>\n  )\n}\n\nconst formatTitle = (string) => {\n  if (string === undefined) {\n    return\n  }\n  return string.charAt(0).toUpperCase() + string.slice(1)\n}\n\nconst formatPropertyValue = (value: string) => {\n  if (value === undefined) {\n    return null\n  }\n\n  let processedValue: string = value\n    .toString()\n    .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script\\ *>/gi, '')\n  const parsedValue = parse(processedValue)\n  return <Linkify key={`key-${Math.random()}`}>{parsedValue}</Linkify>\n}\n\nconst formatDescription = (string) => {\n  if (string === undefined) {\n    return\n  }\n  string = string\n    .toString()\n    .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script\\ *>/gi, '')\n  string = parse(string)\n  return string\n}\n\nconst formatDisplay = (propertiesList) => {\n  const display = []\n  let index = 0\n  for (let property of propertiesList) {\n    display.push(\n      <NetworkPropertySegment\n        summary={property[0]}\n        details={property[1]}\n        key={index++}\n      />,\n    )\n  }\n  return display\n}\n\nexport default NetworkProperties\n","import { useQuery } from 'react-query'\nimport NdexCredential from '../model/NdexCredential'\nimport { getAccessKey, getNdexClient } from '../utils/credentialUtil'\nimport NDExError from '../utils/error/NDExError'\n\nimport { useLocation } from \"react-router-dom\"\n\nconst summaryMap = {}\n\nasync function getNetworkSummary(\n  uuid: string,\n  serverUrl: string,\n  apiVersion: string,\n  credential: NdexCredential,\n) {\n  const cache = summaryMap[uuid]\n\n  if (cache !== undefined) {\n    return cache\n  }\n\n  if (!credential.loaded) {\n    return undefined\n  }\n\n  const ndexUrl = `${serverUrl}/${apiVersion}`\n  try {\n    const ndexClient = getNdexClient(ndexUrl, credential)\n    let summary = null\n    if(credential.accesskey !== undefined && credential.accesskey !== '') {\n      summary = await ndexClient.getNetworkSummary(uuid, credential.accesskey)\n    } else {\n      summary = await ndexClient.getNetworkSummary(uuid)\n    }\n    summaryMap[uuid] = summary\n\n    if (!isValidSummary(summary)) {\n      throw new NDExError(summary.errorMessage, {\n        subMessage: 'The entry contains invalid data in summary',\n      })\n    }\n\n    return summary\n  } catch (e: unknown) {\n    throw new NDExError(e['message'], e)\n  }\n}\n\nconst isValidSummary = (summary: object): boolean => {\n  console.log('Summary:', summary)\n  if (summary === undefined || summary === null) {\n    return false\n  } else if (\n    summary['errorMessage'] !== '' &&\n    summary['errorMessage'] !== undefined\n  ) {\n    return false\n  }\n\n  return true\n}\n\nexport default function useNetworkSummary(\n  uuid: string,\n  serverUrl: string,\n  apiVersion: string = 'v2',\n  credential: NdexCredential,\n) {\n\n  const location = useLocation()\n  const accessKey: string = getAccessKey(location.search)\n  if(accessKey !== null) {\n    credential.accesskey = accessKey\n  }\n\n  return useQuery(\n    ['networkSummary', uuid, serverUrl, apiVersion, credential],\n    () => getNetworkSummary(uuid, serverUrl, apiVersion, credential),\n    {\n      retry: false,\n    },\n  )\n}\n","enum TargetNodes {\n  All = 'All nodes',\n  Selected = 'Selected nodes',\n  AllResult = 'All nodes in query result',\n  SelectedResult = 'Selected nodes in query result',\n}\n\nexport default TargetNodes","import TargetNodes from './TargetNodes'\n\nexport enum DB {\n  IQUERY = 'IQuery',\n  MSIGDB = 'MSigDB',\n}\n\nexport const DB_URL = {\n  [DB.IQUERY]: 'http://iquery.ndexbio.org/?genes=',\n  [DB.MSIGDB]:\n    'https://www.gsea-msigdb.org/gsea/analysisApi?speciesName=Human&username=ndex_user&op=annotate&geneIdList=',\n}\ntype QueryState = {\n  db: DB\n  column: string\n  target: TargetNodes\n}\n\nexport default QueryState\n","import React, { FC, ReactElement, useEffect, useState } from 'react'\n\nimport {\n  FormControl,\n  InputLabel,\n  makeStyles,\n  Select,\n  Theme,\n} from '@material-ui/core'\n\nimport TargetNodes from './TargetNodes'\nimport SelectionState from '../../../../model/SelectionState'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  formControl: {\n    width: '100%',\n    '& .MuiInputBase-root': {\n      fontSize: 'inherit',\n    },\n  },\n}))\n\nconst MAIN: TargetNodes[] = [TargetNodes.All, TargetNodes.Selected]\nconst SUB: TargetNodes[] = [TargetNodes.AllResult, TargetNodes.SelectedResult]\n\nconst TargetSelector: FC<{\n  selectionState: SelectionState\n  showSearchResult: boolean\n  target: TargetNodes\n  setTarget: (TargetNodes) => void\n}> = ({\n  selectionState,\n  showSearchResult,\n  target = TargetNodes.All,\n  setTarget,\n}): ReactElement => {\n  const classes = useStyles()\n\n  useEffect(() => {\n\n    if(showSearchResult) {\n      setTarget(TargetNodes.AllResult)\n\n    }\n  }, [showSearchResult])\n\n  useEffect(() => {\n    if (showSearchResult) {\n      return\n    }\n    const mainSelection = selectionState.main\n    const mainSelectedNodes = mainSelection['nodes']\n\n    if (mainSelectedNodes.length !== 0) {\n      setTarget(TargetNodes.Selected)\n    } else {\n      setTarget(TargetNodes.All)\n    }\n  }, [selectionState.main])\n\n  useEffect(() => {\n    if (!showSearchResult) {\n      return\n    }\n\n    const subSelection = selectionState.sub\n    const subSelectedNodes = subSelection['nodes']\n\n    if (subSelectedNodes.length !== 0) {\n      setTarget(TargetNodes.SelectedResult)\n    } else {\n      setTarget(TargetNodes.AllResult)\n    }\n  }, [selectionState.sub])\n\n  const _handleChange = (event) => {\n    const { target } = event\n    const selectedValue: TargetNodes = target.value as TargetNodes\n    console.log('Event', selectedValue)\n    setTarget(selectedValue)\n  }\n\n  const entries: TargetNodes[] = showSearchResult ? SUB : MAIN\n\n  return (\n    <FormControl variant=\"standard\" className={classes.formControl}>\n      <InputLabel htmlFor=\"attr-selector\">attribute of</InputLabel>\n      <Select native value={target} onChange={_handleChange}>\n        {entries.map((val: TargetNodes) => (\n          <option key={val} value={val}>\n            {val}\n          </option>\n        ))}\n      </Select>\n    </FormControl>\n  )\n}\n\nexport default TargetSelector\n","import React, { FC, useContext, useState, useEffect } from 'react'\nimport { Grid, makeStyles, Theme, Tooltip } from '@material-ui/core'\nimport AppContext from '../../../../context/AppState'\nimport useAttributes from '../../../../hooks/useAttributes'\nimport { useParams } from 'react-router-dom'\nimport TargetSelector from './TargetSelector'\nimport TargetNodes from './TargetNodes'\nimport QueryState, { DB } from './QueryState'\nimport ColumnSelector from './ColumnSelector'\nimport DBSelector from './DBSelector'\nimport StartQueryButton from './StartQueryButton'\nimport { buildUrl, getColumnNames } from './query-util'\nimport useSearch from '../../../../hooks/useSearch'\nimport { getEntry } from '../../../../utils/cxUtil'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  container: {\n    width: '100%',\n    padding: theme.spacing(2),\n    paddingBottom: 0,\n    margin: 0,\n  },\n  item: {\n    paddingLeft: theme.spacing(1),\n  },\n  flexContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n  },\n}))\n\nenum ButtonState {\n  ENABLED, // enabled\n  NO_NODES_SELECTED, // disabled, no nodes selected\n  TOO_MANY_NODES, // disabled, network contains too many nodes to query all\n  TOO_MANY_NODES_SELECTED, // disabled, too many nodes selected\n}\n\n// Maximum length of the URL\nconst MAX_URL_LENGTH = 8200\n\n// TODO: tweak this number\nconst MAX_NODE_COUNT = 500\n\nconst QueryPanel: FC<{\n  cx: any\n  queryState: QueryState\n  setQueryState: (QueryState) => void\n}> = ({ cx, queryState, setQueryState }) => {\n  //Parameters\n  const classes = useStyles()\n  const {\n    selectionState,\n    uiState,\n    query,\n    config,\n    ndexCredential,\n    queryMode,\n  } = useContext(AppContext)\n  const { showSearchResult } = uiState\n  const { uuid } = useParams()\n\n  // This custom hook always return all node attributes\n  const allNodeAttributes = useAttributes(\n    uuid,\n    cx,\n    uiState.mainNetworkNotDisplayed,\n  )['nodeAttr']\n\n  // For querying all nodes in query network\n  const searchResult = useSearch(\n    uuid,\n    query,\n    config.ndexHttps,\n    ndexCredential,\n    queryMode,\n    config.maxEdgeQuery,\n  )\n\n  const [columnNames, setColumnNames] = useState<string[]>([])\n\n  // Enable/disable button based on network and selection state\n  const [buttonState, setButtonState] = useState<ButtonState>(\n    ButtonState.ENABLED,\n  )\n\n  const [percentToReduceQuery, setPercentToReduceQuery] = useState('')\n  \n  const tooltipMessages = {\n    [ButtonState.NO_NODES_SELECTED]: 'Select nodes to run a query.',\n    [ButtonState.TOO_MANY_NODES]:\n      `This network contains too many nodes to query the ${queryState.column}` +\n      ` attribute of all nodes. Try selecting a subset or changing the attribute queried.`,\n    [ButtonState.TOO_MANY_NODES_SELECTED]:\n      `Too many nodes are selected to run this query.` +\n      ` Try selecting less than ${MAX_NODE_COUNT} nodes.`,\n  }\n\n  // Extract column names\n  useEffect(() => {\n    const sortedNames: string[] = getColumnNames(cx)\n    setColumnNames(sortedNames)\n    // Select \"name\" if available\n    _handleColumnChange('name')\n  }, [cx])\n  \n  // Initialized: Check selection state \n  useEffect(() => {\n    // const {target} = queryState\n    if(!showSearchResult && selectionState.main['nodes'].length !== 0) {\n      _handleTargetChange(TargetNodes.Selected)\n    }\n    // updateButtonState()\n  }, [])\n\n  // Watch change in targets\n  useEffect(() => {\n    const {target} = queryState\n    if(target === TargetNodes.All && showSearchResult) {\n      _handleTargetChange(TargetNodes.AllResult)\n    }\n    updateButtonState()\n    console.log('TGT:', target)\n  }, [queryState])\n  \n\n  const updateButtonState = (): void => {\n\n    const {target} = queryState\n\n    if(showSearchResult) {\n      // Sub network query mode\n      if(target === TargetNodes.SelectedResult && selectionState.sub['nodes'].length === 0) {\n        // No nodes are selected\n        setButtonState(ButtonState.NO_NODES_SELECTED)\n      } else {\n        setButtonState(ButtonState.ENABLED)\n      }\n\n    } else {\n      // Query on main network\n\n      // too big\n      const nodeCount = getEntry('nodes', cx).length\n      if(nodeCount > MAX_NODE_COUNT && target === TargetNodes.All) {\n        setButtonState(ButtonState.TOO_MANY_NODES)\n        return\n      } else if(target === TargetNodes.Selected && selectionState.main['nodes'].length > MAX_NODE_COUNT) {\n        setButtonState(ButtonState.TOO_MANY_NODES_SELECTED)\n        return\n      } \n\n      if(queryState.target === TargetNodes.Selected && selectionState.main['nodes'].length === 0) {\n        // No nodes are selected\n        setButtonState(ButtonState.NO_NODES_SELECTED)\n      } else {\n        setButtonState(ButtonState.ENABLED)\n      }\n    }\n  }\n\n  useEffect(() => {\n    updateButtonState()\n  }, [selectionState])\n\n  const _handleDBChange = (db: DB): void => {\n    setQueryState({ ...queryState, db: db })\n  }\n  const _handleColumnChange = (selectedColumnName: string): void => {\n    setQueryState({ ...queryState, column: selectedColumnName })\n  }\n  const _handleTargetChange = (val: TargetNodes): void => {\n    setQueryState({ ...queryState, target: val })\n  }\n\n  const _handleClick = () => {\n    const subnet = searchResult.data\n    let subCx\n    if (subnet !== undefined) {\n      subCx = subnet['cx']\n    }\n    // Build query string\n    const queryUrl: string = buildUrl(\n      queryState,\n      allNodeAttributes,\n      selectionState,\n      subCx,\n    )\n\n    // Open in a new page TODO: popup blocker silences this\n    window.open(queryUrl, '_blank')\n  }\n\n  return (\n    <Grid\n      className={classes.container}\n      container\n      spacing={1}\n      justify=\"flex-start\"\n      alignItems=\"center\"\n    >\n      <Grid item xs={3}>\n        <DBSelector selected={queryState.db} setSelected={_handleDBChange} />\n      </Grid>\n\n      <Grid item xs={9} className={classes.item}>\n        <ColumnSelector\n          columns={columnNames}\n          selected={queryState.column}\n          setSelected={_handleColumnChange}\n        />\n      </Grid>\n\n      <Grid item xs={8}>\n        <TargetSelector\n          selectionState={selectionState}\n          showSearchResult={showSearchResult}\n          target={queryState.target}\n          setTarget={_handleTargetChange}\n        />\n      </Grid>\n\n      <Grid item xs={4}>\n        <StartQueryButton\n          enabled={buttonState === ButtonState.ENABLED}\n          message={tooltipMessages[buttonState]}\n          onClick={_handleClick}\n        />\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default QueryPanel\n","import React, { FC, ReactElement } from 'react'\n\nimport {\n  FormControl,\n  InputLabel,\n  makeStyles,\n  Select,\n  Theme,\n} from '@material-ui/core'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  formControl: {\n    width: '100%',\n    '& .MuiInputBase-root': {\n      fontSize: 'inherit',\n    },\n  },\n}))\n\nconst ColumnSelector: FC<{\n  selected: string\n  columns: string[]\n  setSelected: (string) => void\n}> = ({ selected = '', columns = [], setSelected }): ReactElement => {\n  const classes = useStyles()\n\n  const _handleChange = (event) => {\n    const { target } = event\n    const selectedValue: string = target.value\n    setSelected(selectedValue)\n  }\n\n  return (\n    <FormControl variant=\"standard\" className={classes.formControl}>\n      <InputLabel shrink htmlFor=\"attr-selector\">\n        using the data column\n      </InputLabel>\n      <Select\n        native\n        value={selected}\n        onChange={_handleChange}\n        inputProps={{\n          name: 'attr-selector',\n          id: 'attr-selector',\n        }}\n      >\n        {columns.map((name: string) => (\n          <option key={name} value={name}>\n            {name}\n          </option>\n        ))}\n      </Select>\n    </FormControl>\n  )\n}\n\nexport default ColumnSelector\n","import React, { FC, ReactElement } from 'react'\n\nimport {\n  FormControl,\n  InputLabel,\n  makeStyles,\n  Select,\n  Theme,\n} from '@material-ui/core'\nimport { DB } from './QueryState'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  formControl: {\n    width: '100%',\n    '& .MuiInputBase-root': {\n      fontSize: 'inherit',\n    },\n  },\n}))\n\nconst DBSelector: FC<{\n  selected: DB\n  setSelected: (DB) => void\n}> = ({ selected = DB.IQUERY, setSelected }): ReactElement => {\n  const classes = useStyles()\n\n  const _handleChange = (event) => {\n    const { target } = event\n    const selectedValue: string = target.value\n    setSelected(selectedValue)\n  }\n\n  return (\n    <FormControl variant=\"standard\" className={classes.formControl}>\n      <InputLabel shrink htmlFor=\"service-name\">\n        Database:\n      </InputLabel>\n      <Select\n        native\n        value={selected}\n        onChange={_handleChange}\n        inputProps={{\n          name: 'service-name',\n          id: 'service-name',\n        }}\n      >\n        {Object.entries(DB).map((val: [string, string]) => (\n          <option key={val[1]} value={val[1]}>\n            {val[1]}\n          </option>\n        ))}\n      </Select>\n    </FormControl>\n  )\n}\n\nexport default DBSelector\n","import React, { FC, ReactElement } from 'react'\nimport { makeStyles, Theme, Button, Tooltip } from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  formControl: {\n    width: '100%',\n    '& .MuiInputBase-root': {\n      fontSize: 'inherit',\n    },\n  },\n  button: {\n    width: '100%',\n    '&.MuiButton-contained': {},\n  },\n  tooltipText: {\n    fontSize: '0.875rem',\n    textAlign: 'center',\n    padding: theme.spacing(0.5),\n    lineHeight: 1.15,\n  },\n}))\n\nconst StartQueryButton: FC<{\n  enabled: boolean\n  message: string\n  onClick: () => void\n}> = ({ enabled, message, onClick }): ReactElement => {\n  const classes = useStyles()\n\n  const getButton = (disabled: boolean, variant, color) => (\n    <Button\n      variant={variant}\n      color={color}\n      disabled={disabled}\n      size=\"small\"\n      className={classes.button}\n      onClick={onClick}\n      startIcon={<SearchIcon />}\n    >\n      Query\n    </Button>\n  )\n\n  if (enabled) {\n    return getButton(false, 'outlined', 'secondary')\n  } else {\n    return (\n      <Tooltip\n        arrow\n        title={<div className={classes.tooltipText}>{message}</div>}\n      >\n        <span>{getButton(true, 'contained', 'primary')}</span>\n      </Tooltip>\n    )\n  }\n}\n\nexport default StartQueryButton\n","import SelectionState from '../../../../model/SelectionState'\nimport { getEntry } from '../../../../utils/cxUtil'\nimport QueryState, { DB_URL } from './QueryState'\nimport TargetNodes from './TargetNodes'\n\n\nconst getColumnNames = (cx: any[]): string[] => {\n  const nodeAttr = getEntry('nodeAttributes', cx)\n\n  const columnNames = new Set<string>()\n\n  let len = nodeAttr.length\n  while (len--) {\n    columnNames.add(nodeAttr[len]['n'])\n  }\n  // Insert name to the front\n  return ['name', ...Array.from(columnNames).sort()]\n}\n\nconst buildUrl = (\n  queryState: QueryState,\n  attributes: any[],\n  selectionState: SelectionState,\n  cx: any[] // Contains sub network if available\n): string => {\n  const selectedColumn = queryState.column\n  const {db, target} = queryState\n  let attrValues = new Set()\n\n  \n  if(target === TargetNodes.All) {\n    // All nodes in main network\n    const attrVals = Object.values(attributes)\n    attrVals.forEach(entry => {\n      attrValues.add(entry.get(selectedColumn))\n    })   \n  } else if(target === TargetNodes.Selected) {\n    // Selected nodes in main network\n    const selectedNodes = selectionState.main['nodes']\n    selectedNodes.forEach(node => {\n      attrValues.add(attributes[node].get(selectedColumn))\n    });\n  } else if(target === TargetNodes.AllResult) {\n    // All nodes in the query result\n    const nodes = getEntry('nodes', cx)\n    const nodeIds = nodes.map(node=>node['@id'])\n    nodeIds.forEach(node => {\n      attrValues.add(attributes[node].get(selectedColumn))\n    });\n\n    console.log(nodes, nodeIds)\n\n  } else {\n    // Selected nodes in the query result\n    const selectedNodes = selectionState.sub['nodes']\n    selectedNodes.forEach(node => {\n      attrValues.add(attributes[node].get(selectedColumn))\n    });\n\n    console.log(selectedNodes)\n  }\n  const queryString = Array.from(attrValues).sort().join(',')\n  const baseUrl = DB_URL[db.toString()]\n  return `${baseUrl}${queryString}`\n}\n\n\nexport { buildUrl, getColumnNames }\n","import { useQuery } from 'react-query'\nimport NdexCredential from '../model/NdexCredential'\n\nimport { getNdexClient } from '../utils/credentialUtil'\nimport NDExError from '../utils/error/NDExError'\n\nconst permissionsMap = {}\n\nconst getNetworkPermissions = async (\n  uuid: string,\n  serverUrl: string,\n  apiVersion: string,\n  credential: NdexCredential,\n) => {\n  const cache = permissionsMap[uuid]\n\n  if (cache !== undefined) {\n    return cache\n  }\n\n  if (credential === undefined || !credential.loaded || !credential.isLogin) {\n    return undefined\n  }\n\n  const url = `${serverUrl}/${apiVersion}`\n  let networkPermission = null\n\n  try {\n    const ndexClient = getNdexClient(url, credential)\n    const permissions = await ndexClient.getNetworkPermissionsByUUIDs([uuid])\n    networkPermission = permissions[uuid]\n    permissionsMap[uuid] = networkPermission\n  } catch (e: unknown) {\n    throw new NDExError(e['message'], e)\n  }\n\n  return networkPermission\n}\n\nexport default function useNetworkPermissions(\n  uuid: string,\n  serverUrl: string,\n  apiVersion: string = 'v2',\n  credential: NdexCredential,\n) {\n  return useQuery(\n    ['networkPermissions', uuid, serverUrl, apiVersion, credential],\n    () => getNetworkPermissions(uuid, serverUrl, apiVersion, credential),\n    {\n      retry: false,\n    },\n  )\n}\n","import React, { useContext, useState, VFC } from 'react'\nimport { IconButton, Button } from '@material-ui/core'\nimport ClearIcon from '@material-ui/icons/Delete'\nimport { Tooltip } from '@material-ui/core'\nimport Typography from '@material-ui/core/Typography'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Dialog from '@material-ui/core/Dialog'\n\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\n\nimport { getNdexClient } from '../../utils/credentialUtil'\nimport useNetworkPermissions from '../../hooks/useNetworkPermissions'\n\nimport AppContext from '../../context/AppState'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      'text-transform': 'none',\n    },\n  }),\n)\n\nconst DeleteDOIButton: VFC<{ uuid: string }> = ({ uuid }) => {\n  const classes = useStyles()\n\n  const { ndexCredential, config, summary, setSummary } = useContext(AppContext)\n  const permissions = useNetworkPermissions(\n    uuid,\n    config.ndexHttps,\n    'v2',\n    ndexCredential,\n  )\n\n  const [dialogOpen, setDialogOpen] = useState(false)\n\n  const handleDialog = (): void => {\n    setDialogOpen(true)\n  }\n\n  const handleDialogCancel = () => {\n    setDialogOpen(false)\n  }\n\n  const handleDialogOK = () => {\n    handleDeleteRequest(() =>\n      setSummary({\n        ...summary,\n        doi: undefined,\n      }),\n    )\n\n    setDialogOpen(false)\n  }\n\n  const handleDeleteRequest = (onSuccess) => {\n    const ndexClient = getNdexClient(`${config.ndexHttps}/v2`, ndexCredential)\n    ndexClient\n      .cancelDOIRequest(uuid)\n      .then(onSuccess)\n      .catch((err) => {\n        console.log(err)\n        throw new Error(err)\n      })\n  }\n\n  if (\n    ndexCredential.isLogin &&\n    summary !== undefined &&\n    permissions &&\n    permissions.data === 'ADMIN'\n  ) {\n    return (\n      <React.Fragment>\n        <Tooltip title=\"Cancel DOI request\" arrow placement={'left'}>\n          <IconButton\n            size={'small'}\n            onClick={handleDialog}\n            className={classes.button}\n          >\n            <ClearIcon />\n          </IconButton>\n        </Tooltip>\n        <Dialog\n          disableBackdropClick\n          disableEscapeKeyDown\n          maxWidth=\"sm\"\n          aria-labelledby=\"confirmation-dialog-title\"\n          open={dialogOpen}\n        >\n          <DialogTitle id=\"confirmation-dialog-title\">\n            Delete DOI Request\n          </DialogTitle>\n          <DialogContent dividers>\n            <Typography>\n              This will delete your DOI request, please verify that your\n              network's visibility is correct. If you still want a DOI for your\n              network, please submit a new request.\n            </Typography>\n            <br />\n            <Typography>Would you like to delete this request?</Typography>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleDialogCancel}>Cancel</Button>\n            <Button onClick={handleDialogOK}>Confirm</Button>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    )\n  }\n  return null\n}\n\nexport default DeleteDOIButton\n","import React, { useContext, useState, FC } from 'react'\nimport {\n  Chip,\n  createStyles,\n  Grid,\n  makeStyles,\n  Theme,\n  Tooltip,\n} from '@material-ui/core'\nimport { Typography } from '@material-ui/core'\nimport WarningIcon from '@material-ui/icons/AnnouncementOutlined'\nimport ErrorIcon from '@material-ui/icons/ErrorOutline'\nimport { useParams } from 'react-router-dom'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport AppContext from '../../../context/AppState'\nimport QueryPanel from './QueryPanel'\nimport DeleteDOIButton from '../../DeleteDOIButton'\nimport CollapsiblePanel from './CollapsiblePanel'\nimport { NetworkPanelState } from '..'\nimport QueryState from './QueryPanel/QueryState'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      margin: 0,\n      paddingTop: theme.spacing(1),\n    },\n    item: {\n      marginRight: theme.spacing(1),\n    },\n    label: {\n      marginRight: theme.spacing(1),\n      padding: 0,\n      paddingLeft: theme.spacing(1),\n    },\n    row: {\n      display: 'flex',\n      alignItems: 'center',\n      boxSizing: 'border-box',\n    },\n    grid: {\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      paddingTop: theme.spacing(1),\n      paddingBottom: theme.spacing(1),\n    },\n    chip: {\n      paddingLeft: theme.spacing(1),\n    },\n    warning: {\n      color: theme.palette.warning.main,\n    },\n    error: {\n      color: theme.palette.error.main,\n    },\n    copySpan: {\n      display: 'none',\n    },\n    queryPanel: {},\n  }),\n)\n\nconst NetworkDetails: FC<{\n  cx: any\n  panelState: NetworkPanelState\n  setPanelState: (NetworkPanelState) => void\n  queryState: QueryState\n  setQueryState: (QueryState) => void\n  renderer: string\n}> = ({\n  cx,\n  panelState,\n  setPanelState,\n  queryState,\n  setQueryState,\n  renderer,\n}) => {\n  const classes = useStyles()\n  const { uuid } = useParams()\n  const { summary, uiState, config } = useContext(AppContext)\n  const { viewerThreshold, warningThreshold } = config\n  const [doiCopiedHoverText, setDoiCopiedHoverText] = useState(false)\n\n  const _handleQueryOpen = (val: boolean) => {\n    setPanelState({ ...panelState, queryOpen: val })\n  }\n\n  if (summary === undefined || summary === null) {\n    return null\n  }\n\n  const getInformationIcon = (objectCount: number) => {\n    if (objectCount >= viewerThreshold && objectCount < warningThreshold) {\n      return (\n        <Tooltip\n          arrow\n          title=\"Large network loaded: showing network in simplified mode\"\n        >\n          <WarningIcon fontSize=\"large\" className={classes.warning} />\n        </Tooltip>\n      )\n    } else if (objectCount >= warningThreshold) {\n      return (\n        <Tooltip arrow title=\"Network is too large to display\">\n          <ErrorIcon fontSize=\"large\" className={classes.error} />\n        </Tooltip>\n      )\n    }\n  }\n\n  const copyDoi = () => {\n    setDoiCopiedHoverText(true)\n  }\n\n  const mouseEnter = () => {\n    setDoiCopiedHoverText(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      {summary.doi ? (\n        <>\n          {summary.doi === 'Pending' ? (\n            <Grid className={classes.grid} container alignItems={'center'}>\n              <Grid item>\n                <DeleteDOIButton uuid={uuid} />{' '}\n              </Grid>\n              <Grid item>\n                <Chip\n                  variant={'outlined'}\n                  label={'DOI Status: Pending'}\n                  size={'small'}\n                  color={'default'}\n                />\n              </Grid>\n            </Grid>\n          ) : (\n            <div className={classes.chip}>\n              <Tooltip\n                title={\n                  doiCopiedHoverText\n                    ? 'Copied!'\n                    : 'Copy network DOI to clipboard'\n                }\n                className={classes.item}\n              >\n                <CopyToClipboard\n                  text={'https://doi.org/' + summary.doi}\n                  onCopy={copyDoi}\n                >\n                  <Chip\n                    clickable\n                    label={`DOI: ${summary.doi}`}\n                    size={'small'}\n                    color={'default'}\n                    variant=\"outlined\"\n                    onMouseEnter={mouseEnter}\n                  />\n                </CopyToClipboard>\n              </Tooltip>\n            </div>\n          )}\n        </>\n      ) : null}\n\n      <Grid container className={classes.grid}>\n        <Typography className={classes.label} variant=\"body1\">\n          Network Size:\n        </Typography>\n        <Chip\n          size=\"small\"\n          color=\"secondary\"\n          label={`Nodes: ${summary.nodeCount}`}\n          variant=\"outlined\"\n          className={classes.item}\n        />\n        <Chip\n          size=\"small\"\n          color=\"secondary\"\n          label={`Edges: ${summary.edgeCount}`}\n          variant=\"outlined\"\n          className={classes.item}\n        />\n        {getInformationIcon(summary.edgeCount + summary.nodeCount)}\n      </Grid>\n\n      {uiState.showSearchResult && summary.subnetworkNodeCount !== undefined ? (\n        <Grid container className={classes.grid}>\n          <Typography className={classes.label} variant=\"subtitle2\">\n            Query Result:\n          </Typography>\n          <Chip\n            size=\"small\"\n            label={`Nodes: ${summary.subnetworkNodeCount}`}\n            variant=\"outlined\"\n            className={classes.item}\n          />\n          <Chip\n            size=\"small\"\n            label={`Edges: ${summary.subnetworkEdgeCount}`}\n            variant=\"outlined\"\n            className={classes.item}\n          />\n        </Grid>\n      ) : null}\n\n      {renderer === 'lgr' && !uiState.showSearchResult ? (\n        <div />\n      ) : (\n        <CollapsiblePanel\n          openByDefault={false}\n          title={\n            !uiState.showSearchResult\n              ? 'Query External Database'\n              : 'Query External Database (for sub network)'\n          }\n          children={\n            <QueryPanel\n              cx={cx}\n              queryState={queryState}\n              setQueryState={setQueryState}\n            />\n          }\n          open={panelState.queryOpen}\n          setOpen={_handleQueryOpen}\n          backgroundColor={'#f5f5f5'}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default NetworkDetails\n","import React, { useContext, FC } from 'react'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport NetworkProperties from './NetworkProperties'\nimport useNetworkSummary from '../../../hooks/useNetworkSummary'\nimport { useParams } from 'react-router-dom'\nimport AppContext from '../../../context/AppState'\nimport NetworkDetails from './NetworkDetails'\nimport { NetworkPanelState } from '../index'\nimport QueryState from './QueryPanel/QueryState'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      height: '100%',\n      overflowY: 'hidden',\n      margin: 0,\n      padding: 0,\n      display: 'flex',\n      flexDirection: 'column',\n      boxSizing: 'border-box',\n      backgroundColor: theme.palette.background.paper,\n    },\n    description: {\n      padding: 0,\n      margin: 0,\n      backgroundColor: 'inherit',\n      height: '100%',\n      overflowY: 'hidden',\n    },\n  }),\n)\n\nconst NetworkPropertyPanel: FC<{\n  cx: object\n  panelState: NetworkPanelState\n  setPanelState: (NetworkPanelState) => void\n  queryState: QueryState\n  setQueryState: (QueryState) => void\n  renderer: string\n}> = ({\n  cx,\n  panelState,\n  setPanelState,\n  queryState,\n  setQueryState,\n  renderer,\n}) => {\n  const classes = useStyles()\n  const { ndexCredential, config, setSummary, summary } = useContext(AppContext)\n  const { uuid } = useParams()\n\n  const summaryResponse = useNetworkSummary(\n    uuid,\n    config.ndexHttps,\n    'v2',\n    ndexCredential,\n  )\n  const summaryResponseData = summaryResponse.data\n\n  if (\n    summaryResponseData === undefined ||\n    Object.entries(summaryResponseData).length === 0\n  ) {\n    return (\n      <div className={classes.root}>\n        <Grid container>\n          <Grid item md={12}></Grid>\n        </Grid>\n      </div>\n    )\n  } else {\n    if (\n      summary === undefined ||\n      summary.owner !== summaryResponseData['owner']\n    ) {\n      setSummary({\n        ...summary,\n        name: summaryResponseData['name'],\n        owner: summaryResponseData['owner'],\n        externalId: summaryResponseData['externalId'],\n        visibility: summaryResponseData['visibility'],\n        nodeCount: summaryResponseData['nodeCount'],\n        edgeCount: summaryResponseData['edgeCount'],\n        doi: summaryResponseData['doi'],\n      })\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <NetworkDetails\n        cx={cx}\n        panelState={panelState}\n        setPanelState={setPanelState}\n        queryState={queryState}\n        setQueryState={setQueryState}\n        renderer={renderer}\n      />\n      <div className={classes.description}>\n        <NetworkProperties\n          summary={summaryResponseData}\n          panelState={panelState}\n          setPanelState={setPanelState}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default NetworkPropertyPanel\n","import React, { useContext } from 'react'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\nimport { IconButton } from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/ArrowRight'\nimport OpenIcon from '@material-ui/icons/ArrowLeft'\nimport AppContext from '../../../context/AppState'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport UIState from '../../../model/UIState'\nimport { UIStateActions } from '../../../reducer/uiStateReducer'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      height: '1em',\n      width: '1em',\n      margin: 0,\n      borderRadius: 2,\n      border: '1px solid #AAAAAA',\n    },\n    closeIcon: {\n      width: '1em',\n    },\n  }),\n)\n\nconst MinimizeButton = () => {\n  const classes = useStyles()\n  const { uiState, uiStateDispatch } = useContext(AppContext)\n\n  const setDataPanelOpen = (state: UIState) =>\n    uiStateDispatch({ type: UIStateActions.SET_DATA_PANEL_OPEN, uiState: state })\n\n  const handleClick = () => {\n    setDataPanelOpen({ ...uiState, dataPanelOpen: !uiState.dataPanelOpen })\n  }\n\n  if (uiState.dataPanelOpen) {\n    return (\n      <Tooltip title=\"Hide Data Panel\" placement=\"left\" arrow>\n        <IconButton className={classes.button} size=\"small\" onClick={handleClick}>\n          <CloseIcon className={classes.closeIcon} aria-label=\"Collapse the panel\" color=\"inherit\" />\n        </IconButton>\n      </Tooltip>\n    )\n  } else {\n    return (\n      <Tooltip title=\"Show Data Panel\" placement=\"left\" arrow>\n        <IconButton className={classes.button} size=\"small\" onClick={handleClick}>\n          <OpenIcon className={classes.closeIcon} aria-label=\"Collapse the panel\" color=\"inherit\" />\n        </IconButton>\n      </Tooltip>\n    )\n  }\n}\n\nexport default MinimizeButton\n","import React, { FC } from 'react'\nimport MessageIcon from '@material-ui/icons/InfoOutlined'\n\ntype InformationPanelProps = {\n  type: string\n  count: number\n  threshold: number\n}\n\nconst InformationPanel: FC<InformationPanelProps> = ({\n  type,\n  count,\n  threshold,\n}: InformationPanelProps): React.ReactElement => {\n  const message =\n    `This network has large number of ${type}s (${count}). ` +\n    `To display ${type} attributes, you can select up to ${threshold} ${type}s at a time.`\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '100%',\n        display: 'grid',\n        justifyContent: 'center',\n        alignContent: 'center',\n      }}\n    >\n      <div style={{ padding: '2em' }}>\n        <MessageIcon style={{ fontSize: '6em' }} />\n        <h3>{message}</h3>\n      </div>\n    </div>\n  )\n}\n\nexport default InformationPanel\n","import { useQuery } from 'react-query'\nimport NdexCredential from '../model/NdexCredential'\n\nimport { getNdexClient } from '../utils/credentialUtil'\nimport NDExError from '../utils/error/NDExError'\n\nconst metaDataMap = {}\n\nconst getNetworkMetaData = async (\n  uuid: string,\n  serverUrl: string,\n  apiVersion: string,\n  credential: NdexCredential,\n) => {\n  const cache = metaDataMap[uuid]\n\n  if (cache !== undefined) {\n    return cache\n  }\n\n  if (credential === undefined || !credential.loaded) {\n    return undefined\n  }\n\n  try {\n    const ndexClient = getNdexClient(`${serverUrl}/${apiVersion}`, credential)\n    let metaData = null\n    if(credential.accesskey !== undefined && credential.accesskey !== '') {\n      metaData = await ndexClient.getMetaData(uuid, credential.accesskey)\n    } else {\n      metaData = await ndexClient.getMetaData(uuid)\n    }\n    metaDataMap[uuid] = metaData\n    return metaData\n  } catch (e: unknown) {\n    throw new NDExError(e['message'], e)\n  }\n}\n\nexport default function useNetworkMetaData(\n  uuid: string,\n  serverUrl: string,\n  apiVersion: string = 'v2',\n  credential: NdexCredential,\n) {\n  const res = useQuery(\n    ['networkMetaData', uuid, serverUrl, apiVersion, credential],\n    () => getNetworkMetaData(uuid, serverUrl, apiVersion, credential),\n    {\n      retry: false,\n    },\n  )\n\n  return res\n}\n","import React, { FC, useContext } from 'react'\nimport { useParams } from 'react-router-dom'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\n\nimport {\n  CyNDExProvider,\n  OpenInCytoscapeButton,\n} from 'cytoscape-explore-components'\n\nimport useSearch from '../../hooks/useSearch'\nimport useNetworkMetaData from '../../hooks/useNetworkMetaData'\n\nimport AppContext from '../../context/AppState'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    wrapper: {\n      // backgroundColor: 'red',\n      minWidth: '12em',\n      minHeight: '2em'\n    },\n  }),\n)\n\nconst OpenInCytoscape: FC = () => {\n  const classes = useStyles()\n  const { uuid } = useParams()\n\n  const { query, queryMode, ndexCredential, config, summary } =\n    useContext(AppContext)\n\n  const { data } = useSearch(\n    uuid,\n    query,\n    config.ndexHttps,\n    ndexCredential,\n    queryMode,\n    config.maxEdgeQuery,\n  )\n\n  const useQueryResult = data !== undefined && data['cx']\n\n  const subCx =\n    data !== undefined && !data['edgeLimitExceeded'] ? data['cx'] : undefined\n\n  const fetchCX = () =>\n    new Promise((resolve, reject) => {\n      if (subCx) {\n        resolve(subCx)\n      } else {\n        reject('No search result is available')\n      }\n    })\n\n  const [snackMessage, setSnackMessage] = React.useState(undefined)\n\n  const onSuccess = () => {\n    setSnackMessage('Network opened.')\n  }\n\n  const onFailure = (err) => {\n    setSnackMessage('Failed to load network: ' + err)\n  }\n\n  const handleClose = () => {\n    setSnackMessage(undefined)\n  }\n\n  const metaDataResponse = useNetworkMetaData(\n    uuid,\n    config.ndexHttps,\n    'v2',\n    ndexCredential,\n  )\n  // @ts-ignore\n  const metaData = metaDataResponse.data\n    ? metaDataResponse.data.metaData\n    : undefined\n\n  const ndexNetworkProperties = {\n    uuid: uuid,\n    summary: summary,\n    metaData: metaData,\n  }\n\n  return (\n    <CyNDExProvider port={1234}>\n      {useQueryResult ? (\n        subCx ? (\n          <div className={classes.wrapper}>\n            <OpenInCytoscapeButton\n              size=\"small\"\n              fetchCX={fetchCX}\n              onSuccess={onSuccess}\n              onFailure={onFailure}\n            />\n          </div>\n        ) : null\n      ) : (\n        <div className={classes.wrapper}>\n          <OpenInCytoscapeButton\n            size=\"small\"\n            ndexNetworkProperties={ndexNetworkProperties}\n            onSuccess={onSuccess}\n            onFailure={onFailure}\n          />\n        </div>\n      )}\n      <Snackbar\n        open={snackMessage !== undefined}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        message={snackMessage}\n      />\n    </CyNDExProvider>\n  )\n}\n\nexport default OpenInCytoscape\n","import React, {\n  useRef,\n  useEffect,\n  useState,\n  useMemo,\n  useContext,\n  FC,\n  ReactElement,\n} from 'react'\n\nimport { Typography, Tooltip } from '@material-ui/core'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\nimport NetworkPropertyPanel from './NetworkPropertyPanel'\nimport { useParams } from 'react-router-dom'\nimport AppContext from '../../context/AppState'\nimport useAttributes from '../../hooks/useAttributes'\nimport { getContextFromCx } from '../../utils/contextUtil'\nimport useNetworkSummary from '../../hooks/useNetworkSummary'\nimport MinimizeButton from './NetworkPropertyPanel/MinimizeButton'\nimport EntryTable from './EntryTable'\nimport QueryState, { DB } from './NetworkPropertyPanel/QueryPanel/QueryState'\nimport TargetNodes from './NetworkPropertyPanel/QueryPanel/TargetNodes'\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs'\nimport InformationPanel from './EntryTable/InformationPanel'\nimport WarningPanel from './EntryTable/WarningPanel'\nimport { getEntry, getNodeCount, getEdgeCount } from '../../utils/cxUtil'\n\nlet baseFontSize = null\n\nconst useStyles = makeStyles((theme: Theme) => {\n  baseFontSize = theme.typography.fontSize\n\n  return createStyles({\n    root: {\n      width: '100%',\n      height: '100%',\n\n      maxHeight: '100%',\n      margin: 0,\n      padding: 0,\n      display: 'flex',\n      flexDirection: 'column',\n      boxSizing: 'border-box',\n      backgroundColor: theme.palette.background.paper,\n      overflowY: 'hidden',\n      borderLeft: `1px solid ${theme.palette.divider}`,\n    },\n    topBar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      paddingRight: theme.spacing(1),\n      border: `1px solid ${theme.palette.divider}`,\n    },\n    title: {\n      paddingTop: theme.spacing(1.5),\n      paddingBottom: theme.spacing(1.5),\n      paddingLeft: theme.spacing(3),\n    },\n    tabWrapper: {\n      boxSizing: 'border-box',\n      backgroundColor: theme.palette.background.paper,\n      margin: 0,\n      padding: 0,\n      width: '100%',\n      height: '100%',\n      overflowY: 'hidden',\n    },\n    tabList: {\n      boxSizing: 'border-box',\n      padding: 0,\n      margin: 0,\n      minHeight: '3.1em',\n      // borderBottom: `1px solid ${theme.palette.divider}`,\n    },\n    tab: {\n      '&:disabled': {\n        color: '#AAAAAA',\n      },\n    },\n    collapsiblePanel: {\n      minHeight: 'auto',\n    },\n  })\n})\n\nenum TabType {\n  Network,\n  Node,\n  Edge,\n}\n\nexport type NetworkPanelState = {\n  netInfoOpen: boolean\n  descriptionOpen: boolean\n  propsOpen: boolean\n  queryOpen: boolean\n}\n\nconst DEF_QUERY_STATE: QueryState = {\n  db: DB.IQUERY,\n  column: 'name',\n  target: TargetNodes.All,\n}\n\ntype GraphObjectCount = {\n  nodeCount: number\n  edgeCount: number\n}\n\n// Default threshold of selected nodes to be displayed in the table\nconst SELECTION_TH = 10000\n\nconst DataPanel: FC<{\n  width: number\n  cx: any[]\n  renderer: string\n  objectCount: number\n  cxDataSize: number\n}> = ({ width, cx, renderer, objectCount, cxDataSize }): ReactElement => {\n  const baseRef = useRef(null)\n  const titleRef = useRef(null)\n  const tabsRef = useRef(null)\n  const classes = useStyles()\n\n  const [objCount, setObjCount] = useState<GraphObjectCount>({\n    nodeCount: 0,\n    edgeCount: 0,\n  })\n\n  const [size, setSize] = useState<[number, number]>([0, 0])\n  const [changed, setChanged] = useState<boolean>(false)\n\n  const { ndexCredential, config, selectionState, uiState } = useContext(\n    AppContext,\n  )\n\n  const { maxNumObjects, maxDataSize } = config\n\n  useEffect(() => {\n    if (baseRef.current && titleRef.current) {\n      let baseHeight =\n        baseRef.current.offsetHeight - titleRef.current.offsetHeight\n      let baseWidth = baseRef.current.offsetWidth\n      setSize([baseWidth, baseHeight])\n    }\n  }, [baseRef, titleRef, tabsRef, selectionState])\n\n  const { showSearchResult } = uiState\n\n  const { uuid } = useParams()\n\n  const attributes = useAttributes(uuid, cx, uiState.mainNetworkNotDisplayed)\n  const context = useMemo(() => getContextFromCx(cx), [cx])\n\n  // Selected tab\n  const [selected, setSelected] = useState<TabType>(TabType.Network)\n\n  //\n  const [tabsDisabled, setTabsDisabled] = useState<boolean>(true)\n  const [allNodeIds, setAllNodeIds] = useState<any[]>([])\n  const [allEdgeIds, setAllEdgeIds] = useState<any[]>([])\n\n  useEffect(() => {\n    if (cx !== undefined && cx !== null && Array.isArray(cx) && cx.length > 0) {\n\n\n      if( objectCount > maxNumObjects || cxDataSize > config.maxDataSize ) {\n        setTabsDisabled(true)\n        return\n      } else {\n        setTabsDisabled(false)\n      }\n\n      const allNodeCount = getNodeCount(cx)\n      const allEdgeCount = getEdgeCount(cx)\n      setObjCount({ nodeCount: allNodeCount, edgeCount: allEdgeCount })\n\n      const allNodes = getEntry('nodes', cx)\n      const allEdges = getEntry('edges', cx)\n\n      if (\n        allNodes !== undefined &&\n        Array.isArray(allNodes) &&\n        allNodes.length !== 0\n      ) {\n        const testNodeId = allNodes[0]['@id']\n        const idTag = testNodeId === undefined ? 'id' : '@id'\n        const allNodeIDs = allNodes.map((node) => node[idTag])\n        setAllNodeIds(allNodeIDs)\n      }\n      if (\n        allEdges !== undefined &&\n        Array.isArray(allEdges) &&\n        allEdges.length !== 0\n      ) {\n        const testEdgeId = allEdges[0]['@id']\n        const idTag = testEdgeId === undefined ? 'id' : '@id'\n        const allEdgeIds = allEdges.map((edge) => edge[idTag])\n        setAllEdgeIds(allEdgeIds)\n      }\n    }\n  }, [cx])\n\n  useEffect(() => {\n    const { main, sub } = selectionState\n    if (\n      main.nodes.length <= 1 &&\n      main.edges.length <= 1 &&\n      sub.nodes.length <= 1 &&\n      sub.edges.length <= 1\n    ) {\n      setSelected(TabType.Network)\n      // setTabsDisabled(true)\n    } else {\n      // setTabsDisabled(false)\n      setSelected(TabType.Node)\n      setChanged(!changed)\n    }\n\n    // For populating the table with all the nodes\n    if (main.nodes.length === 0 && objCount.nodeCount < SELECTION_TH) {\n    }\n  }, [selectionState])\n\n  // Unified child panel states\n  const [panelState, setPanelState] = useState<NetworkPanelState>({\n    netInfoOpen: true,\n    descriptionOpen: true,\n    propsOpen: true,\n    queryOpen: false,\n  })\n\n  // Store state of the query settings\n  const [queryState, setQueryState] = useState<QueryState>(DEF_QUERY_STATE)\n\n  const letterWidths = useMemo(() => {\n    const widths = {}\n    let widthSum = 0\n    const sandbox = document.getElementById('sandbox')\n    sandbox.style.display = 'block'\n    for (let i = 32; i < 127; i++) {\n      let letter = String.fromCharCode(i)\n      if (letter === ' ') {\n        letter = '&nbsp'\n      }\n      widths[letter] = baseFontSize\n      widthSum += widths[letter]\n    }\n    sandbox.style.display = 'none'\n    widths['default'] = widthSum / (127 - 32)\n    return widths\n  }, [])\n\n  let nodes = []\n  let edges = []\n\n  if (!showSearchResult) {\n    // Main view only\n\n    nodes = selectionState.main['nodes']\n    edges = selectionState.main['edges']\n\n    //   // Show all nodes if number of nodes are smaller than threshold\n    if (nodes.length === 0 && objCount.nodeCount < SELECTION_TH) {\n      nodes = allNodeIds\n    }\n    if (edges.length === 0 && objCount.edgeCount < SELECTION_TH) {\n      edges = allEdgeIds\n    }\n  } else {\n    nodes = selectionState.sub['nodes']\n    edges = selectionState.sub['edges']\n  }\n\n  const summaryResponse = useNetworkSummary(\n    uuid,\n    config.ndexHttps,\n    'v2',\n    ndexCredential,\n  )\n  const summaryResponseData = summaryResponse.data\n\n  const _handleSelect = (index, lastIndex, event) => {\n    setChanged(!changed)\n    setSelected(index)\n  }\n\n  const getTable = (selectedObjects: any[], type: string) => {\n    if (selectedObjects.length === 0) {\n      return (\n        <InformationPanel\n          type={type}\n          count={type === 'node' ? objCount.nodeCount : objCount.edgeCount}\n          threshold={SELECTION_TH}\n        />\n      )\n    } else if (selectedObjects.length > SELECTION_TH) {\n      return <WarningPanel type={type} selectedCount={selectedObjects.length} />\n    }\n\n    if (type === 'node') {\n      return (\n        <EntryTable\n          key={'selected-nodes'}\n          selectedObjects={selectedObjects}\n          attributes={attributes.nodeAttr}\n          context={context}\n          letterWidths={letterWidths}\n          label={'Name'}\n          parentSize={size}\n          selected={changed}\n        />\n      )\n    } else {\n      return (\n        <EntryTable\n          key={'selected-edges'}\n          selectedObjects={edges}\n          attributes={attributes.edgeAttr}\n          type={'edge'}\n          context={context}\n          letterWidths={letterWidths}\n          label={'Name'}\n          parentSize={size}\n          selected={changed}\n        />\n      )\n    }\n  }\n\n  let nodeTabTitle =\n    nodes.length === 0 || nodes.length === objCount.nodeCount\n      ? ''\n      : `(${nodes.length} selected)`\n  let edgeTabTitle =\n    edges.length === 0 || edges.length === objCount.edgeCount\n      ? ''\n      : `(${edges.length} selected)`\n\n  return (\n    <div className={classes.root} style={{ width: width }} ref={baseRef}>\n      <div className={classes.topBar} ref={titleRef}>\n        <MinimizeButton />\n        <Typography variant=\"h5\" className={classes.title}>\n          {summaryResponseData['name']}\n        </Typography>\n      </div>\n\n      <div className={classes.tabWrapper}>\n        <Tabs\n          selectedIndex={selected}\n          forceRenderTabPanel={true}\n          onSelect={_handleSelect}\n        >\n          <TabList className={classes.tabList} ref={tabsRef}>\n            <Tab key={'network-tab'}>Network</Tab>\n            <Tab disabled={tabsDisabled} key={'nodes-tab'}>\n              <div>Nodes {nodeTabTitle}</div>\n            </Tab>\n            <Tab disabled={tabsDisabled} key={'edges-tab'}>\n              <div>Edges {edgeTabTitle}</div>\n            </Tab>\n          </TabList>\n\n          <TabPanel value={selected} index={0}>\n            <NetworkPropertyPanel\n              cx={cx}\n              panelState={panelState}\n              setPanelState={setPanelState}\n              queryState={queryState}\n              setQueryState={setQueryState}\n              renderer={renderer}\n            />\n          </TabPanel>\n\n          <TabPanel value={selected} index={1}>\n            {getTable(nodes, 'node')}\n          </TabPanel>\n          <TabPanel value={selected} index={2}>\n            {getTable(edges, 'edge')}\n          </TabPanel>\n        </Tabs>\n      </div>\n    </div>\n  )\n}\n\nexport default DataPanel\n","import { makeStyles, Theme, Typography } from '@material-ui/core'\nimport React, { VFC } from 'react'\nimport OpenInCytoscape from '../../FooterPanel/OpenInCytoscape'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    height: '100%',\n    width: '100%',\n    display: 'grid',\n    justifyContent: 'center',\n    alignContent: 'center',\n  },\n  openButton: {\n    marginTop: theme.spacing(4),\n    borderRadius: '5px',\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n  },\n}))\n\nconst WarningPanel: VFC<{ type: string; selectedCount: number }> = ({\n  type,\n  selectedCount,\n}) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <Typography\n        variant={'h6'}\n      >{` Too many objects (${selectedCount}) are selected.`}</Typography>\n      <Typography variant={'caption'}>\n        {`For large networks like this one, you can use the Cytoscape Desktop to explore/edit`}\n      </Typography>\n\n      <div className={classes.openButton}>\n        <OpenInCytoscape />\n      </div>\n    </div>\n  )\n}\n\nexport default WarningPanel\n","import { useQuery } from 'react-query'\nimport NdexCredential from '../model/NdexCredential'\nimport { getAccessKey, getNdexClient } from '../utils/credentialUtil'\nimport NDExError from '../utils/error/NDExError'\nimport { useLocation } from \"react-router-dom\"\n\nconst EMPTY_CX = []\n\nconst getCx = async (\n  uuid: string,\n  serverUrl: string,\n  apiVersion: string,\n  credential: NdexCredential,\n  threshold: number,\n  objectCount: number,\n  cxVersion: string,\n) => {\n  if (\n    uuid === null ||\n    !credential.loaded ||\n    apiVersion === null ||\n    serverUrl === null ||\n    uuid === null ||\n    objectCount == null\n  ) {\n    // If invalid parameters, just return empty result.\n    return EMPTY_CX\n  }\n\n  if (objectCount > threshold) {\n    console.warn(`Network is too big (>${threshold})`)\n    return EMPTY_CX\n  }\n\n  try {\n    const ndexClient = getNdexClient(`${serverUrl}/${apiVersion}`, credential)\n    const accesskey = credential.accesskey\n\n    if(cxVersion === '2') {\n      if(accesskey !== undefined) {\n        return await ndexClient.getCX2Network(uuid, accesskey)\n      }\n      return await ndexClient.getCX2Network(uuid)\n    } else {\n      if(accesskey !== undefined) {\n        return await ndexClient.getRawNetwork(uuid, accesskey)\n      }\n      return await ndexClient.getRawNetwork(uuid)\n    }\n  } catch (e: unknown) {\n    throw new NDExError(e['message'], e)\n  }\n}\n\nexport default function useCx(\n  uuid: string,\n  serverUrl: string,\n  apiVersion: string = 'v2',\n  credential: NdexCredential,\n  threshold: number = 2000000,\n  objectCount: number = 0,\n  cxVersion: string = '1',\n) {\n  const location = useLocation()\n  const accessKey: string = getAccessKey(location.search)\n  if(accessKey !== null) {\n    credential.accesskey = accessKey\n  }\n  return useQuery(\n    [\n      'cx',\n      uuid,\n      serverUrl,\n      apiVersion,\n      credential,\n      threshold,\n      objectCount,\n      cxVersion,\n    ],\n    () =>\n      getCx(\n        uuid,\n        serverUrl,\n        apiVersion,\n        credential,\n        threshold,\n        objectCount,\n        cxVersion,\n      ),\n    {\n      retry: false,\n    },\n  )\n}\n","import React from 'react'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\nimport MinimizeButton from './NetworkPropertyPanel/MinimizeButton'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      position: 'fixed',\n      right: 0,\n      top: 0,\n      paddingTop: '1vh',\n      display: 'flex',\n      flexDirection: 'column',\n      zIndex: 300,\n    },\n  }),\n)\nconst ClosedPanel = () => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <MinimizeButton />\n    </div>\n  )\n}\n\nexport default ClosedPanel\n","enum ResponseCode {\n  BadRequest = 400,\n  Unauthorized = 401,\n  Forbidden = 403,\n  NotFound = 404,\n  InternalServerError = 500,\n}\n\nexport default ResponseCode\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\nconst defaultTitle = 'NDEx Network Viewer 2.5'\n\nconst Title = ({ title }) => {\n  return (\n    <Helmet>\n      <title>{title ? title : defaultTitle}</title>\n    </Helmet>\n  )\n}\n\nexport default Title\n","import ErrorMessage from './ErrorMessage'\nimport NDExError from './NDExError'\nimport ResponseCode from './ResponseCode'\n\n// Response code is associated with main and sub message\nconst MESSAGE_MAP = new Map<ResponseCode, [string, string]>()\n\nMESSAGE_MAP.set(ResponseCode.BadRequest, [\n  'The server could not handle your request',\n  'The NDEx server could not handle your request. Please try different query or try Classic Mode.',\n])\nMESSAGE_MAP.set(ResponseCode.Unauthorized, [\n  \"You don't have permission to access this data\",\n  'Please sing in to your account and check the permission of this entry',\n])\nMESSAGE_MAP.set(ResponseCode.InternalServerError, [\n  'Unknown server-side error.',\n  'Please try again later or report this issue to us.',\n])\nMESSAGE_MAP.set(ResponseCode.NotFound, [\n  'The entry does not exist in the server',\n  'Please double-check the Network ID in the URL',\n])\n\nconst convertError = (error: NDExError): ErrorMessage => {\n  const { details } = error\n  const unknownError: ErrorMessage = {\n    message: `Unknown error: ${error.name}`,\n    originalMessage: error.message,\n  }\n\n  if (details === undefined) {\n    return unknownError\n  }\n\n  const response = details['response']\n  if (response === undefined) {\n    const dataValidationError: ErrorMessage = {\n      message: 'Invalid Entry Found',\n      optionalMessage: error.details['details'].subMessage,\n      originalMessage: error.message\n    }\n    return dataValidationError\n  }\n  const { status, statusText } = response as Response\n  const data = response['data']\n  const message: [string, string] = MESSAGE_MAP.get(status)\n\n  if (message !== undefined) {\n    const errorMessage: ErrorMessage = {\n      message: message[0],\n      optionalMessage: message[1],\n      originalMessage: `${statusText}: ${data.message}`,\n      code: status,\n    }\n\n    return errorMessage\n  }\n\n  return unknownError\n}\n\nexport { convertError }\n","import React, { useState, FC } from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nimport { useHistory } from 'react-router-dom'\n\n\n\nexport type MessageDialogProps = {\n  open: boolean\n  setOpen: Function\n  title?: string\n  message?: string\n  setProceed?: Function\n  setNoView?: Function\n}\n\nconst MessageDialog: FC<MessageDialogProps> = ({ title = '', message = '', open, setOpen, setProceed, setNoView }) => {\n  let history = useHistory()\n\n  const handleProceed = () => {\n\n    setNoView(false)\n    if(setProceed !== undefined) {\n      setProceed(true)\n    }\n    setOpen(false)\n  }\n\n  const handleCancel = () => {\n    setNoView(true)\n    setOpen(false)\n    setProceed(true)\n    // history.goBack()\n  }\n\n  return (\n    <Dialog open={open} onClose={handleCancel}>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>{message}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCancel} color=\"default\">\n          Cancel\n        </Button>\n\n        <Button onClick={handleProceed} color=\"secondary\">\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default MessageDialog\n","const appendWindowProtocol = (url :string): string => {\n  return window.location.protocol + '//' + url;\n}\n\nconst getCurrentServer = (): string => {\n  // console.log('host: '+ window.location.host);\n  return `${window.location.protocol}//${window.location.host}`; \n}\n\nexport { appendWindowProtocol, getCurrentServer }\n","import React, { FC } from 'react'\n\nimport Error from '@material-ui/icons/ErrorOutline'\nimport Warning from '@material-ui/icons/WarningOutlined'\nimport Lock from '@material-ui/icons/LockOutlined'\nimport NotFound from '@material-ui/icons/HelpOutlined'\nimport ResponseCode from '../../utils/error/ResponseCode'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\n\n/**\n *\n * Simple error icon factory component\n *\n * @returns\n */\nconst ErrorIcon: FC<{ code: ResponseCode; size?: string }> = ({\n  code,\n  size = '10em',\n}) => {\n  const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n      errorIcon: {\n        fontSize: size,\n        color: getColor(code, theme),\n      },\n    }),\n  )\n  const classes = useStyles()\n\n  if (code === ResponseCode.NotFound) {\n    return <NotFound className={classes.errorIcon} />\n  } else if (\n    code === ResponseCode.Unauthorized ||\n    code === ResponseCode.Forbidden\n  ) {\n    return <Lock className={classes.errorIcon} />\n  } else if (code === ResponseCode.BadRequest) {\n    return <Warning className={classes.errorIcon} />\n  } else {\n    return <Error className={classes.errorIcon} />\n  }\n}\n\nconst getColor = (code: ResponseCode, theme: Theme): string => {\n  const { palette } = theme\n  if (code === ResponseCode.NotFound || code === ResponseCode.Unauthorized) {\n    return palette.info.main\n  } else if (\n    code === ResponseCode.BadRequest ||\n    code === ResponseCode.Forbidden\n  ) {\n    return palette.warning.main\n  } else {\n    return palette.error.main\n  }\n}\n\nexport default ErrorIcon\n","import React, { useState, FC, useEffect, useContext } from 'react'\nimport { useParams } from 'react-router-dom'\nimport MessageDialog from './MessageDialog'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\nimport { Typography } from '@material-ui/core'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n// import WarningIcon from '@material-ui/icons/WarningOutlined'\n// import LockIcon from '@material-ui/icons/LockOutlined'\n\nimport { getCurrentServer } from '../../utils/locationUtil'\n\nimport AppContext from '../../context/AppState'\nimport ResponseCode from '../../utils/error/ResponseCode'\nimport ErrorIcon from '../ErrorIcon'\n\n/**\n *\n * An empty placeholder panel to check network size\n */\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    initPanel: {\n      width: '100%',\n      height: '100%',\n      boxSizing: 'border-box',\n      color: '#AAAAAA',\n      display: 'grid',\n      placeItems: 'center',\n    },\n    message: {\n      display: 'grid',\n      placeItems: 'center',\n      maxWidth: '40em'\n    },\n    errorMessage: {\n      paddingTop: '1em',\n      color: theme.palette.text.primary,\n    },\n    errorIcon: {\n      fontSize: '15em',\n    },\n    progressIcon: {\n      marginTop: '5em',\n    },\n    bottomMessage: {\n      display: 'grid',\n      placeItems: 'center',\n      marginTop: theme.spacing(4),\n    },\n    caption: {\n      marginTop: theme.spacing(1),\n    },\n    subMessage: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(2),\n      color: theme.palette.text.primary,\n    },\n    link: {\n      color: theme.palette.info.main,\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(2),\n      '&:hover': {\n        fontWeight: 600,\n        cursor: 'pointer',\n      },\n    },\n  }),\n)\n\ntype InitPanelProps = {\n  message: string\n  subMessage?: string\n  optionalMessage?: string\n  code?: ResponseCode\n  setProceed: Function\n  setNoView?: Function\n  showProgress?: boolean\n  summary?: object\n  error?: boolean\n  // isDataTooLarge: boolean\n  // setIsDataTooLarge: Function\n}\n\nconst InitPanel: FC<InitPanelProps> = ({\n  message,\n  subMessage,\n  optionalMessage,\n  code,\n  showProgress = false,\n  summary,\n  setProceed,\n  error = false,\n  setNoView,\n}) => {\n  const classes = useStyles()\n  const { uuid } = useParams()\n  const { config, ndexLoginWrapper } = useContext(AppContext)\n\n  const [open, setOpen] = useState(false)\n\n  const [dialogTitle, setDialogTitle] = useState('')\n  const [dialogMessage, setDialogMessage] = useState('')\n\n  useEffect(() => {\n    if (summary !== undefined) {\n      const total = summary['nodeCount'] + summary['edgeCount']\n      const cxDataSize = summary['cx2FileSize']\n\n      // Check data size.  If too big, proceed without view\n      if (cxDataSize > config.maxDataSize || total > config.maxNumObjects) {\n        setOpen(false)\n        setProceed(true)\n        return\n      }\n\n      if (total <= config.warningThreshold) {\n        const hasLayout = summary['hasLayout']\n\n        if (!hasLayout && total > config.viewerThreshold) {\n          setDialogTitle(`No layout available for this network`)\n          setDialogMessage(\n            'Do you want to visualize the network with random layout? Or click cancel to explore it without view',\n          )\n          setOpen(true)\n        } else {\n          // Small network.  Just load it.\n          setProceed(true)\n        }\n      } else {\n        // Network is huge.  Simply pass the empty CX and show warning panel\n        setOpen(false)\n        setProceed(true)\n      }\n    }\n  }, [summary])\n\n  const handleClose = () => {\n    // setIsDataTooLarge(false)\n    setOpen(false)\n  }\n\n  const _handleLoginOpen = () => {\n    // @ts-ignore\n    ndexLoginWrapper.click()\n  }\n\n  if (error) {\n    return (\n      <div className={classes.initPanel}>\n        <div className={classes.message}>\n          <ErrorIcon code={code} size={'12em'} />\n          <Typography className={classes.errorMessage} variant=\"h4\">\n            {message}\n          </Typography>\n          <Typography variant=\"h5\" className={classes.subMessage}>\n            {optionalMessage}\n          </Typography>\n\n          {code === ResponseCode.Unauthorized ||\n          code === ResponseCode.Forbidden ? (\n            <Typography\n              variant=\"h5\"\n              onClick={_handleLoginOpen}\n              className={classes.link}\n            >\n              Sign In\n            </Typography>\n          ) : (\n            <div />\n          )}\n\n          <Typography variant=\"body1\">({subMessage})</Typography>\n          <div className={classes.bottomMessage}>\n            <Typography\n              variant=\"caption\"\n              onClick={() => handleClick(`${getCurrentServer()}`)}\n              className={classes.link}\n            >\n              Return to top page\n            </Typography>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  return (\n    <React.Fragment>\n      <MessageDialog\n        setProceed={setProceed}\n        setNoView={setNoView}\n        open={open}\n        setOpen={handleClose}\n        title={dialogTitle}\n        message={dialogMessage}\n      />\n      <div className={classes.initPanel}>\n        <div className={classes.message}>\n          <Typography variant=\"h5\">{message}</Typography>\n          {showProgress ? (\n            <CircularProgress\n              color={'secondary'}\n              disableShrink\n              className={classes.progressIcon}\n            />\n          ) : (\n            <div />\n          )}\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst handleClick = (url: string): void => {\n  window.open(url, '_self')\n}\n\nexport default InitPanel\n","import React, {\n  useState,\n  useContext,\n  useEffect,\n  useRef,\n  useLayoutEffect,\n} from 'react'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\nimport NetworkPanel from '../NetworkPanel'\nimport DataPanel from '../DataPanel'\nimport SplitPane from 'react-split-pane'\nimport { useParams } from 'react-router-dom'\nimport useNetworkSummary from '../../hooks/useNetworkSummary'\nimport useCx from '../../hooks/useCx'\nimport AppContext from '../../context/AppState'\nimport ClosedPanel from '../DataPanel/ClosedPanel'\nimport UIState from '../../model/UIState'\nimport { UIStateActions } from '../../reducer/uiStateReducer'\nimport { isWebGL2supported } from '../../utils/browserTest'\nimport Title from '../Title'\n\nimport { convertError } from '../../utils/error/errorHandler'\n\nimport InitializationPanel from './InitializationPanel'\nimport NDExError from '../../utils/error/NDExError'\nimport ErrorMessage from '../../utils/error/ErrorMessage'\n\nconst V2 = 'v2'\n\nconst RENDERER = {\n  lgr: 'lgr',\n  cyjs: 'cyjs',\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    mainSplitRoot: {\n      flexGrow: 1,\n      boxSizing: 'border-box',\n      zIndex: 100,\n      display: 'flex',\n      height: '100%',\n      flexDirection: 'column',\n      position: 'relative',\n    },\n    leftPanel: {\n      display: 'flex',\n      flexDirection: 'column',\n    },\n  }),\n)\n\nconst getDefaultPanelWidth = (): number => {\n  return Math.floor(window.innerWidth * 0.35)\n}\n\ntype FetchParams = {\n  cxVersion: string\n  count: number\n  renderer: string\n  name: string\n}\n\nconst DFE_FETCH_PARAMS: FetchParams = {\n  cxVersion: '1',\n  count: Number.POSITIVE_INFINITY,\n  renderer: RENDERER.cyjs,\n  name: 'N/A',\n}\n\nconst getFetchParams = (summary: object, th: number): FetchParams => {\n  if (summary === undefined) {\n    return DFE_FETCH_PARAMS\n  }\n  const count = summary['edgeCount'] + summary['nodeCount']\n  let cxVersion = '1'\n  let renderer = RENDERER.cyjs\n\n  if (count > th) {\n    cxVersion = '2'\n    renderer = RENDERER.lgr\n  }\n\n  const fetchParams: FetchParams = {\n    cxVersion,\n    count,\n    renderer,\n    name: summary['name'],\n  }\n  return fetchParams\n}\n\nconst MainSplitPane = () => {\n  const classes = useStyles()\n  const containerRef = useRef()\n  const { uuid } = useParams()\n  const { uiState, ndexCredential, config, uiStateDispatch } = useContext(\n    AppContext,\n  )\n  const maxObj = config.maxNumObjects\n  const th = config.viewerThreshold\n\n  const summaryResponse = useNetworkSummary(\n    uuid,\n    config.ndexHttps,\n    V2,\n    ndexCredential,\n  )\n\n  const { isLoading, isError, isLoadingError } = summaryResponse\n  const summary: object = summaryResponse.data\n  const fetchParams = getFetchParams(summary, th)\n\n  // First, give null as UUID to hold immediate loading.\n  const [curUuid, setCurUuid] = useState(null)\n  const cxResponse = useCx(\n    curUuid,\n    config.ndexHttps,\n    V2,\n    ndexCredential,\n    maxObj,\n    fetchParams.count,\n    fetchParams.cxVersion,\n  )\n\n  const originalCx: object[] = cxResponse.data\n\n  // Local states\n  const [rightWidth, setRightWidth] = useState(getDefaultPanelWidth())\n  const [containerHeight, setContainerHeight] = useState(0)\n  const [isWebGL2, setIsWebGL2] = useState(false)\n  const [count, setCount] = useState(0)\n  const [cxDataSize, setCxDataSize] = useState(0)\n  const [proceed, setProceed] = useState(false)\n  const [noView, setNoView] = useState(false)\n\n  const windowWidth = useWindowWidth()\n  const [subCx, setSubCx] = useState(null)\n\n  const assignNewHeight = () => {\n    const curRef = containerRef?.current ?? { offsetHeight: 0 }\n    if (curRef) {\n      setTimeout(() => {\n        if (curRef.offsetHeight !== containerHeight) {\n          setContainerHeight(curRef.offsetHeight)\n        }\n      }, 100)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', assignNewHeight)\n    const isSupported: boolean = isWebGL2supported()\n    setIsWebGL2(isSupported)\n  }, [])\n\n  useLayoutEffect(() => {\n    assignNewHeight()\n  })\n\n  useEffect(() => {\n    if (summary !== undefined && Object.keys(summary).length !== 0) {\n      const count = summary['edgeCount'] + summary['nodeCount']\n      const cxSize = summary['cx2FileSize']\n      setCount(count)\n      setCxDataSize(cxSize)\n\n      if (count < config.maxNumObjects && cxDataSize < config.maxDataSize) {\n        if (isWebGL2 && !noView) {\n          setCurUuid(uuid)\n        } else if (!isWebGL2 && count < config.viewerThreshold) {\n          setCurUuid(uuid)\n        }\n      }\n    }\n  }, [summary])\n\n  useEffect(() => {\n    if (!uiState.dataPanelOpen && rightWidth > 0) {\n      setRightWidth(0)\n    } else if (uiState.dataPanelOpen) {\n      setRightWidth(getDefaultPanelWidth())\n    }\n  }, [uiState.dataPanelOpen])\n\n  const setRightPanelWidth = (state: UIState) =>\n    uiStateDispatch({\n      type: UIStateActions.SET_RIGHT_PANEL_WIDTH,\n      uiState: state,\n    })\n\n  const setDataPanelOpen = (state: UIState) =>\n    uiStateDispatch({\n      type: UIStateActions.SET_DATA_PANEL_OPEN,\n      uiState: state,\n    })\n\n  useEffect(() => {\n    setRightPanelWidth({ ...uiState, rightPanelWidth: rightWidth })\n  }, [rightWidth])\n\n  const handleChange = (newWidth) => {\n    const newRightWidth = windowWidth - newWidth\n    if (newRightWidth <= 0) {\n      setDataPanelOpen({ ...uiState, dataPanelOpen: false })\n    } else if (!uiState.dataPanelOpen) {\n      setDataPanelOpen({ ...uiState, dataPanelOpen: true })\n    }\n    setRightWidth(newRightWidth)\n  }\n\n  const splitPaneStyle = {\n    height: containerHeight,\n  }\n\n  const getNetworkPanel = () => {\n    // If data is huge, just return Network panel\n    if (config.maxDataSize < cxDataSize || config.maxNumObjects < count) {\n      return (\n        <NetworkPanel\n          noView={noView}\n          cx={originalCx}\n          renderer={fetchParams.renderer}\n          objectCount={count}\n          cxDataSize={cxDataSize}\n          isWebGL2={isWebGL2}\n          setSubCx={setSubCx}\n        />\n      )\n    } else if (originalCx === undefined || cxResponse.isLoading) {\n      return (\n        <InitializationPanel\n          message={'Loading network data from NDEx server...'}\n          showProgress={true}\n          setProceed={setProceed}\n        />\n      )\n    }\n    return (\n      <NetworkPanel\n        noView={noView}\n        cx={originalCx}\n        renderer={fetchParams.renderer}\n        objectCount={count}\n        cxDataSize={cxDataSize}\n        isWebGL2={isWebGL2}\n        setSubCx={setSubCx}\n      />\n    )\n  }\n\n  const getBase = () => {\n    return (\n      <React.Fragment>\n        <Title title={`${fetchParams.name} (${uuid})`} />\n        <div ref={containerRef} className={classes.mainSplitRoot}>\n          <SplitPane\n            split=\"vertical\"\n            minSize={windowWidth * 0.2}\n            size={windowWidth - rightWidth}\n            onDragFinished={handleChange}\n            style={splitPaneStyle}\n            maxSize={0}\n          >\n            {getNetworkPanel()}\n            {uiState.dataPanelOpen ? (\n              <DataPanel\n                width={rightWidth}\n                cx={uiState.mainNetworkNotDisplayed ? subCx : originalCx}\n                renderer={fetchParams.renderer}\n                objectCount={count}\n                cxDataSize={cxDataSize}\n              />\n            ) : (\n              <ClosedPanel />\n            )}\n          </SplitPane>\n        </div>\n      </React.Fragment>\n    )\n  }\n\n  // Check Summary error\n  if (summaryResponse.isError) {\n    const { error } = summaryResponse\n    const ndexError = error as NDExError\n    const errorMessage: ErrorMessage = convertError(ndexError)\n    return (\n      <InitializationPanel\n        message={errorMessage.message}\n        subMessage={errorMessage.originalMessage}\n        optionalMessage={errorMessage.optionalMessage}\n        code={errorMessage.code}\n        error={true}\n        setProceed={setProceed}\n      />\n    )\n  }\n\n  // Step 1: Summary is not available yet\n  if (summary === undefined || isLoading) {\n    return (\n      <InitializationPanel\n        message={'Loading summary of the network...'}\n        showProgress={true}\n        setProceed={setProceed}\n      />\n    )\n  }\n\n  if (cxResponse.isError) {\n    if (\n      cxResponse.error['response'] &&\n      cxResponse.error['response'].data &&\n      cxResponse.error['response'].data.message !==\n        'CX2 network is not available for this network.'\n    ) {\n      return (\n        <InitializationPanel\n          summary={summary}\n          message={`Missing visualization data. Unable to visualize this network.`}\n          error={true}\n          setProceed={setProceed}\n        />\n      )\n    } else {\n      console.log('CXResponse error data:', cxResponse.error['response'].data)\n      return (\n        <InitializationPanel\n          summary={summary}\n          message={`${cxResponse.error}`}\n          error={true}\n          setProceed={setProceed}\n        />\n      )\n    }\n  }\n  // Step 2: Summary is ready, but CX is not\n  if (summary !== undefined && !proceed) {\n    // Too big to display\n    if (config.maxNumObjects < count || config.maxDataSize < cxDataSize) {\n      return getBase()\n    }\n\n    return (\n      <InitializationPanel\n        summary={summary}\n        message={'Checking status of network data...'}\n        setProceed={setProceed}\n        setNoView={setNoView}\n      />\n    )\n  }\n\n  // Initiate loading if browser is compatible.\n  // Step 4: Data is ready.  Need to draw the network\n  return getBase()\n}\n\nconst getWindowWidth = () => {\n  const { innerWidth: windowWidth } = window\n  return windowWidth\n}\n\nconst useWindowWidth = () => {\n  const [windowWidth, setWindowWidth] = useState(getWindowWidth())\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowWidth(getWindowWidth())\n    }\n\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n\n  return windowWidth\n}\n\nexport default MainSplitPane\n","const isWebGL2supported = (): boolean => {\n  let canvas\n  let ctx\n\n  try {\n    canvas = document.createElement('canvas')\n    ctx = canvas.getContext('webgl2')\n  } catch (e) {\n    console.warn('WebGL2 is not supported in your browser.', e)\n    return false\n  }\n\n  console.log(ctx)\n  if (ctx !== undefined && typeof WebGL2RenderingContext !== 'undefined') {\n    return true\n  }\n\n  console.warn('WebGL2 is not supported in your browser. Please turn on the feature or use different web browser.')\n  return false\n}\n\nexport { isWebGL2supported }\n","import React, { FC } from 'react'\nimport { Button, Tooltip } from '@material-ui/core'\nimport ReturnIcon from '@material-ui/icons/OpenInBrowser'\nimport { useParams } from 'react-router-dom'\n\nimport { getCurrentServer } from '../../utils/locationUtil'\n\nconst ClassicModeButton: FC = () => {\n  const { uuid } = useParams()\n\n  const baseUrl: string = getCurrentServer();\n  const classicUrl = `${baseUrl}/#/network/${uuid}`\n\n  const handleClick = (): void => {\n    window.open(classicUrl, '_self')\n  }\n\n  return (\n    <Tooltip title=\"View this network in Classic Mode\">\n      <Button variant=\"outlined\" color=\"default\" size=\"small\" endIcon={<ReturnIcon />} onClick={handleClick}>\n        Switch to Classic Mode\n      </Button>\n    </Tooltip>\n  )\n}\n\nexport default ClassicModeButton\n","export default __webpack_public_path__ + \"static/media/ndex-logo.f952f474.svg\";","import React, { FC } from 'react'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\nimport { IconButton, Tooltip } from '@material-ui/core'\nimport logo from '../../assets/images/ndex-logo.svg'\nimport { getCurrentServer } from '../../utils/locationUtil'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ndexLogo: {\n      height: theme.spacing(4.5),\n      marginRight: theme.spacing(1),\n      padding: 0,\n      backgroundColor: 'transparent',\n      '&:hover': {\n        backgroundColor: 'transparent',\n      },\n    },\n  }),\n)\n\nconst NdexHomeButton: FC = () => {\n  const classes = useStyles()\n  const baseUrl: string = getCurrentServer()\n\n  const handleClick = (): void => {\n    window.open(baseUrl, '_self')\n  }\n\n  return (\n    <Tooltip title=\"NDEx home\" placement=\"bottom\">\n      <IconButton\n        aria-label=\"NDEx Home\"\n        onClick={handleClick}\n        className={classes.ndexLogo}\n      >\n        <img alt=\"NDEx Logo\" src={logo} className={classes.ndexLogo} />\n      </IconButton>\n    </Tooltip>\n  )\n}\n\nexport default NdexHomeButton\n","import React from 'react'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport IconButton from '@material-ui/core/IconButton'\nimport MoreIcon from '@material-ui/icons/MoreVert'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { Tooltip } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      height: theme.spacing(5),\n      padding: 0,\n      margin: 0,\n      marginRight: theme.spacing(2),\n      backgroundColor: 'transparent',\n      '&:hover': {\n        backgroundColor: 'transparent',\n      },\n    },\n  }),\n)\n\nconst AdvancedMenu = () => {\n  const classes = useStyles()\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null)\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const open = Boolean(anchorEl)\n  const id = open ? 'advanced-popover' : undefined\n\n  return (\n    <>\n      <Tooltip title=\"Advanced menu\">\n        <IconButton\n          className={classes.button}\n          aria-describedby={id}\n          onClick={handleClick}\n          color=\"inherit\"\n          disableFocusRipple={true}\n          disableTouchRipple={true}\n        >\n          <MoreIcon />\n        </IconButton>\n      </Tooltip>\n      <Menu open={open} anchorEl={anchorEl} onClose={handleClose}>\n        <MenuItem\n          onClick={() => {\n            window.open('https://home.ndexbio.org/about-ndex/')\n            setAnchorEl(null)\n          }}\n        >\n          About\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            window.open('https://home.ndexbio.org/quick-start/')\n            setAnchorEl(null)\n          }}\n        >\n          Docs\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            window.open('https://home.ndexbio.org/report-a-bug/')\n            setAnchorEl(null)\n          }}\n        >\n          Report bug\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            window.open('https://home.ndexbio.org/contact-us/')\n            setAnchorEl(null)\n          }}\n        >\n          Contact Us\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            window.open('https://home.ndexbio.org/faq/')\n            setAnchorEl(null)\n          }}\n        >\n          FAQ\n        </MenuItem>\n      </Menu>\n    </>\n  )\n}\n\nexport default AdvancedMenu\n","import { FC, useContext, useRef, useEffect } from 'react'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport { NDExSignInButton } from 'cytoscape-explore-components'\nimport AppContext from '../../context/AppState'\nimport ClassicModeButton from './ClassicModeButton'\nimport NdexHomeButton from './NdexHomeButton'\nimport AdvancedMenu from './AdvancedMenu'\n\nimport { getCurrentServer } from '../../utils/locationUtil'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      position: 'fixed',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      top: theme.spacing(1),\n      left: theme.spacing(1),\n      height: theme.spacing(6.5),\n      padding: theme.spacing(1),\n      backgroundColor: 'rgba(255,255,255, 0.9)',\n      zIndex: 300,\n      borderRadius: 5,\n    },\n  }),\n)\n\nconst ToolBar: FC = (props) => {\n  const classes = useStyles()\n  const ndexButton = useRef(null)\n\n  const { summary, ndexCredential, setNdexCredential, setNdexLoginWrapper } =\n    useContext(AppContext)\n\n  useEffect(() => {\n    setNdexLoginWrapper(ndexButton.current.lastChild)\n  }, [])\n\n  const ndexServerUrl = getCurrentServer()\n\n  const loginStateUpdated = (loginState) => {\n    if (loginState) {\n      if (loginState.isGoogle) {\n        setNdexCredential({\n          loaded: true,\n          isLogin: true,\n          isGoogle: true,\n          oauth: loginState,\n        })\n      } else {\n        const details = loginState.loginDetails\n        setNdexCredential({\n          loaded: true,\n          isLogin: true,\n          isGoogle: false,\n          basic: { userId: details.id, password: details.password },\n        })\n      }\n    } else {\n      if (ndexCredential.loaded && ndexCredential.isLogin) {\n        if (!summary || summary.visibility === 'PRIVATE') {\n          window.location.href = ndexServerUrl\n        }\n      }\n      setNdexCredential({\n        loaded: true,\n        isLogin: false,\n        isGoogle: false,\n      })\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n        spacing={0}\n      >\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"center\"\n        >\n          <NdexHomeButton />\n          <div ref={ndexButton}>\n            <NDExSignInButton\n              size={'medium'}\n              myAccountURL={ndexServerUrl + '/#/myAccount'}\n              onLoginStateUpdated={loginStateUpdated}\n            />\n          </div>\n          <AdvancedMenu />\n          <ClassicModeButton />\n        </Grid>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"flex-end\"\n          alignItems=\"center\"\n        ></Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default ToolBar\n","export default __webpack_public_path__ + \"static/media/base_network.d8a7fc02.png\";","export default __webpack_public_path__ + \"static/media/neighborhood_network.1fbd73ae.png\";","export default __webpack_public_path__ + \"static/media/adjacent_network.f4e37580.png\";","export default __webpack_public_path__ + \"static/media/direct_network.5bad2ad8.png\";","export default __webpack_public_path__ + \"static/media/interconnect_network.21703162.png\";","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Dialog from '@material-ui/core/Dialog'\nimport Typography from '@material-ui/core/Typography'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport Paper from '@material-ui/core/Paper'\nimport Draggable from 'react-draggable'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nimport base from '../../assets/images/base_network.png'\nimport neighborhood from '../../assets/images/neighborhood_network.png'\nimport adjacent from '../../assets/images/adjacent_network.png'\nimport direct from '../../assets/images/direct_network.png'\nimport interconnect from '../../assets/images/interconnect_network.png'\n\nconst useStyles = makeStyles({\n  root: {\n    padding: '2em',\n  },\n  message: {\n    padding: '2em',\n    display: 'grid',\n    placeItems: 'center center',\n  },\n  dialogTitle: {\n    '& h2': {\n      display: 'flex',\n      flexDirection: 'row',\n    },\n    cursor: 'move',\n  },\n  iconButton: {\n    padding: '0 !important',\n    width: '2rem',\n    height: '2rem',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  flexRowContainerOuter: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    columnGap: '2em',\n    justifyContent: 'center',\n  },\n  flexRowContainerInner: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    maxWidth: '40em',\n    minHeight: '10em',\n  },\n  flexColumnContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    rowGap: '1em',\n  },\n  flexRowItemOuter: {\n    minWidth: '25em',\n    flexGrow: 1,\n    flexBasis: 'calc(50% - 1em)',\n    maxWidth: '40em',\n  },\n  flexRowItemInner: {},\n  flexColumnItem: {},\n  image: {\n    height: '10em',\n    marginLeft: '1em',\n  },\n})\n\nconst PaperComponent = (props) => {\n  const classes = useStyles()\n  return (\n    <Draggable cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  )\n}\n\nexport interface SearchHelpProps {\n  open: boolean\n  onClose: () => void\n}\n\nconst SearchHelpDialog = (props: SearchHelpProps) => {\n  const classes = useStyles()\n  const { onClose, open } = props\n\n  const handleClose = () => {\n    onClose()\n  }\n\n  return (\n    <>\n      <Dialog\n        className={classes.root}\n        onClose={handleClose}\n        aria-labelledby=\"search-help-dialog-title\"\n        open={open}\n        PaperComponent={PaperComponent}\n        maxWidth=\"md\"\n      >\n        <DialogTitle id=\"search-help\" className={classes.dialogTitle}>\n          <Typography variant=\"h6\" className={classes.title}>\n            Network Query Modes\n          </Typography>\n          <IconButton aria-haspopup=\"true\" onClick={handleClose} className={classes.iconButton}>\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n        <DialogContent dividers={true}>\n          <DialogContentText color=\"textPrimary\">\n            <div className={classes.flexRowContainerOuter}>\n              <div className={[classes.flexColumnContainer, classes.flexRowItemOuter].join(' ')}>\n                <div className={[classes.flexRowContainerInner, classes.flexColumnItem].join(' ')}>\n                  <div className={classes.flexRowItemInner}>\n                    <Typography variant=\"body2\">\n                      <br />\n                      This section explains briefly all the available types of query using the simple example network\n                      pictured to the right. In the examples below, the orange node(s) indicate the query terms while\n                      blue nodes and edges identify the retrieved subnetwork.\n                    </Typography>\n                  </div>\n                  <div className={classes.flexRowItemInner}>\n                    <img src={base} className={classes.image} />\n                  </div>\n                </div>\n                <div className={[classes.flexRowContainerInner, classes.flexColumnItem].join(' ')}>\n                  <div className={classes.flexRowItemInner}>\n                    <Typography variant=\"body2\">\n                      <strong>Neighborhood:</strong>\n                    </Typography>\n                    <Typography variant=\"body2\">\n                      Returns all the nodes connected to the query term(s) and all edges between these nodes. For\n                      example, querying the network for \"B\" (orange node), will return the subnetwork highlighted in\n                      blue.\n                    </Typography>\n                  </div>\n                  <div className={classes.flexRowItemInner}>\n                    <img src={neighborhood} className={classes.image} />\n                  </div>\n                </div>\n                <div className={[classes.flexRowContainerInner, classes.flexColumnItem].join(' ')}>\n                  <div className={classes.flexRowItemInner}>\n                    <Typography variant=\"body2\">\n                      <Typography variant=\"body2\">\n                        <strong>Adjacent:</strong>\n                      </Typography>\n                      Returns all nodes connected to the query term(s) and only the edges between these nodes and the\n                      query term(s). In this case querying the network for \"B\" will return a smaller subnetwork.{' '}\n                    </Typography>\n                  </div>\n                  <div className={classes.flexRowItemInner}>\n                    <img src={adjacent} className={classes.image} />\n                  </div>\n                </div>\n              </div>\n              <div className={[classes.flexColumnContainer, classes.flexRowItemOuter].join(' ')}>\n                <div className={[classes.flexRowContainerInner, classes.flexColumnItem].join(' ')}>\n                  <div className={classes.flexRowItemInner}>\n                    <Typography variant=\"body2\">\n                      <Typography variant=\"body2\">\n                        <strong>Direct: </strong>\n                      </Typography>\n                      Returns all edges between the query terms. This type of query requires at least 2 terms (or use of\n                      wildcards). Querying for \"A\" and \"B\" returns only the connection between them.\n                    </Typography>\n                  </div>\n                  <div className={classes.flexRowItemInner}>\n                    <img src={direct} className={classes.image} />\n                  </div>\n                </div>\n                <div className={[classes.flexRowContainerInner, classes.flexColumnItem].join(' ')}>\n                  <div className={classes.flexRowItemInner}>\n                    <Typography variant=\"body2\">\n                      <Typography variant=\"body2\">\n                        <strong>Interconnect:</strong>\n                      </Typography>\n                      Returns all edges connecting the query terms and including up to one intermediate node. Also for\n                      this type of query at least 2 terms (or use of wildcards) are required. In this case, querying for\n                      \"A\" and \"B\" returns the subnetwork highlighted in blue.{' '}\n                    </Typography>\n                  </div>\n                  <div className={classes.flexRowItemInner}>\n                    <img src={interconnect} className={classes.image} />\n                  </div>\n                </div>\n                <div className={[classes.flexRowContainerInner, classes.flexColumnItem].join(' ')}>\n                  <div className={classes.flexRowItemInner}>\n                    <Typography variant=\"body2\">\n                      <strong>1-step</strong> and <strong>2-step</strong> indicate the depth of the traversal query and\n                      only apply to Neighborhood and Adjacent queries.\n                    </Typography>\n                    <Typography variant=\"body2\">\n                      <br />\n                      For more info, please review the manual on{' '}\n                      <a href=\"https://home.ndexbio.org/finding-and-querying-networks/\" target=\"_blank\" rel=\"noreferrer\">\n                        Finding and Querying Networks in NDEx\n                      </a>\n                      .\n                    </Typography>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default SearchHelpDialog\n","import React, { useContext } from 'react'\nimport { useParams } from 'react-router-dom'\nimport useSearch from '../../hooks/useSearch'\nimport AppContext from '../../context/AppState'\nimport Snackbar from '@material-ui/core/Snackbar'\n\nimport { SaveToNDExButton } from 'cytoscape-explore-components'\n\nconst SaveQueryButton = () => {\n  const { uuid } = useParams()\n  const { query, queryMode, uiState, ndexCredential, config, summary } =\n    useContext(AppContext)\n  const searchResult = useSearch(\n    uuid,\n    query,\n    config.ndexHttps,\n    ndexCredential,\n    queryMode,\n    config.maxEdgeQuery,\n  )\n\n  const { isLogin } = ndexCredential\n\n  const subnet = searchResult.data\n  const edgeLimitExceeded: boolean =\n    subnet !== undefined ? subnet['edgeLimitExceeded'] : false\n  const summaryObjectCount = summary\n    ? summary.subnetworkNodeCount + summary.subnetworkEdgeCount\n    : 0\n\n  const subCx =\n    subnet !== undefined && summaryObjectCount > 0 ? subnet['cx'] : undefined\n\n  const fetchCX = () => {\n    return new Promise<Object>(function (resolve, reject) {\n      resolve(subCx)\n    })\n  }\n\n  const [snackMessage, setSnackMessage] = React.useState(undefined)\n\n  const onSuccess = (data) => {\n    console.log(data)\n    setSnackMessage('Network saved to NDEx.')\n  }\n\n  const onFailure = (err) => {\n    setSnackMessage('Failed to Save network: ' + err)\n  }\n\n  const handleClose = () => {\n    setSnackMessage(undefined)\n  }\n\n  if (uiState.showSearchResult) {\n    let disabled = false\n    if (subCx === undefined || edgeLimitExceeded || !isLogin) {\n      disabled = true\n    }\n    return (\n      <>\n        <SaveToNDExButton\n          disabled={disabled}\n          fetchCX={fetchCX}\n          onSuccess={onSuccess}\n          onFailure={onFailure}\n          tooltip=\"Save to NDEx\"\n        />\n        <Snackbar\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n          open={snackMessage !== undefined}\n          autoHideDuration={1500}\n          onClose={handleClose}\n          message={snackMessage}\n        />\n      </>\n    )\n  } else {\n    return <SaveToNDExButton disabled={true} />\n  }\n}\n\nexport default SaveQueryButton\n","import { CyNetworkUtils } from '@js4cytoscape/cx2js'\n\nconst cyNetworkUtils = new CyNetworkUtils()\n\nconst removeTabsAndPipesFromString = (strToNormalize: String) => {\n    const strWithoutTabsOrPipes = strToNormalize.replace(/\\t/g, ' ').replace(/\\|/g, ' ');\n    return strWithoutTabsOrPipes;\n};\n\nconst getNodeNameFromNodeObj = (nodeObj) => {\n\n    var nodeName = 'No Name';\n\n    if (nodeObj) {\n\n        if (nodeObj.n) {\n            nodeName = nodeObj.n;\n\n        } else if (nodeObj.id) {\n            nodeName = nodeObj.id;\n        }\n    }\n    return nodeName;\n};\n\nconst getEdgeInfo = (niceCX, edgeId) => {\n    if (!niceCX) return null;\n\n    var edge = niceCX.edges[edgeId];\n    var edgeInfo = {\n        'id': edgeId,\n        s: edge.s,\n        t: edge.t,\n        i: edge.i\n    };\n    var counter;\n    if (niceCX.edgeAttributes && niceCX.edgeAttributes[edgeId]) {\n        var edgeAttrs = niceCX.edgeAttributes[edgeId];\n        Object.keys(edgeAttrs).forEach((pname) => {\n            const value = edgeAttrs[pname];\n            if (pname != 'selected') {\n                if (!edgeInfo[pname]) {\n                    edgeInfo[pname] = value;\n                } else {\n                    while (edgeInfo[pname + '_' + counter]) {\n                        counter++;\n                    };\n                    edgeInfo[pname + '_' + counter] = value;\n                    counter++;\n                }\n            }\n        });\n    }\n\n    if (niceCX.edgeCitations && niceCX.edgeCitations[edgeId]) {\n        var citationList = [];\n        niceCX.edgeCitations[edgeId].forEach((citationId) => {\n            citationList.push(niceCX.citations[citationId]);\n        });\n        if (citationList.length > 0)\n            edgeInfo['citations'] = citationList;\n    }\n\n    return edgeInfo;\n};\n\nconst getNodeInfo = (niceCX, nodeId) => {\n    if (!niceCX) return null;\n\n    var node = niceCX.nodes[nodeId];\n\n    var nodeInfo = {\n        'id': nodeId,\n        '_cydefaultLabel': cyNetworkUtils.getDefaultNodeLabel(niceCX, node),\n        'n': node.n,\n        'r': node.r\n    };\n    var counter = 1;\n    if (niceCX.nodeAttributes && niceCX.nodeAttributes[nodeId]) {\n        var nodeAttrs = niceCX.nodeAttributes[nodeId];\n        Object.keys(nodeAttrs).forEach((pname) => {\n            const value = nodeAttrs[pname];\n            if (pname != \"selected\") {\n                if (!nodeInfo[pname]) {\n                    nodeInfo[pname] = value;\n                } else {\n                    while (nodeInfo[pname + '_' + counter]) {\n                        counter++;\n                    };\n                    nodeInfo[pname + '_' + counter] = value;\n                    counter++;\n                }\n            }\n\n        });\n    }\n\n    return nodeInfo;\n};\n\nconst getAttributeValue = (attribute) => {\n    var returnStr = '';\n\n    if (typeof (attribute) === 'undefined' || attribute === '' || attribute == null) {\n        return returnStr;\n    }\n    if (typeof (attribute) === 'string') {\n        return attribute;\n    }\n\n\n    if (typeof (attribute) === 'object') {\n\n        if (attribute.v) {\n\n            if (Array.isArray(attribute.v)) {\n\n                for (var i = 0; i < attribute.v.length; i++) {\n                    attribute.v[i] = removeTabsAndPipesFromString(attribute.v[i]);\n                }\n\n                returnStr = attribute.v.join('|');\n\n            } else if (typeof (attribute.v) === 'string') {\n\n                returnStr = attribute.v;\n            }\n        }\n    }\n\n    return returnStr;\n};\n\nconst getTSVOfCurrentNiceCX = (niceCX) => {\n\n    /*\n     Source\t\tNode name (if Node Name missing, then represents, node Id)\n     Interaction\n     Target\t\tNode name (if Node Name missing, then represents, node Id)\n     Source Id\n     Source Alias\n     Source Properties 1,2,3\n     Target Id\n     Target Alias\n     Target Properties 1,2,3\n     Citation\n     Edge Properties 1,2,3\n     cx edge id\n     cx source node id\n     cx target node id\n     */\n\n    var network = niceCX;\n\n    var edges = network.edges;\n    var edgeKeys = Object.keys(edges);\n\n\n    let data = [];\n    var row = {};\n\n    var edgeAttributes = network.edgeAttributes;\n\n    var headers = { 'Source Node': 0, Interaction: 1, 'Target Node': 2, 'Source ID': 3, 'Source Alias': 4 };\n    var sourceAliasOrder = headers['Source Alias'];\n    var headersSize = 0;\n\n\n    var nodes = network.nodes;\n\n    var nodeKeys = Object.keys(nodes);\n    var nodeAttributes = network.nodeAttributes;\n    var aliasColumnHeader = null;\n\n    for (var key in nodeKeys) {\n        var nodeId = nodeKeys[key];\n\n        if (nodeAttributes) {\n\n            var nodeAttrs = nodeAttributes[nodeId];\n\n            for (var key1 in nodeAttrs) {\n                var attributeObj = (nodeAttrs[key1]) ? (nodeAttrs[key1]) : \"\";\n\n                var attributeObjName = removeTabsAndPipesFromString(attributeObj['n']);\n\n                var attributeObjNameSource = 'Source ' + attributeObjName;\n\n                if (attributeObjName && (attributeObjName.toLowerCase() == 'alias')) {\n                    aliasColumnHeader = attributeObjName;\n                    if (!(attributeObjNameSource in headers)) {\n                        delete headers['Source Alias'];\n                        headers[attributeObjNameSource] = sourceAliasOrder;\n                    }\n                }\n                //var attributeObjNameTarget = 'Target ' + attributeObjName;\n\n                if (!(attributeObjNameSource in headers)) {\n                    headers[attributeObjNameSource] = Object.keys(headers).length;\n                }\n\n                //if (!(attributeObjNameTarget in headers)) {\n                //    headers[attributeObjNameTarget] = Object.keys(headers).length;\n                //}\n            }\n        }\n    }\n\n    headers['Target ID'] = Object.keys(headers).length;\n    headers['Target Alias'] = Object.keys(headers).length;\n    var targetAliasOrder = headers['Target Alias'];\n\n    for (var key in nodeKeys) {\n        var nodeId = nodeKeys[key];\n\n        if (nodeAttributes) {\n\n            var nodeAttrs = nodeAttributes[nodeId];\n\n            for (var key1 in nodeAttrs) {\n                var attributeObj = (nodeAttrs[key1]) ? (nodeAttrs[key1]) : \"\";\n\n                var attributeObjName = removeTabsAndPipesFromString(attributeObj['n']);\n\n                var attributeObjNameTarget = 'Target ' + attributeObjName;\n\n                if (attributeObjName && (attributeObjName.toLowerCase() == 'alias')) {\n                    if (!(attributeObjNameTarget in headers)) {\n                        delete headers['Target Alias'];\n                        headers[attributeObjNameTarget] = targetAliasOrder;\n                    }\n                }\n\n                if (!(attributeObjNameTarget in headers)) {\n                    headers[attributeObjNameTarget] = Object.keys(headers).length;\n                }\n            }\n        }\n    }\n\n    headers['Citation'] = Object.keys(headers).length;\n    var citationOrder = headers['Citation'];\n\n    for (let i = 0; i < edgeKeys.length; i++) {\n        var edgeKey = edgeKeys[i];\n\n        if (edgeAttributes) {\n            for (var key in edgeAttributes[edgeKey]) {\n\n                var keySanitized = removeTabsAndPipesFromString(key);\n\n                if (keySanitized && (keySanitized.toLowerCase() == 'citation')) {\n                    if (!(keySanitized in headers)) {\n                        delete headers['Citation'];\n                        headers[keySanitized] = citationOrder;\n                    }\n                }\n\n                if (!(keySanitized in headers)) {\n                    headers[keySanitized] = Object.keys(headers).length;\n                }\n            }\n        }\n    }\n\n    headers['cx edge id'] = Object.keys(headers).length;\n    headers['cx source node id'] = Object.keys(headers).length;\n    headers['cx target node id'] = Object.keys(headers).length;\n\n\n    var headersKeysSorted = Object.keys(headers);\n    headersKeysSorted.sort(function (a, b) {\n        return headers[a] - headers[b];\n    });\n    var headerKeysJoined = headersKeysSorted.join('\\t') + '\\n';\n\n    var fileString = headerKeysJoined;\n\n    var row = {};\n\n    var nodeAttributesAlreadyProcessed = { 'n': 0, 'r': 0, 'id': 0, '_cydefaultLabel': 0 };\n    var edgeAttributesAlreadyProcessed = { 'id': 0, 's': 0, 't': 0, 'i': 0 };\n\n    // Generate Source Node, Source Node Represents, Target Node, Target Node Represents,\n    // if present\n    for (let i = 0; i < edgeKeys.length; i++) {\n        for (key in headers) {\n            row[key] = '';\n        };\n\n        var rowStringTemp = '';\n        var edgeKey = edgeKeys[i];\n        var edgeObj = getEdgeInfo(network, edgeKey);\n\n\n        row['cx edge id'] = (edgeObj && edgeObj.id) ? edgeObj.id : '';\n        row['cx source node id'] = (edgeObj && (edgeObj.s || edgeObj.s == 0)) ? edgeObj.s : '';\n        row['Interaction'] = (edgeObj && edgeObj.i) ? edgeObj.i : '';\n        row['cx target node id'] = (edgeObj && (edgeObj.t || edgeObj.t == 0)) ? edgeObj.t : '';\n\n\n        var sourceNodeObj = getNodeInfo(network, edgeObj['s']);\n        var targetNodeObj = getNodeInfo(network, edgeObj['t']);\n\n        row['Source Node'] = getNodeNameFromNodeObj(sourceNodeObj);\n        row['Source ID'] = (sourceNodeObj && sourceNodeObj.r) ? sourceNodeObj.r : '';\n        row['Target Node'] = getNodeNameFromNodeObj(targetNodeObj);\n        row['Target ID'] = (targetNodeObj && targetNodeObj.r) ? targetNodeObj.r : '';\n\n        // get Source Node attributes\n        for (var nodeAttr in sourceNodeObj) {\n            var nodeAttrNormalized = removeTabsAndPipesFromString(nodeAttr);\n            if (nodeAttrNormalized in nodeAttributesAlreadyProcessed) {\n                continue;\n            }\n            row['Source ' + nodeAttrNormalized] = getAttributeValue(sourceNodeObj[nodeAttr]);\n        }\n        // get Target Node attributes\n        for (nodeAttr in targetNodeObj) {\n            var nodeAttrNormalized1 = removeTabsAndPipesFromString(nodeAttr);\n            if (nodeAttrNormalized1 in nodeAttributesAlreadyProcessed) {\n                continue;\n            }\n            row['Target ' + nodeAttrNormalized1] = getAttributeValue(targetNodeObj[nodeAttr]);\n        }\n\n        // get edge attributes\n        for (var edgeAttr in edgeObj) {\n            var edgeAttrNormalized = removeTabsAndPipesFromString(edgeAttr);\n            if (edgeAttrNormalized in edgeAttributesAlreadyProcessed) {\n                continue;\n            }\n            row[edgeAttrNormalized] = getAttributeValue(edgeObj[edgeAttr]);\n        }\n\n        var tabSeparatedRow = '';\n        for (key in headersKeysSorted) {\n            var rowElement = row[headersKeysSorted[key]];\n            tabSeparatedRow = tabSeparatedRow + rowElement + '\\t';\n        }\n        // replace last \\t (tab) in tabSeparatedRow with \\n (new line)\n        tabSeparatedRow = tabSeparatedRow.slice(0, -1) + '\\n';\n\n        fileString = fileString + tabSeparatedRow;\n\n    }\n\n    return fileString;\n};\n\nconst cx2tsv = (cx:any) => {\n    const niceCX = cyNetworkUtils.rawCXtoNiceCX(cx);\n    return getTSVOfCurrentNiceCX(niceCX);\n}\n\nexport { cx2tsv }","import React, { FC, ReactElement } from 'react'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport Typography from '@material-ui/core/Typography'\nimport DownloadIcon from '@material-ui/icons/CloudDownload'\n\nimport { cx2tsv } from '../../utils/cx2tsv'\n\nconst ExportTsvButton: FC<{\n  cx: any[]\n  fileName: string\n  setOpen: (open: boolean) => void\n}> = ({ cx, fileName, setOpen }): ReactElement => {\n  let disabled = true\n  if (cx !== undefined) {\n    disabled = false\n  }\n\n  const exportTsv = (content, fileName, contentType) => {\n    const a = document.createElement('a')\n    const file = new Blob([content], { type: contentType })\n    a.href = URL.createObjectURL(file)\n    a.download = fileName\n    a.click()\n  }\n\n  const _handleClick = () => {\n    setOpen(false)\n    const tsvString = cx2tsv(cx)\n    exportTsv(tsvString, fileName, 'application/json')\n  }\n\n  return (\n    <MenuItem onClick={_handleClick} disabled={disabled}>\n      <ListItemIcon>\n        <DownloadIcon fontSize=\"small\" />\n      </ListItemIcon>\n      <Typography variant=\"inherit\">Export TSV</Typography>\n    </MenuItem>\n  )\n}\n\nexport default ExportTsvButton\n","import React, { FC, ReactElement, useContext } from 'react'\nimport { useParams } from 'react-router-dom'\nimport useSearch from '../../hooks/useSearch'\nimport AppContext from '../../context/AppState'\nimport ExportTsvMenuItem from '../ExportTsvMenuItem'\n\nconst SaveQueryTSVMenuItem: FC<{ setOpen: (open: boolean) => void }> = ({\n  setOpen,\n}): ReactElement => {\n  const { uuid } = useParams()\n  const { query, queryMode, ndexCredential, config, summary } =\n    useContext(AppContext)\n\n  const { status, data } = useSearch(\n    uuid,\n    query,\n    config.ndexHttps,\n    ndexCredential,\n    queryMode,\n    config.maxEdgeQuery,\n  )\n\n  const edgeLimitExceeded: boolean =\n    data !== undefined ? data['edgeLimitExceeded'] : false\n  const summaryObjectCount = summary\n    ? summary.subnetworkNodeCount + summary.subnetworkEdgeCount\n    : 0\n\n  const subCx = data !== undefined ? data['cx'] : undefined\n  const fileName = uuid ? uuid + ' subnet.tsv' : 'subnet.tsv'\n\n  return (\n    <ExportTsvMenuItem\n      cx={\n        status &&\n        status === 'success' &&\n        !edgeLimitExceeded &&\n        summaryObjectCount > 0\n          ? subCx\n          : undefined\n      }\n      fileName={fileName}\n      setOpen={setOpen}\n    />\n  )\n}\n\nexport default SaveQueryTSVMenuItem\n","import React, {useState} from 'react'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\n\nimport Menu from '@material-ui/core/Menu'\nimport IconButton from '@material-ui/core/IconButton'\nimport MoreIcon from '@material-ui/icons/MoreVert'\nimport SaveQueryTSVMenuItem from './SaveQueryTSVMenuItem'\nimport { Tooltip } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    typography: {\n      //padding: theme.spacing(2),\n    },\n  }),\n)\n\nconst AdvancedQueryMenu = () => {\n  const classes = useStyles()\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null)\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget)\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n    setOpen(false)\n  }\n\n  const [open, setOpen] = useState<boolean>(Boolean(anchorEl))\n  const id = open ? 'advanced-menu' : undefined\n\n  return (\n    <>\n      <Tooltip title=\"Search query advanced menu\">\n        <IconButton aria-describedby={id} onClick={handleClick} color=\"inherit\">\n          <MoreIcon />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n      >\n        <SaveQueryTSVMenuItem setOpen={setOpen}/>\n      </Menu>\n    </>\n  )\n}\n\nexport default AdvancedQueryMenu\n","import React, { FC, useState, useContext, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\nimport InputBase from '@material-ui/core/InputBase'\nimport SearchIcon from '@material-ui/icons/Search'\nimport CloseIcon from '@material-ui/icons/Close'\nimport InfoIcon from '@material-ui/icons/InfoOutlined'\n\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport { IconButton, Tooltip } from '@material-ui/core'\nimport AppContext from '../../context/AppState'\nimport SearchHelpDialog from './SearchHelpDialog'\nimport { DownloadButton, DownloadProps } from 'cytoscape-explore-components'\nimport { fitContent, lockMainWindow } from '../../utils/cyjsUtil'\n\nimport useSearch from '../../hooks/useSearch'\nimport SaveQueryButton from './SaveQueryButton'\nimport AdvancedQueryMenu from './AdvancedQueryMenu'\nimport UIState from '../../model/UIState'\nimport { UIStateActions } from '../../reducer/uiStateReducer'\nimport SelectionState from '../../model/SelectionState'\nimport { SelectionActions } from '../../reducer/selectionStateReducer'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: theme.palette.grey[100],\n      marginRight: theme.spacing(1),\n      marginLeft: theme.spacing(1),\n      padding: 0,\n      paddingRight: theme.spacing(1) \n    },\n    search: {\n      maxWidth: '60vh',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n    },\n    inputRoot: {\n      width: '100%',\n      color: 'inherit',\n    },\n    inputInput: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n    },\n    formControl: {\n      minWidth: '15em',\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(0),\n    },\n    searchType: {\n      maxWidth: '12ch',\n      padding: 0,\n    },\n    button: {\n      padding: 0,\n    },\n  }),\n)\n\nconst queryModes = {\n  direct: 'Direct',\n  firstStepNeighborhood: '1-Step Neighborhood',\n  firstStepAdjacent: '1-step adjacent',\n  interconnect: 'Interconnect',\n  twoStepNeighborhood: '2-step neighborhood',\n  twoStepAdjacent: '2-step adjacent',\n}\n\nconst SearchBox: FC = () => {\n  const classes = useStyles()\n  const [open, setOpen] = useState(false)\n  const [disableQuery, setDisableQuery] = useState(true)\n  const [rawQuery, setRawQuery] = useState('')\n\n  const { uuid } = useParams()\n\n  const {\n    cyReference,\n    query,\n    setQuery,\n    queryMode,\n    setQueryMode,\n    uiStateDispatch,\n    uiState,\n    selectionState,\n    selectionStateDispatch,\n    ndexCredential,\n    config,\n    summary,\n  } = useContext(AppContext)\n\n  const [searchType, setSearchType] = useState(queryMode)\n\n  const searchResult = useSearch(\n    uuid,\n    query,\n    config.ndexHttps,\n    ndexCredential,\n    queryMode,\n    config.maxEdgeQuery,\n  )\n\n  const subnet = searchResult.data\n  let subCx\n  if (subnet !== undefined) {\n    subCx = subnet['cx']\n  }\n\n  const edgeLimitExceeded: boolean =\n    subnet !== undefined ? subnet['edgeLimitExceeded'] : false\n  const summaryObjectCount = summary\n    ? summary.subnetworkNodeCount + summary.subnetworkEdgeCount\n    : 0\n\n  const data = summaryObjectCount > 0 ? subCx : undefined \n  const downloadProps: DownloadProps = {\n    data,\n    tooltip: 'Download query result as CX',\n    fileName: `${uuid} subnet.cx`,\n  }\n\n  const handleSearchTypeChange = (evt) => {\n    const val = evt.target.value\n    setSearchType(val)\n    setQueryMode(val)\n  }\n  const handleQueryChange = (evt) => {\n    const q: string = evt.target.value\n    if (q !== undefined && q.length !== 0) {\n      setDisableQuery(false)\n    } else {\n      setDisableQuery(true)\n    }\n    setRawQuery(q)\n  }\n\n  const setShowSearchResult = (state: UIState) =>\n    uiStateDispatch({\n      type: UIStateActions.SET_SHOW_SEARCH_RESULT,\n      uiState: state,\n    })\n  const setClearSelection = (state: SelectionState) => {\n    selectionStateDispatch({\n      type: SelectionActions.CLEAR_ALL_SUB,\n      selectionState: state,\n    })\n    selectionStateDispatch({\n      type: SelectionActions.CLEAR_ALL_MAIN,\n      selectionState: state,\n    })\n  }\n\n  const handleClick = () => {\n    setQuery(rawQuery)\n    setShowSearchResult({ ...uiState, showSearchResult: true })\n    setClearSelection({ ...selectionState })\n    setTimeout(() => {\n      fitContent(cyReference)\n      // lockMainWindow(cyReference, true)\n    }, 300)\n  }\n\n  const handleClear = () => {\n    setRawQuery('')\n    setQuery('')\n    setDisableQuery(true)\n    setShowSearchResult({ ...uiState, showSearchResult: false })\n    setClearSelection({ ...selectionState })\n    setTimeout(() => {\n      fitContent(cyReference)\n      // lockMainWindow(cyReference, false)\n    }, 300)\n  }\n\n  const handleHelpClose = () => {\n    setOpen(false)\n  }\n  const handleHelpOpen = () => {\n    setOpen(true)\n  }\n\n  const handleKeyPress = (e): void => {\n    if (rawQuery.length === 0) {\n      return\n    }\n\n    const key = e.key\n    if (key === 'Enter') {\n      handleClick()\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.search}>\n        <InputBase\n          autoFocus={true}\n          placeholder=\"Enter query terms\"\n          value={rawQuery}\n          classes={{\n            root: classes.inputRoot,\n            input: classes.inputInput,\n          }}\n          inputProps={{ 'aria-label': 'search' }}\n          onChange={handleQueryChange}\n          onKeyPress={handleKeyPress}\n        />\n      </div>\n      <Tooltip title=\"Learn more\">\n        <IconButton\n          color=\"inherit\"\n          disableFocusRipple\n          // disableRipple\n          onClick={handleHelpOpen}\n        >\n          <InfoIcon />\n        </IconButton>\n      </Tooltip>\n      <FormControl variant=\"standard\" className={classes.formControl}>\n        <Select\n          native\n          value={searchType}\n          onChange={handleSearchTypeChange}\n          label=\"Search Type\"\n          inputProps={{\n            name: 'search type',\n            id: 'search-type',\n          }}\n        >\n          {Object.keys(queryModes).map((key) => (\n            <option key={key} value={key}>\n              {queryModes[key]}\n            </option>\n          ))}\n        </Select>\n      </FormControl>\n      <IconButton\n        color=\"inherit\"\n        disableFocusRipple\n        // disableRipple\n        disabled={disableQuery}\n        onClick={handleClick}\n      >\n        <SearchIcon />\n      </IconButton>\n      {!edgeLimitExceeded && <DownloadButton {...downloadProps} />}\n      {!edgeLimitExceeded && <SaveQueryButton />}\n      <AdvancedQueryMenu />\n      <IconButton\n        color=\"inherit\"\n        disableFocusRipple\n        // disableRipple\n        className={classes.button}\n        disabled={disableQuery}\n        onClick={handleClear}\n      >\n        <CloseIcon />\n      </IconButton>\n      <SearchHelpDialog onClose={handleHelpClose} open={open} />\n    </div>\n  )\n}\n\nexport default SearchBox\n","// The network is editable only if the following values are set to \"permissions\"\nexport const EDITABLE = {\n  ADMIN: 'ADMIN',\n  WRITE: 'WRITE',\n} as const\n\nexport type Editable = typeof EDITABLE[keyof typeof EDITABLE]","import React, { FC, ReactElement, useContext, useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport IconButton from '@material-ui/core/IconButton'\nimport EditIcon from '@material-ui/icons/Edit'\nimport LockIcon from '@material-ui/icons/Lock'\nimport AppContext from '../../context/AppState'\nimport useNetworkPermissions from '../../hooks/useNetworkPermissions'\nimport { Tooltip } from '@material-ui/core'\n\nimport { getCurrentServer } from '../../utils/locationUtil'\nimport useNetworkSummary from '../../hooks/useNetworkSummary'\nimport { EDITABLE, Editable } from './Editable'\n\n\nconst EditMetadataButton: FC = (): ReactElement => {\n  const { summary, ndexCredential, config } = useContext(AppContext)\n  const { uuid } = useParams()\n  const { isLogin } = ndexCredential\n\n  const [isEditable, setIsEditable] = useState<boolean>(false)\n\n  const summaryResponse = useNetworkSummary(\n    uuid,\n    config.ndexHttps,\n    'v2',\n    ndexCredential,\n  )\n  const networkSummary = summaryResponse.data\n  let isDoiAvailable = false\n  let readOnly = false\n\n  if (networkSummary !== undefined && networkSummary !== null) {\n    const { doi } = summary\n    if (doi !== undefined) {\n      // DOI status available.\n      isDoiAvailable = true\n    }\n\n    readOnly = networkSummary.isReadOnly\n  }\n\n  const permissions = useNetworkPermissions(\n    uuid,\n    config.ndexHttps,\n    'v2',\n    ndexCredential,\n  )\n\n  useEffect(() => {\n    if (permissions !== undefined && permissions !== null) {\n      const accessLevel: Editable = permissions.data\n      if (accessLevel === EDITABLE.ADMIN || accessLevel === EDITABLE.WRITE) {\n        setIsEditable(true)\n      }\n    }\n  }, [permissions])\n\n  let login: boolean = false\n  if (isLogin && summary !== undefined) {\n    login = true\n  }\n\n  let message = 'This feature is only available to signed-in users'\n\n  let disabled = true\n  if (isEditable && login) {\n    if (isDoiAvailable) {\n      message =\n        'Network properties cannot be modified once a DOI has been requested or assigned'\n    } else {\n      if (readOnly) {\n        message = 'This network is read-only'\n        disabled = true\n      } else {\n        message = 'Edit network properties'\n        disabled = false\n      }\n    }\n  } else if (!isEditable && login) {\n    message = \"You don't have permission to edit this network\"\n  }\n\n  return (\n    <Tooltip title={message} arrow placement={'top-start'}>\n      <div>\n        <IconButton\n          disabled={disabled}\n          color=\"inherit\"\n          href={\n            getCurrentServer() +\n            '/#/properties/network/' +\n            summary.externalId +\n            '/null?returnto=nnv'\n          }\n        >\n          {readOnly || disabled ? <LockIcon /> : <EditIcon />}\n        </IconButton>\n      </div>\n    </Tooltip>\n  )\n}\n\nexport default EditMetadataButton\n","import React, { FC } from 'react'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport Typography from '@material-ui/core/Typography'\nimport LinkIcon from '@material-ui/icons/Link'\n\nimport { getCurrentServer } from '../../utils/locationUtil'\n\nconst ShareLinkMenuItem: FC<{ uuid: string, disabled: boolean }> = ({\n  uuid = '',\n  disabled = false,\n}) => {\n  return (\n    <MenuItem\n    disabled={disabled}\n      component=\"a\"\n      href={getCurrentServer() + '/#/access/network/' + uuid + '?returnto=nnv'}\n    >\n      <ListItemIcon>\n        <LinkIcon fontSize=\"small\" />\n      </ListItemIcon>\n      <Typography variant=\"inherit\">Share</Typography>\n    </MenuItem>\n  )\n}\n\nexport default ShareLinkMenuItem\n","import React, { FC } from 'react'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport Typography from '@material-ui/core/Typography'\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks'\n\nimport { getCurrentServer } from '../../utils/locationUtil'\n\n//http://dev.ndexbio.org/#/properties/network/9a17d903-85b9-11eb-8e98-525400c25d22/null?doi=true\n\nconst CreateDOIMenuItem: FC<{ uuid: string; disabled: boolean }> = ({\n  uuid = '',\n  disabled = false,\n}): React.ReactElement => (\n  <MenuItem\n    disabled={disabled}\n    component=\"a\"\n    href={\n      getCurrentServer() +\n      '/#/properties/network/' +\n      uuid +\n      '/null?doi=true&returnto=nnv'\n    }\n  >\n    <ListItemIcon>\n      <LibraryBooksIcon fontSize=\"small\" />\n    </ListItemIcon>\n    <Typography variant=\"inherit\">Request DOI</Typography>\n  </MenuItem>\n)\n\nexport default CreateDOIMenuItem\n","import { useQuery } from 'react-query'\nimport NdexCredential from '../model/NdexCredential'\n\nimport { getNdexClient } from '../utils/credentialUtil'\nimport NDExError from '../utils/error/NDExError'\n\n\nconst getCurrentUser = async (\n  serverUrl: string,\n  apiVersion: string,\n  credential: NdexCredential,\n) => {\n\n  if (credential === undefined || !credential.loaded || !credential.isLogin) {\n    return undefined\n  }\n\n  const url = `${serverUrl}/${apiVersion}`\n\n  let currentUser = undefined\n  try {\n    const ndexClient = getNdexClient(url, credential)\n    currentUser = await ndexClient.getSignedInUser()\n  } catch (e: unknown) {\n    throw new NDExError(e['message'], e)\n  }\n\n  return currentUser\n}\n\nexport default function useCurrentUser(\n  serverUrl: string,\n  apiVersion: string = 'v2',\n  credential: NdexCredential,\n) {\n  return useQuery(\n    ['currentUser', serverUrl, apiVersion, credential],\n    () => getCurrentUser(serverUrl, apiVersion, credential),\n    {\n      retry: false,\n    },\n  )\n}\n","import React, {\n  VFC,\n  ReactElement,\n  useContext,\n  useEffect,\n  useState,\n} from 'react'\nimport { useParams } from 'react-router-dom'\n\nimport Menu from '@material-ui/core/Menu'\nimport IconButton from '@material-ui/core/IconButton'\nimport ShareIcon from '@material-ui/icons/Share'\nimport ShareLinkMenuItem from '../ShareLinkMenuItem'\nimport CreateDOIMenuItem from '../CreateDOIMenuItem'\nimport { Tooltip } from '@material-ui/core'\nimport AppContext from '../../context/AppState'\nimport useNetworkPermissions from '../../hooks/useNetworkPermissions'\nimport { EDITABLE, Editable } from './Editable'\nimport useCurrentUser from '../../hooks/useCurrentUser'\n\nconst DISABLED_MENU_TOOLTIP =\n  'This feature is only available to signed-in users'\n\nconst ShareMenu: VFC = (): ReactElement => {\n  const { uuid } = useParams()\n  const { summary, config, ndexCredential } = useContext(AppContext)\n\n  const [isEditable, setIsEditable] = useState<boolean>(false)\n  const [isOwner, setIsOwner] = useState<boolean>(false)\n\n  const permissions = useNetworkPermissions(\n    uuid,\n    config.ndexHttps,\n    'v2',\n    ndexCredential,\n  )\n\n  const currentUser = useCurrentUser(config.ndexHttps, 'v2', ndexCredential)\n\n  useEffect(() => {\n    if (summary === undefined || summary === null) {\n      return\n    }\n    if (currentUser === undefined || currentUser.data === undefined) {\n      return\n    }\n\n    const { owner } = summary\n    if (owner === undefined) {\n      return\n    }\n\n    const currentUserName = currentUser.data['userName']\n    if (owner === currentUserName) {\n      setIsOwner(true)\n    }\n  }, [summary, currentUser])\n\n  useEffect(() => {\n    if (\n      permissions !== undefined &&\n      permissions !== null &&\n      permissions.data === EDITABLE.ADMIN\n    ) {\n      setIsEditable(true)\n    }\n  }, [permissions])\n\n  // Disable menu items if not logged-in\n  const disabled = !ndexCredential.isLogin\n\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null)\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const getDisabledMessage = (\n    isLogin: boolean,\n    isDoiAvailable: boolean,\n    hasPermission: boolean,\n  ): string => {\n    if (isLogin && !isEditable) {\n      return \"You don't have permission to request DOI.\"\n    } else if (isLogin && hasPermission && isDoiAvailable) {\n      return 'A DOI has already been requested for this network'\n    } else {\n      return DISABLED_MENU_TOOLTIP\n    }\n  }\n\n  const open = Boolean(anchorEl)\n  const id = open ? 'advanced-menu' : undefined\n  let isDoiAvailable = false\n  if (summary !== undefined && summary !== null) {\n    const { doi } = summary\n    if (doi !== undefined) {\n      // DOI status available.  Check its current state\n      isDoiAvailable = true\n    }\n  }\n\n  return (\n    <>\n      <Tooltip title=\"Share...\">\n        <IconButton\n          aria-label=\"share\"\n          aria-describedby={id}\n          onClick={handleClick}\n          color=\"inherit\"\n        >\n          <ShareIcon />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n      >\n        <Tooltip\n          title={\n            disabled\n              ? DISABLED_MENU_TOOLTIP\n              : isOwner\n              ? 'Share this network internally or externally'\n              : 'You are not the owner of this network'\n          }\n          arrow\n          placement={'left-end'}\n        >\n          <div>\n            <ShareLinkMenuItem uuid={uuid} disabled={disabled || !isOwner} />\n          </div>\n        </Tooltip>\n\n        <Tooltip\n          title={\n            disabled || isDoiAvailable || !isEditable\n              ? getDisabledMessage(\n                  ndexCredential.isLogin,\n                  isDoiAvailable,\n                  isEditable,\n                )\n              : 'Request a Digital Object Identifier for this network'\n          }\n          arrow\n          placement={'left-end'}\n        >\n          <div>\n            <CreateDOIMenuItem\n              uuid={uuid}\n              disabled={disabled || isDoiAvailable || !isEditable}\n            />\n          </div>\n        </Tooltip>\n      </Menu>\n    </>\n  )\n}\n\nexport default ShareMenu\n","import React, { useContext } from 'react'\nimport { useParams } from 'react-router-dom'\n\nimport AppContext from '../../context/AppState'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport DownloadIcon from '@material-ui/icons/CloudDownload'\n\nimport { appendWindowProtocol } from '../../utils/locationUtil'\n\nconst SaveNetworkCXButton = () => {\n  const { uuid } = useParams()\n\n  const { ndexCredential, config, summary } = useContext(AppContext)\n\n  const exportCx = () => {\n    const a = document.createElement('a')\n    let credentialProp = ''\n    if (ndexCredential.isLogin) {\n      if (ndexCredential.isGoogle) {\n        credentialProp =\n          '&id_token=' + ndexCredential.oauth['loginDetails'].tokenId\n      } else {\n        credentialProp =\n          '&auth_token=' +\n          btoa(\n            ndexCredential.basic.userId + ':' + ndexCredential.basic.password,\n          )\n      }\n    }\n\n    a.href = `${appendWindowProtocol(\n      config.ndexUrl,\n    )}/v2/network/${uuid}?download=true${credentialProp}`\n    a.click()\n  }\n\n  const handleClick = () => {\n    exportCx()\n  }\n\n  return (\n    <Tooltip title=\"Download this network in CX format\">\n      <IconButton disabled={!summary} onClick={handleClick} color=\"inherit\">\n        <DownloadIcon />\n      </IconButton>\n    </Tooltip>\n  )\n}\n\nexport default SaveNetworkCXButton\n","import React, { VFC, useContext, useState } from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport { getNdexClient } from '../../utils/credentialUtil'\nimport AppContext from '../../context/AppState'\nimport { useParams } from 'react-router-dom'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport { getCurrentServer } from '../../utils/locationUtil'\n\nconst DeleteDialog: VFC<{ open: boolean; setOpen: (boolean) => void }> = ({\n  open,\n  setOpen,\n}) => {\n  const baseUrl: string = getCurrentServer()\n  const usersAccountUrl = `${baseUrl}/#/myAccount`\n\n  const { ndexCredential, config } = useContext(AppContext)\n  const { uuid } = useParams()\n  const [openFeedback, setOpenFeedback] = useState<boolean>(false)\n\n  const _handleDelete = () => {\n    const ndexClient = getNdexClient(`${config.ndexHttps}/v2`, ndexCredential)\n    ndexClient\n      .deleteNetwork(uuid)\n      .then((response) => {\n        console.log(response)\n        setOpenFeedback(true)\n      })\n      .catch((err) => {\n        console.log(err)\n        throw new Error(err)\n      })\n    setOpen(false)\n  }\n\n  const _handleClose = () => {\n    setOpen(false)\n  }\n\n  const _handleCloseFeedback = () => {\n    setOpenFeedback(false)\n    setTimeout(() => {\n      window.open(usersAccountUrl, '_self')\n    }, 1100)\n  }\n\n\n  return (\n    <>\n      <Dialog\n        open={open}\n        onClose={_handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {'Delete this network'}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            This network will be permanently deleted from NDEx. Are you sure you\n            want to proceed?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={_handleClose} color=\"default\" autoFocus>\n            Cancel\n          </Button>\n          <Button onClick={_handleDelete} color=\"secondary\">\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar\n        open={openFeedback}\n        autoHideDuration={1000}\n        message=\"The network successfully deleted. Redirecting to your account page...\"\n        onClose={_handleCloseFeedback}\n      />\n    </>\n  )\n}\n\nexport default DeleteDialog\n","import React, { VFC, ReactElement, useContext, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport AppContext from '../../context/AppState'\nimport useNetworkPermissions from '../../hooks/useNetworkPermissions'\nimport { Tooltip } from '@material-ui/core'\nimport red from '@material-ui/core/colors/red'\nimport DeleteDialog from './DeleteDialog'\n\nconst DeleteButton: VFC = (): ReactElement => {\n  const { summary, ndexCredential, config } = useContext(AppContext)\n  const { uuid } = useParams()\n  const { isLogin } = ndexCredential\n\n  const [open, setOpen] = useState<boolean>(false)\n\n  const permissions = useNetworkPermissions(\n    uuid,\n    config.ndexHttps,\n    'v2',\n    ndexCredential,\n  )\n\n  let hasPermission = false\n  if (\n    permissions !== undefined &&\n    permissions !== null &&\n    permissions.data === 'ADMIN'\n  ) {\n    hasPermission = true\n  }\n\n  let login: boolean = false\n  if (isLogin && summary !== undefined) {\n    login = true\n  }\n\n  let message = 'Delete function is only available to signed-in users'\n\n  let disabled = true\n  if (hasPermission && login) {\n    message = 'Delete this network'\n    disabled = false\n  } else if (!hasPermission && login) {\n    message = \"You don't have permission to delete this network\"\n  }\n\n  const _handleClick = (event: any): void => {\n    setOpen(true)\n  }\n\n  return (\n    <Tooltip title={message} arrow placement={'top-start'}>\n      <div>\n        <IconButton color=\"inherit\" disabled={disabled} onClick={_handleClick}>\n          <DeleteIcon />\n        </IconButton>\n        <DeleteDialog open={open} setOpen={setOpen} />\n      </div>\n    </Tooltip>\n  )\n}\n\nexport default DeleteButton\n","import React, { FC } from 'react'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\nimport SearchBox from './SearchBox'\nimport OpenInCytoscape from './OpenInCytoscape'\nimport EditMetadataButton from './EditMetadataButton'\nimport ShareMenu from './ShareMenu'\nimport SaveNetworkCXButton from './SaveNetworkCXButton'\nimport DeleteButton from './DeleteButton'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    toolBar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      width: '100%',\n      height: '100%',\n      backgroundColor: '#FFFFFF',\n      boxSizing: 'border-box',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n    },\n    grow: {\n      flexGrow: 1,\n    },\n  }),\n)\n\nconst FooterPanel: FC = () => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.toolBar}>\n      <SearchBox />\n      <div className={classes.grow} />\n      <OpenInCytoscape />\n      <SaveNetworkCXButton />\n      <EditMetadataButton />\n      <ShareMenu />\n      <DeleteButton />\n    </div>\n  )\n}\n\nexport default FooterPanel\n","import { FC } from 'react'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\nimport MainSplitPane from '../MainSplitPane'\nimport ToolBar from '../ToolBar'\nimport FooterPanel from '../FooterPanel'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      height: '100%',\n      padding: 0,\n      margin: 0,\n      display: 'flex',\n      flexDirection: 'column',\n      boxSizing: 'border-box',\n    },\n    main: {\n      flexGrow: 1,\n      background: '#EEEEEE',\n      display: 'flex',\n      flexDirection: 'column',\n      boxSizing: 'border-box',\n      width: '100%',\n      height: '100%',\n    },\n    footer: {\n      boxSizing: 'border-box',\n      zIndex: 500,\n      padding: 0,\n      margin: 0,\n      borderTop: '1px solid rgba(230,230,230,0.7)',\n      width: '100%',\n      height: '4em', //If this changes, also update footer size in Popup/index.tsx\n    },\n  }),\n)\n\nconst CoreComponents: FC = () => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <header>\n        <ToolBar />\n      </header>\n      <main className={classes.main}>\n        <MainSplitPane />\n      </main>\n      <footer className={classes.footer}>\n        <FooterPanel />\n      </footer>\n    </div>\n  )\n}\n\nexport default CoreComponents\n","import { FC } from 'react'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\nimport { NDExAccountProvider } from 'cytoscape-explore-components'\nimport AppContext from '../../context/AppState'\nimport { useContext } from 'react'\nimport CoreComponents from './CoreComponents'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    appShell: {\n      width: '100%',\n      height: '100%',\n      padding: 0,\n      margin: 0,\n      boxSizing: 'border-box',\n    },\n    sandbox: {\n      position: 'absolute',\n      left: '-999em',\n    },\n  }),\n)\n\nconst AppShell: FC = () => {\n  const classes = useStyles()\n  const { config } = useContext(AppContext)\n\n  const { ndexHttps, googleClientId } = config\n\n  return (\n    <div className={classes.appShell}>\n      <NDExAccountProvider\n        ndexServerURL={ndexHttps}\n        googleClientId={googleClientId}\n      >\n        <CoreComponents />\n      </NDExAccountProvider>\n      <div id=\"sandbox\"></div>\n    </div>\n  )\n}\n\nexport default AppShell\n","import { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\nimport { NDExAccountProvider } from 'cytoscape-explore-components'\n\nimport AppContext from '../../context/AppState'\nimport { useContext, FC } from 'react'\nimport PropTypes from 'prop-types'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    accountShell: {\n      width: '100%',\n      height: '100vh',\n      padding: 0,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexDirection: 'column',\n      boxSizing: 'border-box',\n    },\n  }),\n)\n\nconst AccountShell: FC = (props) => {\n  const classes = useStyles()\n  const { config } = useContext(AppContext)\n  const { ndexHttps, googleClientId } = config\n\n  return (\n    <div className={classes.accountShell}>\n      {googleClientId !== undefined ? (\n        <NDExAccountProvider\n          ndexServerURL={ndexHttps}\n          googleClientId={googleClientId}\n        >\n          {props.children}\n        </NDExAccountProvider>\n      ) : (\n        props.children\n      )}\n    </div>\n  )\n}\n\nAccountShell.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default AccountShell\n","import { NdexSignUpPanel } from 'cytoscape-explore-components'\nimport { handleNDExSignOn } from 'cytoscape-explore-components'\n\nimport { getCurrentServer } from '../../utils/locationUtil'\n\nimport { FC, useState } from 'react'\nimport { Grid } from '@material-ui/core'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\n\nimport { useEffect } from 'react'\nimport { Button, Typography } from '@material-ui/core'\n\nimport logo from '../../assets/images/ndex-logo.svg'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '40em',\n      padding: 0,\n      margin: 0,\n      display: 'flex',\n      flexDirection: 'column',\n      boxSizing: 'border-box',\n    },\n    ndexLogo: {\n      height: '3em',\n      'vertical-align': 'middle',\n    },\n    titleText: {\n      'vertical-align': 'middle',\n      'padding-left': '1em',\n      'line-height': '2em',\n    },\n    homeButton: {\n      color: 'white',\n      'background-color': '#337ab7',\n      textTransform: 'none',\n    },\n    footer: {\n      'text-align': 'center',\n    },\n  }),\n)\n\nconst AccountSignUpPane: FC = () => {\n  const classes = useStyles()\n\n  useEffect(() => {\n    document.title = 'Sign Up for NDEx'\n  }, [])\n\n  const baseUrl: string = getCurrentServer()\n\n  const [showHomeLink, setShowHomeLink] = useState(false)\n\n  const onSuccessLogin = () => {\n    window.open(baseUrl + '/#/myAccount', '_self')\n  }\n\n  const handleHomeClick = () => {\n    window.open(baseUrl, '_self')\n  }\n\n  const onWaitForEmailValidation = (userInfo, onSuccessLogin) => {\n    setShowHomeLink(true)\n  }\n\n  return (\n    <Grid container className={classes.root}>\n      <Grid container alignItems={'center'} justify={'center'}>\n        <Grid item>\n          <img alt=\"NDEx Logo\" src={logo} className={classes.ndexLogo} />\n        </Grid>\n        <Grid item>\n          <Typography\n            variant=\"h6\"\n            display=\"inline\"\n            className={classes.titleText}\n          >\n            Sign Up for NDEx\n          </Typography>\n        </Grid>\n      </Grid>\n      <NdexSignUpPanel\n        handleNDExSignOn={handleNDExSignOn}\n        onSuccessLogin={onSuccessLogin}\n        onWaitForEmailValidation={onWaitForEmailValidation}\n      />\n      {showHomeLink && (\n        <div className={classes.footer}>\n          <Button onClick={handleHomeClick} className={classes.homeButton}>\n            Go to NDEx Home Page\n          </Button>\n        </div>\n      )}\n    </Grid>\n  )\n}\n\nexport default AccountSignUpPane\n","import { ForgotPasswordPanel } from 'cytoscape-explore-components'\n\nimport { getCurrentServer } from '../../utils/locationUtil'\n\nimport { FC, useState } from 'react'\nimport { Grid } from '@material-ui/core'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles'\n\nimport { useEffect } from 'react'\nimport { Typography, Button } from '@material-ui/core'\n\nimport logo from '../../assets/images/ndex-logo.svg'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: '32em',\n      margin: 0,\n      padding: 0,\n    },\n    ndexLogo: {\n      height: '3em',\n      'vertical-align': 'middle',\n    },\n    titleText: {\n      'vertical-align': 'middle',\n    },\n    homeButton: {\n      color: 'white',\n      'background-color': '#337ab7',\n      textTransform: 'none',\n    },\n    footer: {\n      marginTop: '5em'\n    },\n    row: {\n      marginBottom: '1em',\n    },\n  }),\n)\n\nconst AccountForgotPasswordPane: FC = () => {\n  const classes = useStyles()\n\n  const [showHomeLink, setShowHomeLink] = useState(false)\n\n  const baseUrl: string = getCurrentServer()\n\n  useEffect(() => {\n    document.title = 'Recover NDEx Password'\n  }, [])\n\n  const handleHomeClick = () => {\n    window.open(baseUrl, '_self')\n  }\n\n  const onSuccessReset = (email: String): void => {\n    setShowHomeLink(true)\n  }\n\n  return (\n    <Grid container className={classes.root} spacing={5}>\n      <Grid\n        className={classes.row}\n        container\n        justify={'center'}\n        alignItems={'center'}\n        xs={12}\n        spacing={2}\n      >\n        <Grid item>\n          <img alt=\"NDEx Logo\" src={logo} className={classes.ndexLogo} />\n        </Grid>\n        <Grid item>\n          <Typography\n            variant=\"h6\"\n            display=\"inline\"\n            className={classes.titleText}\n          >\n            Recover NDEx Password\n          </Typography>\n        </Grid>\n      </Grid>\n      <Grid\n        className={classes.row}\n        container\n        justify={'center'}\n        alignItems={'center'}\n        xs={12}\n      >\n        <ForgotPasswordPanel onSuccessReset={onSuccessReset} />\n        {showHomeLink && (\n          <div className={classes.footer}>\n            <Button fullWidth onClick={handleHomeClick} className={classes.homeButton}>\n              Go to NDEx Home Page to Sing In\n            </Button>\n          </div>\n        )}\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default AccountForgotPasswordPane\n","import React from 'react'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport { Typography } from '@material-ui/core'\nimport logo from '../../assets/images/ndex-logo.svg'\n\nimport { getCurrentServer } from '../../utils/locationUtil'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'grid',\n      width: '100%',\n      height: '100%',\n      placeItems: 'center',\n    },\n    item: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    message: {\n      padding: '1em',\n    },\n    ndexLogo: {\n      height: '20vh',\n      padding: '1em',\n      '&:hover': {\n        cursor: 'pointer',\n        color: theme.palette.secondary.main,\n      },\n    },\n    link: {\n      '&:hover': {\n        fontWeight: 700,\n        cursor: 'pointer',\n        color: theme.palette.secondary.main,\n      },\n    },\n  }),\n)\n\nconst TopPage = ({ config }) => {\n  const classes = useStyles()\n\n  const url = getCurrentServer();\n\n  const handleClick = () => {\n    window.open(url, '_self')\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.item}>\n        <img alt=\"NDEx Logo\" src={logo} className={classes.ndexLogo} onClick={handleClick} />\n        <Typography className={classes.message} variant=\"h4\">\n          Please specify UUID of the network\n        </Typography>\n\n        <Typography className={classes.link} onClick={handleClick} variant=\"body1\">\n          Back to NDEx Home\n        </Typography>\n      </div>\n    </div>\n  )\n}\n\nexport default TopPage\n","import React, { useState, useReducer } from 'react'\nimport { Helmet } from 'react-helmet'\n\nimport './App.css'\nimport { useHistory } from 'react-router-dom'\nimport { Switch, Route, BrowserRouter } from 'react-router-dom'\n\nimport AppShell from './components/AppShell'\nimport AccountShell from './components/AccountShell'\nimport AccountSignUpPane from './components/AccountSignUpPane'\nimport AccountForgotPasswordPane from './components/AccountForgotPasswordPane'\n\nimport AppContext from './context/AppState'\nimport AppState from './model/AppState'\nimport TopPanel from './components/TopPanel'\n\nimport selectionStateReducer, {\n  EMPTY_SELECTION,\n} from './reducer/selectionStateReducer'\nimport cyReducer, { INITIAL_CY_REFERENCE } from './reducer/cyReducer'\nimport uiStateReducer, { INITIAL_UI_STATE } from './reducer/uiStateReducer'\nimport NdexCredential from './model/NdexCredential'\nimport Summary from './model/Summary'\n\nconst defNdexCredential: NdexCredential = {\n  loaded: false,\n  isLogin: false,\n  isGoogle: false,\n}\n\nconst defSummary: Summary = {\n  name: 'N/A',\n}\n\nconst App = ({ config }) => {\n  const history = useHistory(INITIAL_UI_STATE)\n\n  const [query, setQuery] = useState('')\n  const [queryMode, setQueryMode] = useState('firstStepNeighborhood')\n  const [summary, setSummary] = useState(defSummary)\n\n  const [lgrReference, setLgrReference] = useState(null)\n\n  \n  const { googleClientId } = config\n  if(googleClientId === undefined) {\n    // Google login feature will not be used. Assume credential is ready\n    defNdexCredential.loaded = true\n  }\n  const [ndexCredential, setNdexCredential] = useState(defNdexCredential)\n\n  const [selectionState, selectionStateDispatch] = useReducer(\n    selectionStateReducer,\n    EMPTY_SELECTION,\n  )\n  const [cyReference, cyDispatch] = useReducer(cyReducer, INITIAL_CY_REFERENCE)\n  const [uiState, uiStateDispatch] = useReducer(\n    uiStateReducer,\n    INITIAL_UI_STATE,\n  )\n\n  const [ndexLoginWrapper, setNdexLoginWrapper] = useState(null)\n\n  // TODO: use reducer?\n  const defState: AppState = {\n    config,\n\n    cyReference,\n    cyDispatch,\n\n    lgrReference,\n    setLgrReference,\n\n    uiState,\n    uiStateDispatch,\n\n    query,\n    setQuery,\n    queryMode,\n    setQueryMode,\n\n    ndexCredential,\n    setNdexCredential,\n\n    summary,\n    setSummary,\n\n    selectionState,\n    selectionStateDispatch,\n\n    ndexLoginWrapper,\n    setNdexLoginWrapper,\n  }\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL} history={history}>\n      <Switch>\n        <Route path=\"/networks/:uuid\">\n          <AppContext.Provider value={defState}>\n            <AppShell />\n          </AppContext.Provider>\n        </Route>\n        <Route path=\"/signup\">\n          <AppContext.Provider value={defState}>\n            <AccountShell>\n              <AccountSignUpPane />\n            </AccountShell>\n          </AppContext.Provider>\n        </Route>\n        <Route path=\"/recoverPassword\">\n          <AppContext.Provider value={defState}>\n            <AccountShell>\n              <AccountForgotPasswordPane />\n            </AccountShell>\n          </AppContext.Provider>\n        </Route>\n        <Route path=\"/\">\n          <TopPanel config={config} />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import red from '@material-ui/core/colors/red'\nimport blue from '@material-ui/core/colors/blue'\nimport { createTheme } from '@material-ui/core/styles'\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#FFFFFF',\n    },\n    secondary: {\n      main: blue[800],\n    },\n    error: {\n      main: red.A200,\n    },\n    background: {\n      default: '#EFEFEF',\n    },\n  },\n})\n\nexport default theme\n","import React, { Component } from 'react'\nimport { Typography } from '@material-ui/core'\nimport NDExError from '../../utils/error/NDExError'\n\nexport default class ErrorBoundary extends Component {\n  state = {\n    hasError: false,\n    error: null\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // eslint-disable-next-line no-console\n    console.log({ error, errorInfo })\n    this.setState({ hasError: true, error })\n  }\n\n  render() {\n    const { hasError, error } = this.state\n\n    let message = ''\n    if(error !== null && error.message !== undefined) {\n      message = error.message\n    }\n\n    if (hasError) {\n      return (\n        <div style={{ height: '100%', width: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n          <div style={{ textAlign: 'center' }}>\n            <Typography variant=\"h4\" style={{ margin: '1rem' }}>\n              Sorry, there was an error loading this page.{' '}\n            </Typography>\n            <Typography variant=\"h6\">\n              ({message})\n            </Typography>\n            <Typography\n              onClick={() => {\n                window.location.reload()\n              }}\n              color=\"secondary\"\n              variant=\"h5\"\n              style={{ cursor: 'pointer', margin: '1rem' }}\n            >\n              Click here to reload the page.\n            </Typography>\n            <Typography\n              color=\"secondary\"\n              onClick={() => {\n                window.open('https://home.ndexbio.org/report-a-bug/', '_blank')\n              }}\n              variant=\"h5\"\n              style={{ cursor: 'pointer', margin: '1rem' }}\n            >\n              Click here to report a bug.\n            </Typography>\n          </div>\n        </div>\n      )\n    } else {\n      return this.props.children\n    }\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport theme from './theme'\nimport ErrorBoundary from './components/ErrorBoundary'\n\nimport { QueryClientProvider, QueryCache, QueryClient } from 'react-query'\nimport AppConfig from './model/AppConfig'\n\nconst ROOT_TAG = 'root'\n\n// Avoid HTTP\nconst location = window.location\nif (location.hostname !== 'localhost' && location.protocol !== 'https:') {\n  location.replace(`https:${location.href.substring(location.protocol.length)}`)\n}\n\n// Remove duplicate slashes if necessary\nconst baseUrl = location.href\nconst protocol = baseUrl.split('//')[0]\nconst urlBody = baseUrl.replace(`${protocol}//`, '')\nconst updatedUrl = urlBody.replace(/\\/\\/+/g, '/')\nif (updatedUrl !== urlBody) {\n  location.replace(`${protocol}//${updatedUrl}`)\n}\n\n// This avoids too many fetch calls from remote API\nconst queryConfig = { queries: { refetchOnWindowFocus: false } }\nconst queryCache = new QueryCache()\nconst queryClient = new QueryClient({ queryCache, defaultOptions: queryConfig })\n\nasync function loadResource() {\n  const response = await fetch(`${process.env.PUBLIC_URL}/resource.json`)\n\n  if (response.status !== 200) {\n    throw new Error(\n      'Failed to load resource file.  Could not find NDEx server location',\n    )\n  }\n  const resource = await response.json()\n  console.info('Resource file loaded', resource)\n  const ndexUrl = resource['ndexUrl']\n  const googleClientId = resource['googleClientId']\n  const viewerTh = resource['viewerThreshold']\n  const maxNumObjects = resource['maxNumObjects']\n  const maxEdgeQuery = resource['maxEdgeQuery']\n  const maxDataSize = resource['maxDataSize']\n  const warningThreshold = resource['warningThreshold']\n\n  const config: AppConfig = {\n    ndexUrl,\n    ndexHttps: (ndexUrl === 'localhost')? `http://${ndexUrl}`: `https://${ndexUrl}`,\n    googleClientId,\n    viewerThreshold: viewerTh,\n    maxNumObjects,\n    maxDataSize,\n    maxEdgeQuery,\n    warningThreshold,\n  }\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <QueryClientProvider client={queryClient}>\n          <ErrorBoundary>\n            <App config={config} />\n          </ErrorBoundary>\n        </QueryClientProvider>\n      </ThemeProvider>\n    </React.StrictMode>,\n    document.getElementById(ROOT_TAG),\n  )\n}\n\n// Load resource and start the app.\nloadResource()\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}